{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/objectSpread","data":{"isAsync":false}},{"name":"@babel/runtime/regenerator","data":{"isAsync":false}},{"name":"react-native","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.getCalendarsAsync = getCalendarsAsync;\n  exports.createCalendarAsync = createCalendarAsync;\n  exports.updateCalendarAsync = updateCalendarAsync;\n  exports.deleteCalendarAsync = deleteCalendarAsync;\n  exports.getEventsAsync = getEventsAsync;\n  exports.getEventAsync = getEventAsync;\n  exports.createEventAsync = createEventAsync;\n  exports.updateEventAsync = updateEventAsync;\n  exports.deleteEventAsync = deleteEventAsync;\n  exports.getAttendeesForEventAsync = getAttendeesForEventAsync;\n  exports.createAttendeeAsync = createAttendeeAsync;\n  exports.updateAttendeeAsync = updateAttendeeAsync;\n  exports.deleteAttendeeAsync = deleteAttendeeAsync;\n  exports.getRemindersAsync = getRemindersAsync;\n  exports.getReminderAsync = getReminderAsync;\n  exports.createReminderAsync = createReminderAsync;\n  exports.updateReminderAsync = updateReminderAsync;\n  exports.deleteReminderAsync = deleteReminderAsync;\n  exports.getSourcesAsync = getSourcesAsync;\n  exports.getSourceAsync = getSourceAsync;\n  exports.openEventInCalendar = openEventInCalendar;\n  exports.DEFAULT = exports.ReminderStatus = exports.CalendarAccessLevel = exports.EventAccessLevel = exports.AlarmMethod = exports.AttendeeType = exports.AttendeeStatus = exports.AttendeeRole = exports.SourceType = exports.EventStatus = exports.CalendarType = exports.Availability = exports.Frequency = exports.EntityTypes = void 0;\n\n  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/objectSpread\"));\n\n  var _regenerator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/regenerator\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[3], \"react-native\");\n\n  function getCalendarsAsync(entityType) {\n    return _regenerator.default.async(function getCalendarsAsync$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (entityType) {\n              _context.next = 2;\n              break;\n            }\n\n            return _context.abrupt(\"return\", _reactNative.NativeModules.ExponentCalendar.getCalendarsAsync(null));\n\n          case 2:\n            return _context.abrupt(\"return\", _reactNative.NativeModules.ExponentCalendar.getCalendarsAsync(entityType));\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, this);\n  }\n\n  function createCalendarAsync() {\n    var details,\n        color,\n        newDetails,\n        _args2 = arguments;\n    return _regenerator.default.async(function createCalendarAsync$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            details = _args2.length > 0 && _args2[0] !== undefined ? _args2[0] : {};\n            color = details.color ? (0, _reactNative.processColor)(details.color) : undefined;\n            newDetails = (0, _objectSpread2.default)({}, details, {\n              id: undefined,\n              color: color\n            });\n            return _context2.abrupt(\"return\", _reactNative.NativeModules.ExponentCalendar.saveCalendarAsync(newDetails));\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, this);\n  }\n\n  function updateCalendarAsync(id) {\n    var details,\n        color,\n        newDetails,\n        _args3 = arguments;\n    return _regenerator.default.async(function updateCalendarAsync$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            details = _args3.length > 1 && _args3[1] !== undefined ? _args3[1] : {};\n\n            if (id) {\n              _context3.next = 3;\n              break;\n            }\n\n            throw new Error('updateCalendarAsync must be called with an id (string) of the target calendar');\n\n          case 3:\n            color = details.color ? (0, _reactNative.processColor)(details.color) : undefined;\n\n            if (_reactNative.Platform.OS === 'android') {\n              if (details.hasOwnProperty('source') || details.hasOwnProperty('color') || details.hasOwnProperty('allowsModifications') || details.hasOwnProperty('allowedAvailabilities') || details.hasOwnProperty('isPrimary') || details.hasOwnProperty('ownerAccount') || details.hasOwnProperty('timeZone') || details.hasOwnProperty('allowedReminders') || details.hasOwnProperty('allowedAttendeeTypes') || details.hasOwnProperty('accessLevel')) {\n                console.warn('updateCalendarAsync was called with one or more read-only properties, which will not be updated');\n              }\n            } else {\n              if (details.hasOwnProperty('source') || details.hasOwnProperty('type') || details.hasOwnProperty('entityType') || details.hasOwnProperty('allowsModifications') || details.hasOwnProperty('allowedAvailabilities')) {\n                console.warn('updateCalendarAsync was called with one or more read-only properties, which will not be updated');\n              }\n            }\n\n            newDetails = (0, _objectSpread2.default)({}, details, {\n              id: id,\n              color: color\n            });\n            return _context3.abrupt(\"return\", _reactNative.NativeModules.ExponentCalendar.saveCalendarAsync(newDetails));\n\n          case 7:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, this);\n  }\n\n  function deleteCalendarAsync(id) {\n    return _regenerator.default.async(function deleteCalendarAsync$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            if (id) {\n              _context4.next = 2;\n              break;\n            }\n\n            throw new Error('deleteCalendarAsync must be called with an id (string) of the target calendar');\n\n          case 2:\n            return _context4.abrupt(\"return\", _reactNative.NativeModules.ExponentCalendar.deleteCalendarAsync(id));\n\n          case 3:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, this);\n  }\n\n  function getEventsAsync(calendarIds, startDate, endDate) {\n    return _regenerator.default.async(function getEventsAsync$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            if (startDate) {\n              _context5.next = 2;\n              break;\n            }\n\n            throw new Error('getEventsAsync must be called with a startDate (date) to search for events');\n\n          case 2:\n            if (endDate) {\n              _context5.next = 4;\n              break;\n            }\n\n            throw new Error('getEventsAsync must be called with an endDate (date) to search for events');\n\n          case 4:\n            if (!(!calendarIds || !calendarIds.length)) {\n              _context5.next = 6;\n              break;\n            }\n\n            throw new Error('getEventsAsync must be called with a non-empty array of calendarIds to search');\n\n          case 6:\n            return _context5.abrupt(\"return\", _reactNative.NativeModules.ExponentCalendar.getEventsAsync(startDate, endDate, calendarIds));\n\n          case 7:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, null, this);\n  }\n\n  function getEventAsync(id) {\n    var _ref,\n        _ref$futureEvents,\n        futureEvents,\n        instanceStartDate,\n        _args6 = arguments;\n\n    return _regenerator.default.async(function getEventAsync$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            _ref = _args6.length > 1 && _args6[1] !== undefined ? _args6[1] : {}, _ref$futureEvents = _ref.futureEvents, futureEvents = _ref$futureEvents === void 0 ? false : _ref$futureEvents, instanceStartDate = _ref.instanceStartDate;\n\n            if (id) {\n              _context6.next = 3;\n              break;\n            }\n\n            throw new Error('getEventAsync must be called with an id (string) of the target event');\n\n          case 3:\n            if (!(_reactNative.Platform.OS === 'ios')) {\n              _context6.next = 7;\n              break;\n            }\n\n            return _context6.abrupt(\"return\", _reactNative.NativeModules.ExponentCalendar.getEventByIdAsync(id, instanceStartDate));\n\n          case 7:\n            return _context6.abrupt(\"return\", _reactNative.NativeModules.ExponentCalendar.getEventByIdAsync(id));\n\n          case 8:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, null, this);\n  }\n\n  function createEventAsync(calendarId) {\n    var details,\n        newDetails,\n        _args7 = arguments;\n    return _regenerator.default.async(function createEventAsync$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            details = _args7.length > 1 && _args7[1] !== undefined ? _args7[1] : {};\n\n            if (calendarId) {\n              _context7.next = 3;\n              break;\n            }\n\n            throw new Error('createEventAsync must be called with an id (string) of the target calendar');\n\n          case 3:\n            if (!(_reactNative.Platform.OS === 'android')) {\n              _context7.next = 10;\n              break;\n            }\n\n            if (details.startDate) {\n              _context7.next = 6;\n              break;\n            }\n\n            throw new Error('createEventAsync requires a startDate (Date)');\n\n          case 6:\n            if (details.endDate) {\n              _context7.next = 8;\n              break;\n            }\n\n            throw new Error('createEventAsync requires an endDate (Date)');\n\n          case 8:\n            if (details.timeZone) {\n              _context7.next = 10;\n              break;\n            }\n\n            throw new Error('createEventAsync requires a timeZone (string)');\n\n          case 10:\n            newDetails = (0, _objectSpread2.default)({}, details, {\n              id: undefined,\n              calendarId: calendarId === DEFAULT ? undefined : calendarId\n            });\n            return _context7.abrupt(\"return\", _reactNative.NativeModules.ExponentCalendar.saveEventAsync(newDetails, {}));\n\n          case 12:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, null, this);\n  }\n\n  function updateEventAsync(id) {\n    var details,\n        _ref2,\n        _ref2$futureEvents,\n        futureEvents,\n        instanceStartDate,\n        newDetails,\n        _args8 = arguments;\n\n    return _regenerator.default.async(function updateEventAsync$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            details = _args8.length > 1 && _args8[1] !== undefined ? _args8[1] : {};\n            _ref2 = _args8.length > 2 && _args8[2] !== undefined ? _args8[2] : {}, _ref2$futureEvents = _ref2.futureEvents, futureEvents = _ref2$futureEvents === void 0 ? false : _ref2$futureEvents, instanceStartDate = _ref2.instanceStartDate;\n\n            if (id) {\n              _context8.next = 4;\n              break;\n            }\n\n            throw new Error('updateEventAsync must be called with an id (string) of the target event');\n\n          case 4:\n            if (_reactNative.Platform.OS === 'ios') {\n              if (details.hasOwnProperty('creationDate') || details.hasOwnProperty('lastModifiedDate') || details.hasOwnProperty('originalStartDate') || details.hasOwnProperty('isDetached') || details.hasOwnProperty('status') || details.hasOwnProperty('organizer')) {\n                console.warn('updateEventAsync was called with one or more read-only properties, which will not be updated');\n              }\n            }\n\n            newDetails = (0, _objectSpread2.default)({}, details, {\n              id: id,\n              instanceStartDate: instanceStartDate\n            });\n            return _context8.abrupt(\"return\", _reactNative.NativeModules.ExponentCalendar.saveEventAsync(newDetails, {\n              futureEvents: futureEvents\n            }));\n\n          case 7:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, null, this);\n  }\n\n  function deleteEventAsync(id) {\n    var _ref3,\n        _ref3$futureEvents,\n        futureEvents,\n        instanceStartDate,\n        _args9 = arguments;\n\n    return _regenerator.default.async(function deleteEventAsync$(_context9) {\n      while (1) {\n        switch (_context9.prev = _context9.next) {\n          case 0:\n            _ref3 = _args9.length > 1 && _args9[1] !== undefined ? _args9[1] : {}, _ref3$futureEvents = _ref3.futureEvents, futureEvents = _ref3$futureEvents === void 0 ? false : _ref3$futureEvents, instanceStartDate = _ref3.instanceStartDate;\n\n            if (id) {\n              _context9.next = 3;\n              break;\n            }\n\n            throw new Error('deleteEventAsync must be called with an id (string) of the target event');\n\n          case 3:\n            return _context9.abrupt(\"return\", _reactNative.NativeModules.ExponentCalendar.deleteEventAsync({\n              id: id,\n              instanceStartDate: instanceStartDate\n            }, {\n              futureEvents: futureEvents\n            }));\n\n          case 4:\n          case \"end\":\n            return _context9.stop();\n        }\n      }\n    }, null, this);\n  }\n\n  function getAttendeesForEventAsync(id) {\n    var _ref4,\n        _ref4$futureEvents,\n        futureEvents,\n        instanceStartDate,\n        params,\n        _args10 = arguments;\n\n    return _regenerator.default.async(function getAttendeesForEventAsync$(_context10) {\n      while (1) {\n        switch (_context10.prev = _context10.next) {\n          case 0:\n            _ref4 = _args10.length > 1 && _args10[1] !== undefined ? _args10[1] : {}, _ref4$futureEvents = _ref4.futureEvents, futureEvents = _ref4$futureEvents === void 0 ? false : _ref4$futureEvents, instanceStartDate = _ref4.instanceStartDate;\n\n            if (id) {\n              _context10.next = 3;\n              break;\n            }\n\n            throw new Error('getAttendeesForEventAsync must be called with an id (string) of the target event');\n\n          case 3:\n            params = _reactNative.Platform.OS === 'ios' ? {\n              id: id,\n              instanceStartDate: instanceStartDate\n            } : id;\n            return _context10.abrupt(\"return\", _reactNative.NativeModules.ExponentCalendar.getAttendeesForEventAsync(params));\n\n          case 5:\n          case \"end\":\n            return _context10.stop();\n        }\n      }\n    }, null, this);\n  }\n\n  function createAttendeeAsync(eventId) {\n    var details,\n        newDetails,\n        _args11 = arguments;\n    return _regenerator.default.async(function createAttendeeAsync$(_context11) {\n      while (1) {\n        switch (_context11.prev = _context11.next) {\n          case 0:\n            details = _args11.length > 1 && _args11[1] !== undefined ? _args11[1] : {};\n\n            if (!(_reactNative.Platform.OS === 'ios')) {\n              _context11.next = 3;\n              break;\n            }\n\n            throw new Error('createAttendeeAsync is not available on iOS');\n\n          case 3:\n            if (eventId) {\n              _context11.next = 5;\n              break;\n            }\n\n            throw new Error('createAttendeeAsync must be called with an id (string) of the target event');\n\n          case 5:\n            if (details.email) {\n              _context11.next = 7;\n              break;\n            }\n\n            throw new Error('createAttendeeAsync requires an email (string)');\n\n          case 7:\n            if (details.role) {\n              _context11.next = 9;\n              break;\n            }\n\n            throw new Error('createAttendeeAsync requires a role (string)');\n\n          case 9:\n            if (details.type) {\n              _context11.next = 11;\n              break;\n            }\n\n            throw new Error('createAttendeeAsync requires a type (string)');\n\n          case 11:\n            if (details.status) {\n              _context11.next = 13;\n              break;\n            }\n\n            throw new Error('createAttendeeAsync requires a status (string)');\n\n          case 13:\n            newDetails = (0, _objectSpread2.default)({}, details, {\n              id: undefined\n            });\n            return _context11.abrupt(\"return\", _reactNative.NativeModules.ExponentCalendar.saveAttendeeForEventAsync(newDetails, eventId));\n\n          case 15:\n          case \"end\":\n            return _context11.stop();\n        }\n      }\n    }, null, this);\n  }\n\n  function updateAttendeeAsync(id) {\n    var details,\n        newDetails,\n        _args12 = arguments;\n    return _regenerator.default.async(function updateAttendeeAsync$(_context12) {\n      while (1) {\n        switch (_context12.prev = _context12.next) {\n          case 0:\n            details = _args12.length > 1 && _args12[1] !== undefined ? _args12[1] : {};\n\n            if (!(_reactNative.Platform.OS === 'ios')) {\n              _context12.next = 3;\n              break;\n            }\n\n            throw new Error('updateAttendeeAsync is not available on iOS');\n\n          case 3:\n            if (id) {\n              _context12.next = 5;\n              break;\n            }\n\n            throw new Error('updateAttendeeAsync must be called with an id (string) of the target event');\n\n          case 5:\n            newDetails = (0, _objectSpread2.default)({}, details, {\n              id: id\n            });\n            return _context12.abrupt(\"return\", _reactNative.NativeModules.ExponentCalendar.saveAttendeeForEventAsync(newDetails, null));\n\n          case 7:\n          case \"end\":\n            return _context12.stop();\n        }\n      }\n    }, null, this);\n  }\n\n  function deleteAttendeeAsync(id) {\n    return _regenerator.default.async(function deleteAttendeeAsync$(_context13) {\n      while (1) {\n        switch (_context13.prev = _context13.next) {\n          case 0:\n            if (!(_reactNative.Platform.OS === 'ios')) {\n              _context13.next = 2;\n              break;\n            }\n\n            throw new Error('deleteAttendeeAsync is not available on iOS');\n\n          case 2:\n            if (id) {\n              _context13.next = 4;\n              break;\n            }\n\n            throw new Error('deleteAttendeeAsync must be called with an id (string) of the target event');\n\n          case 4:\n            return _context13.abrupt(\"return\", _reactNative.NativeModules.ExponentCalendar.deleteAttendeeAsync(id));\n\n          case 5:\n          case \"end\":\n            return _context13.stop();\n        }\n      }\n    }, null, this);\n  }\n\n  function getRemindersAsync(calendarIds, status, startDate, endDate) {\n    return _regenerator.default.async(function getRemindersAsync$(_context14) {\n      while (1) {\n        switch (_context14.prev = _context14.next) {\n          case 0:\n            if (!(_reactNative.Platform.OS === 'android')) {\n              _context14.next = 2;\n              break;\n            }\n\n            throw new Error('getRemindersAsync is not available on Android');\n\n          case 2:\n            if (!(status && !startDate)) {\n              _context14.next = 4;\n              break;\n            }\n\n            throw new Error('getRemindersAsync must be called with a startDate (date) to search for reminders');\n\n          case 4:\n            if (!(status && !endDate)) {\n              _context14.next = 6;\n              break;\n            }\n\n            throw new Error('getRemindersAsync must be called with an endDate (date) to search for reminders');\n\n          case 6:\n            if (!(!calendarIds || !calendarIds.length)) {\n              _context14.next = 8;\n              break;\n            }\n\n            throw new Error('getRemindersAsync must be called with a non-empty array of calendarIds to search');\n\n          case 8:\n            return _context14.abrupt(\"return\", _reactNative.NativeModules.ExponentCalendar.getRemindersAsync(startDate || null, endDate || null, calendarIds, status || null));\n\n          case 9:\n          case \"end\":\n            return _context14.stop();\n        }\n      }\n    }, null, this);\n  }\n\n  function getReminderAsync(id) {\n    return _regenerator.default.async(function getReminderAsync$(_context15) {\n      while (1) {\n        switch (_context15.prev = _context15.next) {\n          case 0:\n            if (!(_reactNative.Platform.OS === 'android')) {\n              _context15.next = 2;\n              break;\n            }\n\n            throw new Error('getReminderAsync is not available on Android');\n\n          case 2:\n            if (id) {\n              _context15.next = 4;\n              break;\n            }\n\n            throw new Error('getReminderAsync must be called with an id (string) of the target reminder');\n\n          case 4:\n            return _context15.abrupt(\"return\", _reactNative.NativeModules.ExponentCalendar.getReminderByIdAsync(id));\n\n          case 5:\n          case \"end\":\n            return _context15.stop();\n        }\n      }\n    }, null, this);\n  }\n\n  function createReminderAsync(calendarId) {\n    var details,\n        newDetails,\n        _args16 = arguments;\n    return _regenerator.default.async(function createReminderAsync$(_context16) {\n      while (1) {\n        switch (_context16.prev = _context16.next) {\n          case 0:\n            details = _args16.length > 1 && _args16[1] !== undefined ? _args16[1] : {};\n\n            if (!(_reactNative.Platform.OS === 'android')) {\n              _context16.next = 3;\n              break;\n            }\n\n            throw new Error('createReminderAsync is not available on Android');\n\n          case 3:\n            if (calendarId) {\n              _context16.next = 5;\n              break;\n            }\n\n            throw new Error('createReminderAsync must be called with an id (string) of the target calendar');\n\n          case 5:\n            newDetails = (0, _objectSpread2.default)({}, details, {\n              id: undefined,\n              calendarId: calendarId === DEFAULT ? undefined : calendarId\n            });\n            return _context16.abrupt(\"return\", _reactNative.NativeModules.ExponentCalendar.saveReminderAsync(newDetails));\n\n          case 7:\n          case \"end\":\n            return _context16.stop();\n        }\n      }\n    }, null, this);\n  }\n\n  function updateReminderAsync(id) {\n    var details,\n        newDetails,\n        _args17 = arguments;\n    return _regenerator.default.async(function updateReminderAsync$(_context17) {\n      while (1) {\n        switch (_context17.prev = _context17.next) {\n          case 0:\n            details = _args17.length > 1 && _args17[1] !== undefined ? _args17[1] : {};\n\n            if (!(_reactNative.Platform.OS === 'android')) {\n              _context17.next = 3;\n              break;\n            }\n\n            throw new Error('updateReminderAsync is not available on Android');\n\n          case 3:\n            if (id) {\n              _context17.next = 5;\n              break;\n            }\n\n            throw new Error('updateReminderAsync must be called with an id (string) of the target reminder');\n\n          case 5:\n            if (details.hasOwnProperty('creationDate') || details.hasOwnProperty('lastModifiedDate')) {\n              console.warn('updateReminderAsync was called with one or more read-only properties, which will not be updated');\n            }\n\n            newDetails = (0, _objectSpread2.default)({}, details, {\n              id: id\n            });\n            return _context17.abrupt(\"return\", _reactNative.NativeModules.ExponentCalendar.saveReminderAsync(newDetails));\n\n          case 8:\n          case \"end\":\n            return _context17.stop();\n        }\n      }\n    }, null, this);\n  }\n\n  function deleteReminderAsync(id) {\n    return _regenerator.default.async(function deleteReminderAsync$(_context18) {\n      while (1) {\n        switch (_context18.prev = _context18.next) {\n          case 0:\n            if (!(_reactNative.Platform.OS === 'android')) {\n              _context18.next = 2;\n              break;\n            }\n\n            throw new Error('deleteReminderAsync is not available on Android');\n\n          case 2:\n            if (id) {\n              _context18.next = 4;\n              break;\n            }\n\n            throw new Error('deleteReminderAsync must be called with an id (string) of the target reminder');\n\n          case 4:\n            return _context18.abrupt(\"return\", _reactNative.NativeModules.ExponentCalendar.deleteReminderAsync(id));\n\n          case 5:\n          case \"end\":\n            return _context18.stop();\n        }\n      }\n    }, null, this);\n  }\n\n  function getSourcesAsync() {\n    return _regenerator.default.async(function getSourcesAsync$(_context19) {\n      while (1) {\n        switch (_context19.prev = _context19.next) {\n          case 0:\n            if (!(_reactNative.Platform.OS === 'android')) {\n              _context19.next = 2;\n              break;\n            }\n\n            throw new Error('getSourcesAsync is not available on Android');\n\n          case 2:\n            return _context19.abrupt(\"return\", _reactNative.NativeModules.ExponentCalendar.getSourcesAsync());\n\n          case 3:\n          case \"end\":\n            return _context19.stop();\n        }\n      }\n    }, null, this);\n  }\n\n  function getSourceAsync(id) {\n    return _regenerator.default.async(function getSourceAsync$(_context20) {\n      while (1) {\n        switch (_context20.prev = _context20.next) {\n          case 0:\n            if (!(_reactNative.Platform.OS === 'android')) {\n              _context20.next = 2;\n              break;\n            }\n\n            throw new Error('getSourceAsync is not available on Android');\n\n          case 2:\n            if (id) {\n              _context20.next = 4;\n              break;\n            }\n\n            throw new Error('getSourceAsync must be called with an id (string) of the target source');\n\n          case 4:\n            return _context20.abrupt(\"return\", _reactNative.NativeModules.ExponentCalendar.getSourceByIdAsync(id));\n\n          case 5:\n          case \"end\":\n            return _context20.stop();\n        }\n      }\n    }, null, this);\n  }\n\n  function openEventInCalendar(id) {\n    if (_reactNative.Platform.OS === 'ios') {\n      console.warn('openEventInCalendar is not available on iOS');\n      return;\n    }\n\n    if (!id) {\n      throw new Error('openEventInCalendar must be called with an id (string) of the target event');\n    }\n\n    return _reactNative.NativeModules.ExponentCalendar.openEventInCalendar(parseInt(id, 10));\n  }\n\n  var EntityTypes = {\n    EVENT: 'event',\n    REMINDER: 'reminder'\n  };\n  exports.EntityTypes = EntityTypes;\n  var Frequency = {\n    DAILY: 'daily',\n    WEEKLY: 'weekly',\n    MONTHLY: 'monthly',\n    YEARLY: 'yearly'\n  };\n  exports.Frequency = Frequency;\n  var Availability = {\n    NOT_SUPPORTED: 'notSupported',\n    BUSY: 'busy',\n    FREE: 'free',\n    TENTATIVE: 'tentative',\n    UNAVAILABLE: 'unavailable'\n  };\n  exports.Availability = Availability;\n  var CalendarType = {\n    LOCAL: 'local',\n    CALDAV: 'caldav',\n    EXCHANGE: 'exchange',\n    SUBSCRIBED: 'subscribed',\n    BIRTHDAYS: 'birthdays'\n  };\n  exports.CalendarType = CalendarType;\n  var EventStatus = {\n    NONE: 'none',\n    CONFIRMED: 'confirmed',\n    TENTATIVE: 'tentative',\n    CANCELED: 'canceled'\n  };\n  exports.EventStatus = EventStatus;\n  var SourceType = {\n    LOCAL: 'local',\n    EXCHANGE: 'exchange',\n    CALDAV: 'caldav',\n    MOBILEME: 'mobileme',\n    SUBSCRIBED: 'subscribed',\n    BIRTHDAYS: 'birthdays'\n  };\n  exports.SourceType = SourceType;\n  var AttendeeRole = {\n    UNKNOWN: 'unknown',\n    REQUIRED: 'required',\n    OPTIONAL: 'optional',\n    CHAIR: 'chair',\n    NON_PARTICIPANT: 'nonParticipant',\n    ATTENDEE: 'attendee',\n    ORGANIZER: 'organizer',\n    PERFORMER: 'performer',\n    SPEAKER: 'speaker',\n    NONE: 'none'\n  };\n  exports.AttendeeRole = AttendeeRole;\n  var AttendeeStatus = {\n    UNKNOWN: 'unknown',\n    PENDING: 'pending',\n    ACCEPTED: 'accepted',\n    DECLINED: 'declined',\n    TENTATIVE: 'tentative',\n    DELEGATED: 'delegated',\n    COMPLETED: 'completed',\n    IN_PROCESS: 'inProcess',\n    INVITED: 'invited',\n    NONE: 'none'\n  };\n  exports.AttendeeStatus = AttendeeStatus;\n  var AttendeeType = {\n    UNKNOWN: 'unknown',\n    PERSON: 'person',\n    ROOM: 'room',\n    GROUP: 'group',\n    RESOURCE: 'resource',\n    OPTIONAL: 'optional',\n    REQUIRED: 'required',\n    NONE: 'none'\n  };\n  exports.AttendeeType = AttendeeType;\n  var AlarmMethod = {\n    ALARM: 'alarm',\n    ALERT: 'alert',\n    EMAIL: 'email',\n    SMS: 'sms',\n    DEFAULT: 'default'\n  };\n  exports.AlarmMethod = AlarmMethod;\n  var EventAccessLevel = {\n    CONFIDENTIAL: 'confidential',\n    PRIVATE: 'private',\n    PUBLIC: 'public',\n    DEFAULT: 'default'\n  };\n  exports.EventAccessLevel = EventAccessLevel;\n  var CalendarAccessLevel = {\n    CONTRIBUTOR: 'contributor',\n    EDITOR: 'editor',\n    FREEBUSY: 'freebusy',\n    OVERRIDE: 'override',\n    OWNER: 'owner',\n    READ: 'read',\n    RESPOND: 'respond',\n    ROOT: 'root',\n    NONE: 'none'\n  };\n  exports.CalendarAccessLevel = CalendarAccessLevel;\n  var ReminderStatus = {\n    COMPLETED: 'completed',\n    INCOMPLETE: 'incomplete'\n  };\n  exports.ReminderStatus = ReminderStatus;\n  var DEFAULT = 'default';\n  exports.DEFAULT = DEFAULT;\n});","map":[[34,0,1,0],[36,0,2,7],[36,11,2,22,"getCalendarsAsync"],[36,28,2,7],[36,29,2,40,"entityType"],[36,39,2,7],[37,0,2,7],[38,0,2,7],[39,0,2,7],[40,0,2,7],[41,0,2,7],[41,16,3,9,"entityType"],[41,26,2,7],[42,0,2,7],[43,0,2,7],[44,0,2,7],[46,0,2,7],[46,45,4,15,"NativeModules"],[46,72,4,29,"ExponentCalendar"],[46,88,4,15],[46,89,4,46,"getCalendarsAsync"],[46,106,4,15],[46,107,4,64],[46,111,4,15],[46,112,2,7],[48,0,2,7],[49,0,2,7],[49,45,6,11,"NativeModules"],[49,72,6,25,"ExponentCalendar"],[49,88,6,11],[49,89,6,42,"getCalendarsAsync"],[49,106,6,11],[49,107,6,60,"entityType"],[49,117,6,11],[49,118,2,7],[51,0,2,7],[52,0,2,7],[53,0,2,7],[54,0,2,7],[55,0,2,7],[56,0,2,7],[57,0,2,7],[59,0,8,7],[59,11,8,22,"createCalendarAsync"],[59,30,8,7],[60,0,8,7],[61,0,8,7],[62,0,8,7],[63,0,8,7],[64,0,8,7],[65,0,8,7],[66,0,8,7],[67,0,8,7],[68,0,8,42,"details"],[68,12,8,42,"details"],[68,19,8,7],[68,81,8,52],[68,83,8,7],[69,0,9,8,"color"],[69,12,9,8,"color"],[69,17,8,7],[69,20,9,16,"details"],[69,27,9,23],[69,28,9,24,"color"],[69,33,9,16],[69,36,9,32],[69,67,9,45,"details"],[69,74,9,52],[69,75,9,53,"color"],[69,80,9,32],[69,81,9,16],[69,84,9,62,"undefined"],[69,93,8,7],[70,0,10,10,"newDetails"],[70,12,10,10,"newDetails"],[70,22,8,7],[70,57,10,28,"details"],[70,64,8,7],[71,0,10,37,"id"],[71,14,10,37,"id"],[71,16,10,39],[71,18,10,41,"undefined"],[71,27,8,7],[72,0,10,52,"color"],[72,14,10,52,"color"],[72,19,10,57],[72,21,10,52,"color"],[73,0,8,7],[74,0,8,7],[74,46,11,11,"NativeModules"],[74,73,11,25,"ExponentCalendar"],[74,89,11,11],[74,90,11,42,"saveCalendarAsync"],[74,107,11,11],[74,108,11,60,"newDetails"],[74,118,11,11],[74,119,8,7],[76,0,8,7],[77,0,8,7],[78,0,8,7],[79,0,8,7],[80,0,8,7],[81,0,8,7],[82,0,8,7],[84,0,13,7],[84,11,13,22,"updateCalendarAsync"],[84,30,13,7],[84,31,13,42,"id"],[84,33,13,7],[85,0,13,7],[86,0,13,7],[87,0,13,7],[88,0,13,7],[89,0,13,7],[90,0,13,7],[91,0,13,7],[92,0,13,7],[93,0,13,46,"details"],[93,12,13,46,"details"],[93,19,13,7],[93,81,13,56],[93,83,13,7],[95,0,13,7],[95,16,14,9,"id"],[95,18,13,7],[96,0,13,7],[97,0,13,7],[98,0,13,7],[100,0,13,7],[100,18,15,14],[100,22,15,18,"Error"],[100,27,15,14],[100,28,15,24],[100,107,15,14],[100,108,13,7],[102,0,13,7],[103,0,17,8,"color"],[103,12,17,8,"color"],[103,17,13,7],[103,20,17,16,"details"],[103,27,17,23],[103,28,17,24,"color"],[103,33,17,16],[103,36,17,32],[103,67,17,45,"details"],[103,74,17,52],[103,75,17,53,"color"],[103,80,17,32],[103,81,17,16],[103,84,17,62,"undefined"],[103,93,13,7],[105,0,18,4],[105,16,18,8,"Platform"],[105,38,18,17,"OS"],[105,40,18,8],[105,45,18,24],[105,54,18,4],[105,56,18,35],[106,0,19,8],[106,18,19,12,"details"],[106,25,19,19],[106,26,19,20,"hasOwnProperty"],[106,40,19,12],[106,41,19,35],[106,49,19,12],[106,54,20,12,"details"],[106,61,20,19],[106,62,20,20,"hasOwnProperty"],[106,76,20,12],[106,77,20,35],[106,84,20,12],[106,85,19,12],[106,89,21,12,"details"],[106,96,21,19],[106,97,21,20,"hasOwnProperty"],[106,111,21,12],[106,112,21,35],[106,133,21,12],[106,134,19,12],[106,138,22,12,"details"],[106,145,22,19],[106,146,22,20,"hasOwnProperty"],[106,160,22,12],[106,161,22,35],[106,184,22,12],[106,185,19,12],[106,189,23,12,"details"],[106,196,23,19],[106,197,23,20,"hasOwnProperty"],[106,211,23,12],[106,212,23,35],[106,223,23,12],[106,224,19,12],[106,228,24,12,"details"],[106,235,24,19],[106,236,24,20,"hasOwnProperty"],[106,250,24,12],[106,251,24,35],[106,265,24,12],[106,266,19,12],[106,270,25,12,"details"],[106,277,25,19],[106,278,25,20,"hasOwnProperty"],[106,292,25,12],[106,293,25,35],[106,303,25,12],[106,304,19,12],[106,308,26,12,"details"],[106,315,26,19],[106,316,26,20,"hasOwnProperty"],[106,330,26,12],[106,331,26,35],[106,349,26,12],[106,350,19,12],[106,354,27,12,"details"],[106,361,27,19],[106,362,27,20,"hasOwnProperty"],[106,376,27,12],[106,377,27,35],[106,399,27,12],[106,400,19,12],[106,404,28,12,"details"],[106,411,28,19],[106,412,28,20,"hasOwnProperty"],[106,426,28,12],[106,427,28,35],[106,440,28,12],[106,441,19,8],[106,443,28,51],[107,0,29,12,"console"],[107,16,29,12,"console"],[107,23,29,19],[107,24,29,20,"warn"],[107,28,29,12],[107,29,29,25],[107,126,29,12],[108,0,30,9],[109,0,31,5],[109,13,18,4],[109,19,32,9],[110,0,33,8],[110,18,33,12,"details"],[110,25,33,19],[110,26,33,20,"hasOwnProperty"],[110,40,33,12],[110,41,33,35],[110,49,33,12],[110,54,34,12,"details"],[110,61,34,19],[110,62,34,20,"hasOwnProperty"],[110,76,34,12],[110,77,34,35],[110,83,34,12],[110,84,33,12],[110,88,35,12,"details"],[110,95,35,19],[110,96,35,20,"hasOwnProperty"],[110,110,35,12],[110,111,35,35],[110,123,35,12],[110,124,33,12],[110,128,36,12,"details"],[110,135,36,19],[110,136,36,20,"hasOwnProperty"],[110,150,36,12],[110,151,36,35],[110,172,36,12],[110,173,33,12],[110,177,37,12,"details"],[110,184,37,19],[110,185,37,20,"hasOwnProperty"],[110,199,37,12],[110,200,37,35],[110,223,37,12],[110,224,33,8],[110,226,37,61],[111,0,38,12,"console"],[111,16,38,12,"console"],[111,23,38,19],[111,24,38,20,"warn"],[111,28,38,12],[111,29,38,25],[111,126,38,12],[112,0,39,9],[113,0,40,5],[115,0,41,10,"newDetails"],[115,12,41,10,"newDetails"],[115,22,13,7],[115,57,41,28,"details"],[115,64,13,7],[116,0,41,37,"id"],[116,14,41,37,"id"],[116,16,41,39],[116,18,41,37,"id"],[116,20,13,7],[117,0,41,41,"color"],[117,14,41,41,"color"],[117,19,41,46],[117,21,41,41,"color"],[118,0,13,7],[119,0,13,7],[119,46,42,11,"NativeModules"],[119,73,42,25,"ExponentCalendar"],[119,89,42,11],[119,90,42,42,"saveCalendarAsync"],[119,107,42,11],[119,108,42,60,"newDetails"],[119,118,42,11],[119,119,13,7],[121,0,13,7],[122,0,13,7],[123,0,13,7],[124,0,13,7],[125,0,13,7],[126,0,13,7],[127,0,13,7],[129,0,44,7],[129,11,44,22,"deleteCalendarAsync"],[129,30,44,7],[129,31,44,42,"id"],[129,33,44,7],[130,0,44,7],[131,0,44,7],[132,0,44,7],[133,0,44,7],[134,0,44,7],[134,16,45,9,"id"],[134,18,44,7],[135,0,44,7],[136,0,44,7],[137,0,44,7],[139,0,44,7],[139,18,46,14],[139,22,46,18,"Error"],[139,27,46,14],[139,28,46,24],[139,107,46,14],[139,108,44,7],[141,0,44,7],[142,0,44,7],[142,46,48,11,"NativeModules"],[142,73,48,25,"ExponentCalendar"],[142,89,48,11],[142,90,48,42,"deleteCalendarAsync"],[142,109,48,11],[142,110,48,62,"id"],[142,112,48,11],[142,113,44,7],[144,0,44,7],[145,0,44,7],[146,0,44,7],[147,0,44,7],[148,0,44,7],[149,0,44,7],[150,0,44,7],[152,0,50,7],[152,11,50,22,"getEventsAsync"],[152,25,50,7],[152,26,50,37,"calendarIds"],[152,37,50,7],[152,39,50,50,"startDate"],[152,48,50,7],[152,50,50,61,"endDate"],[152,57,50,7],[153,0,50,7],[154,0,50,7],[155,0,50,7],[156,0,50,7],[157,0,50,7],[157,16,51,9,"startDate"],[157,25,50,7],[158,0,50,7],[159,0,50,7],[160,0,50,7],[162,0,50,7],[162,18,52,14],[162,22,52,18,"Error"],[162,27,52,14],[162,28,52,24],[162,104,52,14],[162,105,50,7],[164,0,50,7],[165,0,50,7],[165,16,54,9,"endDate"],[165,23,50,7],[166,0,50,7],[167,0,50,7],[168,0,50,7],[170,0,50,7],[170,18,55,14],[170,22,55,18,"Error"],[170,27,55,14],[170,28,55,24],[170,103,55,14],[170,104,50,7],[172,0,50,7],[173,0,50,7],[173,18,57,8],[173,19,57,9,"calendarIds"],[173,30,57,8],[173,34,57,24],[173,35,57,25,"calendarIds"],[173,46,57,36],[173,47,57,37,"length"],[173,53,50,7],[174,0,50,7],[175,0,50,7],[176,0,50,7],[178,0,50,7],[178,18,58,14],[178,22,58,18,"Error"],[178,27,58,14],[178,28,58,24],[178,107,58,14],[178,108,50,7],[180,0,50,7],[181,0,50,7],[181,46,60,11,"NativeModules"],[181,73,60,25,"ExponentCalendar"],[181,89,60,11],[181,90,60,42,"getEventsAsync"],[181,104,60,11],[181,105,60,57,"startDate"],[181,114,60,11],[181,116,60,68,"endDate"],[181,123,60,11],[181,125,60,77,"calendarIds"],[181,136,60,11],[181,137,50,7],[183,0,50,7],[184,0,50,7],[185,0,50,7],[186,0,50,7],[187,0,50,7],[188,0,50,7],[189,0,50,7],[191,0,62,7],[191,11,62,22,"getEventAsync"],[191,24,62,7],[191,25,62,36,"id"],[191,27,62,7],[192,0,62,7],[193,0,62,7],[194,0,62,7],[195,0,62,7],[196,0,62,7],[198,0,62,7],[199,0,62,7],[200,0,62,7],[201,0,62,7],[202,0,62,7],[202,78,62,86],[202,80,62,7],[202,107,62,42,"futureEvents"],[202,119,62,7],[202,121,62,42,"futureEvents"],[202,133,62,7],[202,167,62,57],[202,172,62,7],[202,194,62,64,"instanceStartDate"],[202,211,62,7],[202,219,62,64,"instanceStartDate"],[202,236,62,7],[204,0,62,7],[204,16,63,9,"id"],[204,18,62,7],[205,0,62,7],[206,0,62,7],[207,0,62,7],[209,0,62,7],[209,18,64,14],[209,22,64,18,"Error"],[209,27,64,14],[209,28,64,24],[209,98,64,14],[209,99,62,7],[211,0,62,7],[212,0,62,7],[212,18,66,8,"Platform"],[212,40,66,17,"OS"],[212,42,66,8],[212,47,66,24],[212,52,62,7],[213,0,62,7],[214,0,62,7],[215,0,62,7],[217,0,62,7],[217,46,67,15,"NativeModules"],[217,73,67,29,"ExponentCalendar"],[217,89,67,15],[217,90,67,46,"getEventByIdAsync"],[217,107,67,15],[217,108,67,64,"id"],[217,110,67,15],[217,112,67,68,"instanceStartDate"],[217,129,67,15],[217,130,62,7],[219,0,62,7],[220,0,62,7],[220,46,70,15,"NativeModules"],[220,73,70,29,"ExponentCalendar"],[220,89,70,15],[220,90,70,46,"getEventByIdAsync"],[220,107,70,15],[220,108,70,64,"id"],[220,110,70,15],[220,111,62,7],[222,0,62,7],[223,0,62,7],[224,0,62,7],[225,0,62,7],[226,0,62,7],[227,0,62,7],[228,0,62,7],[230,0,73,7],[230,11,73,22,"createEventAsync"],[230,27,73,7],[230,28,73,39,"calendarId"],[230,38,73,7],[231,0,73,7],[232,0,73,7],[233,0,73,7],[234,0,73,7],[235,0,73,7],[236,0,73,7],[237,0,73,7],[238,0,73,51,"details"],[238,12,73,51,"details"],[238,19,73,7],[238,81,73,61],[238,83,73,7],[240,0,73,7],[240,16,74,9,"calendarId"],[240,26,73,7],[241,0,73,7],[242,0,73,7],[243,0,73,7],[245,0,73,7],[245,18,75,14],[245,22,75,18,"Error"],[245,27,75,14],[245,28,75,24],[245,104,75,14],[245,105,73,7],[247,0,73,7],[248,0,73,7],[248,18,77,8,"Platform"],[248,40,77,17,"OS"],[248,42,77,8],[248,47,77,24],[248,56,73,7],[249,0,73,7],[250,0,73,7],[251,0,73,7],[253,0,73,7],[253,16,78,13,"details"],[253,23,78,20],[253,24,78,21,"startDate"],[253,33,73,7],[254,0,73,7],[255,0,73,7],[256,0,73,7],[258,0,73,7],[258,18,79,18],[258,22,79,22,"Error"],[258,27,79,18],[258,28,79,28],[258,74,79,18],[258,75,73,7],[260,0,73,7],[261,0,73,7],[261,16,81,13,"details"],[261,23,81,20],[261,24,81,21,"endDate"],[261,31,73,7],[262,0,73,7],[263,0,73,7],[264,0,73,7],[266,0,73,7],[266,18,82,18],[266,22,82,22,"Error"],[266,27,82,18],[266,28,82,28],[266,73,82,18],[266,74,73,7],[268,0,73,7],[269,0,73,7],[269,16,84,13,"details"],[269,23,84,20],[269,24,84,21,"timeZone"],[269,32,73,7],[270,0,73,7],[271,0,73,7],[272,0,73,7],[274,0,73,7],[274,18,85,18],[274,22,85,22,"Error"],[274,27,85,18],[274,28,85,28],[274,75,85,18],[274,76,73,7],[276,0,73,7],[277,0,88,10,"newDetails"],[277,12,88,10,"newDetails"],[277,22,73,7],[277,57,89,11,"details"],[277,64,73,7],[278,0,90,8,"id"],[278,14,90,8,"id"],[278,16,90,10],[278,18,90,12,"undefined"],[278,27,73,7],[279,0,91,8,"calendarId"],[279,14,91,8,"calendarId"],[279,24,91,18],[279,26,91,20,"calendarId"],[279,36,91,30],[279,41,91,35,"DEFAULT"],[279,48,91,20],[279,51,91,45,"undefined"],[279,60,91,20],[279,63,91,57,"calendarId"],[280,0,73,7],[281,0,73,7],[281,46,93,11,"NativeModules"],[281,73,93,25,"ExponentCalendar"],[281,89,93,11],[281,90,93,42,"saveEventAsync"],[281,104,93,11],[281,105,93,57,"newDetails"],[281,115,93,11],[281,117,93,69],[281,119,93,11],[281,120,73,7],[283,0,73,7],[284,0,73,7],[285,0,73,7],[286,0,73,7],[287,0,73,7],[288,0,73,7],[289,0,73,7],[291,0,95,7],[291,11,95,22,"updateEventAsync"],[291,27,95,7],[291,28,95,39,"id"],[291,30,95,7],[292,0,95,7],[293,0,95,7],[294,0,95,7],[295,0,95,7],[296,0,95,7],[297,0,95,7],[298,0,95,7],[300,0,95,7],[301,0,95,7],[302,0,95,7],[303,0,95,7],[304,0,95,43,"details"],[304,12,95,43,"details"],[304,19,95,7],[304,81,95,53],[304,83,95,7],[305,0,95,7],[305,79,95,103],[305,81,95,7],[305,110,95,59,"futureEvents"],[305,122,95,7],[305,124,95,59,"futureEvents"],[305,136,95,7],[305,171,95,74],[305,176,95,7],[305,199,95,81,"instanceStartDate"],[305,216,95,7],[305,225,95,81,"instanceStartDate"],[305,242,95,7],[307,0,95,7],[307,16,96,9,"id"],[307,18,95,7],[308,0,95,7],[309,0,95,7],[310,0,95,7],[312,0,95,7],[312,18,97,14],[312,22,97,18,"Error"],[312,27,97,14],[312,28,97,24],[312,101,97,14],[312,102,95,7],[314,0,95,7],[315,0,99,4],[315,16,99,8,"Platform"],[315,38,99,17,"OS"],[315,40,99,8],[315,45,99,24],[315,50,99,4],[315,52,99,31],[316,0,100,8],[316,18,100,12,"details"],[316,25,100,19],[316,26,100,20,"hasOwnProperty"],[316,40,100,12],[316,41,100,35],[316,55,100,12],[316,60,101,12,"details"],[316,67,101,19],[316,68,101,20,"hasOwnProperty"],[316,82,101,12],[316,83,101,35],[316,101,101,12],[316,102,100,12],[316,106,102,12,"details"],[316,113,102,19],[316,114,102,20,"hasOwnProperty"],[316,128,102,12],[316,129,102,35],[316,148,102,12],[316,149,100,12],[316,153,103,12,"details"],[316,160,103,19],[316,161,103,20,"hasOwnProperty"],[316,175,103,12],[316,176,103,35],[316,188,103,12],[316,189,100,12],[316,193,104,12,"details"],[316,200,104,19],[316,201,104,20,"hasOwnProperty"],[316,215,104,12],[316,216,104,35],[316,224,104,12],[316,225,100,12],[316,229,105,12,"details"],[316,236,105,19],[316,237,105,20,"hasOwnProperty"],[316,251,105,12],[316,252,105,35],[316,263,105,12],[316,264,100,8],[316,266,105,49],[317,0,106,12,"console"],[317,16,106,12,"console"],[317,23,106,19],[317,24,106,20,"warn"],[317,28,106,12],[317,29,106,25],[317,123,106,12],[318,0,107,9],[319,0,108,5],[321,0,109,10,"newDetails"],[321,12,109,10,"newDetails"],[321,22,95,7],[321,57,109,28,"details"],[321,64,95,7],[322,0,109,37,"id"],[322,14,109,37,"id"],[322,16,109,39],[322,18,109,37,"id"],[322,20,95,7],[323,0,109,41,"instanceStartDate"],[323,14,109,41,"instanceStartDate"],[323,31,109,58],[323,33,109,41,"instanceStartDate"],[324,0,95,7],[325,0,95,7],[325,46,110,11,"NativeModules"],[325,73,110,25,"ExponentCalendar"],[325,89,110,11],[325,90,110,42,"saveEventAsync"],[325,104,110,11],[325,105,110,57,"newDetails"],[325,115,110,11],[325,117,110,69],[326,0,110,71,"futureEvents"],[326,14,110,71,"futureEvents"],[326,26,110,83],[326,28,110,71,"futureEvents"],[327,0,110,69],[327,13,110,11],[327,14,95,7],[329,0,95,7],[330,0,95,7],[331,0,95,7],[332,0,95,7],[333,0,95,7],[334,0,95,7],[335,0,95,7],[337,0,112,7],[337,11,112,22,"deleteEventAsync"],[337,27,112,7],[337,28,112,39,"id"],[337,30,112,7],[338,0,112,7],[339,0,112,7],[340,0,112,7],[341,0,112,7],[342,0,112,7],[344,0,112,7],[345,0,112,7],[346,0,112,7],[347,0,112,7],[348,0,112,7],[348,79,112,89],[348,81,112,7],[348,110,112,45,"futureEvents"],[348,122,112,7],[348,124,112,45,"futureEvents"],[348,136,112,7],[348,171,112,60],[348,176,112,7],[348,199,112,67,"instanceStartDate"],[348,216,112,7],[348,225,112,67,"instanceStartDate"],[348,242,112,7],[350,0,112,7],[350,16,113,9,"id"],[350,18,112,7],[351,0,112,7],[352,0,112,7],[353,0,112,7],[355,0,112,7],[355,18,114,14],[355,22,114,18,"Error"],[355,27,114,14],[355,28,114,24],[355,101,114,14],[355,102,112,7],[357,0,112,7],[358,0,112,7],[358,46,116,11,"NativeModules"],[358,73,116,25,"ExponentCalendar"],[358,89,116,11],[358,90,116,42,"deleteEventAsync"],[358,106,116,11],[358,107,116,59],[359,0,116,61,"id"],[359,14,116,61,"id"],[359,16,116,63],[359,18,116,61,"id"],[359,20,116,59],[360,0,116,65,"instanceStartDate"],[360,14,116,65,"instanceStartDate"],[360,31,116,82],[360,33,116,65,"instanceStartDate"],[361,0,116,59],[361,13,116,11],[361,15,116,86],[362,0,116,88,"futureEvents"],[362,14,116,88,"futureEvents"],[362,26,116,100],[362,28,116,88,"futureEvents"],[363,0,116,86],[363,13,116,11],[363,14,112,7],[365,0,112,7],[366,0,112,7],[367,0,112,7],[368,0,112,7],[369,0,112,7],[370,0,112,7],[371,0,112,7],[373,0,118,7],[373,11,118,22,"getAttendeesForEventAsync"],[373,36,118,7],[373,37,118,48,"id"],[373,39,118,7],[374,0,118,7],[375,0,118,7],[376,0,118,7],[377,0,118,7],[378,0,118,7],[379,0,118,7],[381,0,118,7],[382,0,118,7],[383,0,118,7],[384,0,118,7],[385,0,118,7],[385,82,118,98],[385,84,118,7],[385,113,118,54,"futureEvents"],[385,125,118,7],[385,127,118,54,"futureEvents"],[385,139,118,7],[385,174,118,69],[385,179,118,7],[385,202,118,76,"instanceStartDate"],[385,219,118,7],[385,228,118,76,"instanceStartDate"],[385,245,118,7],[387,0,118,7],[387,16,119,9,"id"],[387,18,118,7],[388,0,118,7],[389,0,118,7],[390,0,118,7],[392,0,118,7],[392,18,120,14],[392,22,120,18,"Error"],[392,27,120,14],[392,28,120,24],[392,110,120,14],[392,111,118,7],[394,0,118,7],[395,0,123,10,"params"],[395,12,123,10,"params"],[395,18,118,7],[395,21,123,19,"Platform"],[395,43,123,28,"OS"],[395,45,123,19],[395,50,123,35],[395,55,123,19],[395,58,123,43],[396,0,123,45,"id"],[396,14,123,45,"id"],[396,16,123,47],[396,18,123,45,"id"],[396,20,123,43],[397,0,123,49,"instanceStartDate"],[397,14,123,49,"instanceStartDate"],[397,31,123,66],[397,33,123,49,"instanceStartDate"],[398,0,123,43],[398,13,123,19],[398,16,123,71,"id"],[398,18,118,7],[399,0,118,7],[399,47,124,11,"NativeModules"],[399,74,124,25,"ExponentCalendar"],[399,90,124,11],[399,91,124,42,"getAttendeesForEventAsync"],[399,116,124,11],[399,117,124,68,"params"],[399,123,124,11],[399,124,118,7],[401,0,118,7],[402,0,118,7],[403,0,118,7],[404,0,118,7],[405,0,118,7],[406,0,118,7],[407,0,118,7],[409,0,126,7],[409,11,126,22,"createAttendeeAsync"],[409,30,126,7],[409,31,126,42,"eventId"],[409,38,126,7],[410,0,126,7],[411,0,126,7],[412,0,126,7],[413,0,126,7],[414,0,126,7],[415,0,126,7],[416,0,126,7],[417,0,126,51,"details"],[417,12,126,51,"details"],[417,19,126,7],[417,84,126,61],[417,86,126,7],[419,0,126,7],[419,18,127,8,"Platform"],[419,40,127,17,"OS"],[419,42,127,8],[419,47,127,24],[419,52,126,7],[420,0,126,7],[421,0,126,7],[422,0,126,7],[424,0,126,7],[424,18,128,14],[424,22,128,18,"Error"],[424,27,128,14],[424,28,128,24],[424,73,128,14],[424,74,126,7],[426,0,126,7],[427,0,126,7],[427,16,130,9,"eventId"],[427,23,126,7],[428,0,126,7],[429,0,126,7],[430,0,126,7],[432,0,126,7],[432,18,131,14],[432,22,131,18,"Error"],[432,27,131,14],[432,28,131,24],[432,104,131,14],[432,105,126,7],[434,0,126,7],[435,0,126,7],[435,16,133,9,"details"],[435,23,133,16],[435,24,133,17,"email"],[435,29,126,7],[436,0,126,7],[437,0,126,7],[438,0,126,7],[440,0,126,7],[440,18,134,14],[440,22,134,18,"Error"],[440,27,134,14],[440,28,134,24],[440,76,134,14],[440,77,126,7],[442,0,126,7],[443,0,126,7],[443,16,136,9,"details"],[443,23,136,16],[443,24,136,17,"role"],[443,28,126,7],[444,0,126,7],[445,0,126,7],[446,0,126,7],[448,0,126,7],[448,18,137,14],[448,22,137,18,"Error"],[448,27,137,14],[448,28,137,24],[448,74,137,14],[448,75,126,7],[450,0,126,7],[451,0,126,7],[451,16,139,9,"details"],[451,23,139,16],[451,24,139,17,"type"],[451,28,126,7],[452,0,126,7],[453,0,126,7],[454,0,126,7],[456,0,126,7],[456,18,140,14],[456,22,140,18,"Error"],[456,27,140,14],[456,28,140,24],[456,74,140,14],[456,75,126,7],[458,0,126,7],[459,0,126,7],[459,16,142,9,"details"],[459,23,142,16],[459,24,142,17,"status"],[459,30,126,7],[460,0,126,7],[461,0,126,7],[462,0,126,7],[464,0,126,7],[464,18,143,14],[464,22,143,18,"Error"],[464,27,143,14],[464,28,143,24],[464,76,143,14],[464,77,126,7],[466,0,126,7],[467,0,145,10,"newDetails"],[467,12,145,10,"newDetails"],[467,22,126,7],[467,57,145,28,"details"],[467,64,126,7],[468,0,145,37,"id"],[468,14,145,37,"id"],[468,16,145,39],[468,18,145,41,"undefined"],[469,0,126,7],[470,0,126,7],[470,47,146,11,"NativeModules"],[470,74,146,25,"ExponentCalendar"],[470,90,146,11],[470,91,146,42,"saveAttendeeForEventAsync"],[470,116,146,11],[470,117,146,68,"newDetails"],[470,127,146,11],[470,129,146,80,"eventId"],[470,136,146,11],[470,137,126,7],[472,0,126,7],[473,0,126,7],[474,0,126,7],[475,0,126,7],[476,0,126,7],[477,0,126,7],[478,0,126,7],[480,0,148,7],[480,11,148,22,"updateAttendeeAsync"],[480,30,148,7],[480,31,148,42,"id"],[480,33,148,7],[481,0,148,7],[482,0,148,7],[483,0,148,7],[484,0,148,7],[485,0,148,7],[486,0,148,7],[487,0,148,7],[488,0,148,46,"details"],[488,12,148,46,"details"],[488,19,148,7],[488,84,148,56],[488,86,148,7],[490,0,148,7],[490,18,149,8,"Platform"],[490,40,149,17,"OS"],[490,42,149,8],[490,47,149,24],[490,52,148,7],[491,0,148,7],[492,0,148,7],[493,0,148,7],[495,0,148,7],[495,18,150,14],[495,22,150,18,"Error"],[495,27,150,14],[495,28,150,24],[495,73,150,14],[495,74,148,7],[497,0,148,7],[498,0,148,7],[498,16,152,9,"id"],[498,18,148,7],[499,0,148,7],[500,0,148,7],[501,0,148,7],[503,0,148,7],[503,18,153,14],[503,22,153,18,"Error"],[503,27,153,14],[503,28,153,24],[503,104,153,14],[503,105,148,7],[505,0,148,7],[506,0,155,10,"newDetails"],[506,12,155,10,"newDetails"],[506,22,148,7],[506,57,155,28,"details"],[506,64,148,7],[507,0,155,37,"id"],[507,14,155,37,"id"],[507,16,155,39],[507,18,155,37,"id"],[508,0,148,7],[509,0,148,7],[509,47,156,11,"NativeModules"],[509,74,156,25,"ExponentCalendar"],[509,90,156,11],[509,91,156,42,"saveAttendeeForEventAsync"],[509,116,156,11],[509,117,156,68,"newDetails"],[509,127,156,11],[509,129,156,80],[509,133,156,11],[509,134,148,7],[511,0,148,7],[512,0,148,7],[513,0,148,7],[514,0,148,7],[515,0,148,7],[516,0,148,7],[517,0,148,7],[519,0,158,7],[519,11,158,22,"deleteAttendeeAsync"],[519,30,158,7],[519,31,158,42,"id"],[519,33,158,7],[520,0,158,7],[521,0,158,7],[522,0,158,7],[523,0,158,7],[524,0,158,7],[524,18,159,8,"Platform"],[524,40,159,17,"OS"],[524,42,159,8],[524,47,159,24],[524,52,158,7],[525,0,158,7],[526,0,158,7],[527,0,158,7],[529,0,158,7],[529,18,160,14],[529,22,160,18,"Error"],[529,27,160,14],[529,28,160,24],[529,73,160,14],[529,74,158,7],[531,0,158,7],[532,0,158,7],[532,16,162,9,"id"],[532,18,158,7],[533,0,158,7],[534,0,158,7],[535,0,158,7],[537,0,158,7],[537,18,163,14],[537,22,163,18,"Error"],[537,27,163,14],[537,28,163,24],[537,104,163,14],[537,105,158,7],[539,0,158,7],[540,0,158,7],[540,47,165,11,"NativeModules"],[540,74,165,25,"ExponentCalendar"],[540,90,165,11],[540,91,165,42,"deleteAttendeeAsync"],[540,110,165,11],[540,111,165,62,"id"],[540,113,165,11],[540,114,158,7],[542,0,158,7],[543,0,158,7],[544,0,158,7],[545,0,158,7],[546,0,158,7],[547,0,158,7],[548,0,158,7],[550,0,167,7],[550,11,167,22,"getRemindersAsync"],[550,28,167,7],[550,29,167,40,"calendarIds"],[550,40,167,7],[550,42,167,53,"status"],[550,48,167,7],[550,50,167,61,"startDate"],[550,59,167,7],[550,61,167,72,"endDate"],[550,68,167,7],[551,0,167,7],[552,0,167,7],[553,0,167,7],[554,0,167,7],[555,0,167,7],[555,18,168,8,"Platform"],[555,40,168,17,"OS"],[555,42,168,8],[555,47,168,24],[555,56,167,7],[556,0,167,7],[557,0,167,7],[558,0,167,7],[560,0,167,7],[560,18,169,14],[560,22,169,18,"Error"],[560,27,169,14],[560,28,169,24],[560,75,169,14],[560,76,167,7],[562,0,167,7],[563,0,167,7],[563,18,171,8,"status"],[563,24,171,14],[563,28,171,18],[563,29,171,19,"startDate"],[563,38,167,7],[564,0,167,7],[565,0,167,7],[566,0,167,7],[568,0,167,7],[568,18,172,14],[568,22,172,18,"Error"],[568,27,172,14],[568,28,172,24],[568,110,172,14],[568,111,167,7],[570,0,167,7],[571,0,167,7],[571,18,174,8,"status"],[571,24,174,14],[571,28,174,18],[571,29,174,19,"endDate"],[571,36,167,7],[572,0,167,7],[573,0,167,7],[574,0,167,7],[576,0,167,7],[576,18,175,14],[576,22,175,18,"Error"],[576,27,175,14],[576,28,175,24],[576,109,175,14],[576,110,167,7],[578,0,167,7],[579,0,167,7],[579,18,177,8],[579,19,177,9,"calendarIds"],[579,30,177,8],[579,34,177,24],[579,35,177,25,"calendarIds"],[579,46,177,36],[579,47,177,37,"length"],[579,53,167,7],[580,0,167,7],[581,0,167,7],[582,0,167,7],[584,0,167,7],[584,18,178,14],[584,22,178,18,"Error"],[584,27,178,14],[584,28,178,24],[584,110,178,14],[584,111,167,7],[586,0,167,7],[587,0,167,7],[587,47,180,11,"NativeModules"],[587,74,180,25,"ExponentCalendar"],[587,90,180,11],[587,91,180,42,"getRemindersAsync"],[587,108,180,11],[587,109,180,60,"startDate"],[587,118,180,69],[587,122,180,73],[587,126,180,11],[587,128,180,79,"endDate"],[587,135,180,86],[587,139,180,90],[587,143,180,11],[587,145,180,96,"calendarIds"],[587,156,180,11],[587,158,180,109,"status"],[587,164,180,115],[587,168,180,119],[587,172,180,11],[587,173,167,7],[589,0,167,7],[590,0,167,7],[591,0,167,7],[592,0,167,7],[593,0,167,7],[594,0,167,7],[595,0,167,7],[597,0,182,7],[597,11,182,22,"getReminderAsync"],[597,27,182,7],[597,28,182,39,"id"],[597,30,182,7],[598,0,182,7],[599,0,182,7],[600,0,182,7],[601,0,182,7],[602,0,182,7],[602,18,183,8,"Platform"],[602,40,183,17,"OS"],[602,42,183,8],[602,47,183,24],[602,56,182,7],[603,0,182,7],[604,0,182,7],[605,0,182,7],[607,0,182,7],[607,18,184,14],[607,22,184,18,"Error"],[607,27,184,14],[607,28,184,24],[607,74,184,14],[607,75,182,7],[609,0,182,7],[610,0,182,7],[610,16,186,9,"id"],[610,18,182,7],[611,0,182,7],[612,0,182,7],[613,0,182,7],[615,0,182,7],[615,18,187,14],[615,22,187,18,"Error"],[615,27,187,14],[615,28,187,24],[615,104,187,14],[615,105,182,7],[617,0,182,7],[618,0,182,7],[618,47,189,11,"NativeModules"],[618,74,189,25,"ExponentCalendar"],[618,90,189,11],[618,91,189,42,"getReminderByIdAsync"],[618,111,189,11],[618,112,189,63,"id"],[618,114,189,11],[618,115,182,7],[620,0,182,7],[621,0,182,7],[622,0,182,7],[623,0,182,7],[624,0,182,7],[625,0,182,7],[626,0,182,7],[628,0,191,7],[628,11,191,22,"createReminderAsync"],[628,30,191,7],[628,31,191,42,"calendarId"],[628,41,191,7],[629,0,191,7],[630,0,191,7],[631,0,191,7],[632,0,191,7],[633,0,191,7],[634,0,191,7],[635,0,191,7],[636,0,191,54,"details"],[636,12,191,54,"details"],[636,19,191,7],[636,84,191,64],[636,86,191,7],[638,0,191,7],[638,18,192,8,"Platform"],[638,40,192,17,"OS"],[638,42,192,8],[638,47,192,24],[638,56,191,7],[639,0,191,7],[640,0,191,7],[641,0,191,7],[643,0,191,7],[643,18,193,14],[643,22,193,18,"Error"],[643,27,193,14],[643,28,193,24],[643,77,193,14],[643,78,191,7],[645,0,191,7],[646,0,191,7],[646,16,195,9,"calendarId"],[646,26,191,7],[647,0,191,7],[648,0,191,7],[649,0,191,7],[651,0,191,7],[651,18,196,14],[651,22,196,18,"Error"],[651,27,196,14],[651,28,196,24],[651,107,196,14],[651,108,191,7],[653,0,191,7],[654,0,198,10,"newDetails"],[654,12,198,10,"newDetails"],[654,22,191,7],[654,57,199,11,"details"],[654,64,191,7],[655,0,200,8,"id"],[655,14,200,8,"id"],[655,16,200,10],[655,18,200,12,"undefined"],[655,27,191,7],[656,0,201,8,"calendarId"],[656,14,201,8,"calendarId"],[656,24,201,18],[656,26,201,20,"calendarId"],[656,36,201,30],[656,41,201,35,"DEFAULT"],[656,48,201,20],[656,51,201,45,"undefined"],[656,60,201,20],[656,63,201,57,"calendarId"],[657,0,191,7],[658,0,191,7],[658,47,203,11,"NativeModules"],[658,74,203,25,"ExponentCalendar"],[658,90,203,11],[658,91,203,42,"saveReminderAsync"],[658,108,203,11],[658,109,203,60,"newDetails"],[658,119,203,11],[658,120,191,7],[660,0,191,7],[661,0,191,7],[662,0,191,7],[663,0,191,7],[664,0,191,7],[665,0,191,7],[666,0,191,7],[668,0,205,7],[668,11,205,22,"updateReminderAsync"],[668,30,205,7],[668,31,205,42,"id"],[668,33,205,7],[669,0,205,7],[670,0,205,7],[671,0,205,7],[672,0,205,7],[673,0,205,7],[674,0,205,7],[675,0,205,7],[676,0,205,46,"details"],[676,12,205,46,"details"],[676,19,205,7],[676,84,205,56],[676,86,205,7],[678,0,205,7],[678,18,206,8,"Platform"],[678,40,206,17,"OS"],[678,42,206,8],[678,47,206,24],[678,56,205,7],[679,0,205,7],[680,0,205,7],[681,0,205,7],[683,0,205,7],[683,18,207,14],[683,22,207,18,"Error"],[683,27,207,14],[683,28,207,24],[683,77,207,14],[683,78,205,7],[685,0,205,7],[686,0,205,7],[686,16,209,9,"id"],[686,18,205,7],[687,0,205,7],[688,0,205,7],[689,0,205,7],[691,0,205,7],[691,18,210,14],[691,22,210,18,"Error"],[691,27,210,14],[691,28,210,24],[691,107,210,14],[691,108,205,7],[693,0,205,7],[694,0,212,4],[694,16,212,8,"details"],[694,23,212,15],[694,24,212,16,"hasOwnProperty"],[694,38,212,8],[694,39,212,31],[694,53,212,8],[694,58,212,50,"details"],[694,65,212,57],[694,66,212,58,"hasOwnProperty"],[694,80,212,50],[694,81,212,73],[694,99,212,50],[694,100,212,4],[694,102,212,94],[695,0,213,8,"console"],[695,14,213,8,"console"],[695,21,213,15],[695,22,213,16,"warn"],[695,26,213,8],[695,27,213,21],[695,124,213,8],[696,0,214,5],[698,0,215,10,"newDetails"],[698,12,215,10,"newDetails"],[698,22,205,7],[698,57,215,28,"details"],[698,64,205,7],[699,0,215,37,"id"],[699,14,215,37,"id"],[699,16,215,39],[699,18,215,37,"id"],[700,0,205,7],[701,0,205,7],[701,47,216,11,"NativeModules"],[701,74,216,25,"ExponentCalendar"],[701,90,216,11],[701,91,216,42,"saveReminderAsync"],[701,108,216,11],[701,109,216,60,"newDetails"],[701,119,216,11],[701,120,205,7],[703,0,205,7],[704,0,205,7],[705,0,205,7],[706,0,205,7],[707,0,205,7],[708,0,205,7],[709,0,205,7],[711,0,218,7],[711,11,218,22,"deleteReminderAsync"],[711,30,218,7],[711,31,218,42,"id"],[711,33,218,7],[712,0,218,7],[713,0,218,7],[714,0,218,7],[715,0,218,7],[716,0,218,7],[716,18,219,8,"Platform"],[716,40,219,17,"OS"],[716,42,219,8],[716,47,219,24],[716,56,218,7],[717,0,218,7],[718,0,218,7],[719,0,218,7],[721,0,218,7],[721,18,220,14],[721,22,220,18,"Error"],[721,27,220,14],[721,28,220,24],[721,77,220,14],[721,78,218,7],[723,0,218,7],[724,0,218,7],[724,16,222,9,"id"],[724,18,218,7],[725,0,218,7],[726,0,218,7],[727,0,218,7],[729,0,218,7],[729,18,223,14],[729,22,223,18,"Error"],[729,27,223,14],[729,28,223,24],[729,107,223,14],[729,108,218,7],[731,0,218,7],[732,0,218,7],[732,47,225,11,"NativeModules"],[732,74,225,25,"ExponentCalendar"],[732,90,225,11],[732,91,225,42,"deleteReminderAsync"],[732,110,225,11],[732,111,225,62,"id"],[732,113,225,11],[732,114,218,7],[734,0,218,7],[735,0,218,7],[736,0,218,7],[737,0,218,7],[738,0,218,7],[739,0,218,7],[740,0,218,7],[742,0,227,7],[742,11,227,22,"getSourcesAsync"],[742,26,227,7],[743,0,227,7],[744,0,227,7],[745,0,227,7],[746,0,227,7],[747,0,227,7],[747,18,228,8,"Platform"],[747,40,228,17,"OS"],[747,42,228,8],[747,47,228,24],[747,56,227,7],[748,0,227,7],[749,0,227,7],[750,0,227,7],[752,0,227,7],[752,18,229,14],[752,22,229,18,"Error"],[752,27,229,14],[752,28,229,24],[752,73,229,14],[752,74,227,7],[754,0,227,7],[755,0,227,7],[755,47,231,11,"NativeModules"],[755,74,231,25,"ExponentCalendar"],[755,90,231,11],[755,91,231,42,"getSourcesAsync"],[755,106,231,11],[755,108,227,7],[757,0,227,7],[758,0,227,7],[759,0,227,7],[760,0,227,7],[761,0,227,7],[762,0,227,7],[763,0,227,7],[765,0,233,7],[765,11,233,22,"getSourceAsync"],[765,25,233,7],[765,26,233,37,"id"],[765,28,233,7],[766,0,233,7],[767,0,233,7],[768,0,233,7],[769,0,233,7],[770,0,233,7],[770,18,234,8,"Platform"],[770,40,234,17,"OS"],[770,42,234,8],[770,47,234,24],[770,56,233,7],[771,0,233,7],[772,0,233,7],[773,0,233,7],[775,0,233,7],[775,18,235,14],[775,22,235,18,"Error"],[775,27,235,14],[775,28,235,24],[775,72,235,14],[775,73,233,7],[777,0,233,7],[778,0,233,7],[778,16,237,9,"id"],[778,18,233,7],[779,0,233,7],[780,0,233,7],[781,0,233,7],[783,0,233,7],[783,18,238,14],[783,22,238,18,"Error"],[783,27,238,14],[783,28,238,24],[783,100,238,14],[783,101,233,7],[785,0,233,7],[786,0,233,7],[786,47,240,11,"NativeModules"],[786,74,240,25,"ExponentCalendar"],[786,90,240,11],[786,91,240,42,"getSourceByIdAsync"],[786,109,240,11],[786,110,240,61,"id"],[786,112,240,11],[786,113,233,7],[788,0,233,7],[789,0,233,7],[790,0,233,7],[791,0,233,7],[792,0,233,7],[793,0,233,7],[794,0,233,7],[796,0,242,7],[796,11,242,16,"openEventInCalendar"],[796,30,242,7],[796,31,242,36,"id"],[796,33,242,7],[796,35,242,40],[797,0,243,4],[797,8,243,8,"Platform"],[797,30,243,17,"OS"],[797,32,243,8],[797,37,243,24],[797,42,243,4],[797,44,243,31],[798,0,244,8,"console"],[798,6,244,8,"console"],[798,13,244,15],[798,14,244,16,"warn"],[798,18,244,8],[798,19,244,21],[798,64,244,8],[799,0,245,8],[800,0,246,5],[802,0,247,4],[802,8,247,8],[802,9,247,9,"id"],[802,11,247,4],[802,13,247,13],[803,0,248,8],[803,12,248,14],[803,16,248,18,"Error"],[803,21,248,14],[803,22,248,24],[803,98,248,14],[803,99,248,8],[804,0,249,5],[806,0,250,4],[806,11,250,11,"NativeModules"],[806,38,250,25,"ExponentCalendar"],[806,54,250,11],[806,55,250,42,"openEventInCalendar"],[806,74,250,11],[806,75,250,62,"parseInt"],[806,83,250,70],[806,84,250,71,"id"],[806,86,250,70],[806,88,250,75],[806,90,250,70],[806,91,250,11],[806,92,250,4],[807,0,251,1],[809,0,252,7],[809,6,252,13,"EntityTypes"],[809,17,252,24],[809,20,252,27],[810,0,253,4,"EVENT"],[810,4,253,4,"EVENT"],[810,9,253,9],[810,11,253,11],[810,18,252,27],[811,0,254,4,"REMINDER"],[811,4,254,4,"REMINDER"],[811,12,254,12],[811,14,254,14],[812,0,252,27],[812,3,252,7],[814,0,256,7],[814,6,256,13,"Frequency"],[814,15,256,22],[814,18,256,25],[815,0,257,4,"DAILY"],[815,4,257,4,"DAILY"],[815,9,257,9],[815,11,257,11],[815,18,256,25],[816,0,258,4,"WEEKLY"],[816,4,258,4,"WEEKLY"],[816,10,258,10],[816,12,258,12],[816,20,256,25],[817,0,259,4,"MONTHLY"],[817,4,259,4,"MONTHLY"],[817,11,259,11],[817,13,259,13],[817,22,256,25],[818,0,260,4,"YEARLY"],[818,4,260,4,"YEARLY"],[818,10,260,10],[818,12,260,12],[819,0,256,25],[819,3,256,7],[821,0,262,7],[821,6,262,13,"Availability"],[821,18,262,25],[821,21,262,28],[822,0,263,4,"NOT_SUPPORTED"],[822,4,263,4,"NOT_SUPPORTED"],[822,17,263,17],[822,19,263,19],[822,33,262,28],[823,0,264,4,"BUSY"],[823,4,264,4,"BUSY"],[823,8,264,8],[823,10,264,10],[823,16,262,28],[824,0,265,4,"FREE"],[824,4,265,4,"FREE"],[824,8,265,8],[824,10,265,10],[824,16,262,28],[825,0,266,4,"TENTATIVE"],[825,4,266,4,"TENTATIVE"],[825,13,266,13],[825,15,266,15],[825,26,262,28],[826,0,267,4,"UNAVAILABLE"],[826,4,267,4,"UNAVAILABLE"],[826,15,267,15],[826,17,267,17],[827,0,262,28],[827,3,262,7],[829,0,269,7],[829,6,269,13,"CalendarType"],[829,18,269,25],[829,21,269,28],[830,0,270,4,"LOCAL"],[830,4,270,4,"LOCAL"],[830,9,270,9],[830,11,270,11],[830,18,269,28],[831,0,271,4,"CALDAV"],[831,4,271,4,"CALDAV"],[831,10,271,10],[831,12,271,12],[831,20,269,28],[832,0,272,4,"EXCHANGE"],[832,4,272,4,"EXCHANGE"],[832,12,272,12],[832,14,272,14],[832,24,269,28],[833,0,273,4,"SUBSCRIBED"],[833,4,273,4,"SUBSCRIBED"],[833,14,273,14],[833,16,273,16],[833,28,269,28],[834,0,274,4,"BIRTHDAYS"],[834,4,274,4,"BIRTHDAYS"],[834,13,274,13],[834,15,274,15],[835,0,269,28],[835,3,269,7],[837,0,276,7],[837,6,276,13,"EventStatus"],[837,17,276,24],[837,20,276,27],[838,0,277,4,"NONE"],[838,4,277,4,"NONE"],[838,8,277,8],[838,10,277,10],[838,16,276,27],[839,0,278,4,"CONFIRMED"],[839,4,278,4,"CONFIRMED"],[839,13,278,13],[839,15,278,15],[839,26,276,27],[840,0,279,4,"TENTATIVE"],[840,4,279,4,"TENTATIVE"],[840,13,279,13],[840,15,279,15],[840,26,276,27],[841,0,280,4,"CANCELED"],[841,4,280,4,"CANCELED"],[841,12,280,12],[841,14,280,14],[842,0,276,27],[842,3,276,7],[844,0,282,7],[844,6,282,13,"SourceType"],[844,16,282,23],[844,19,282,26],[845,0,283,4,"LOCAL"],[845,4,283,4,"LOCAL"],[845,9,283,9],[845,11,283,11],[845,18,282,26],[846,0,284,4,"EXCHANGE"],[846,4,284,4,"EXCHANGE"],[846,12,284,12],[846,14,284,14],[846,24,282,26],[847,0,285,4,"CALDAV"],[847,4,285,4,"CALDAV"],[847,10,285,10],[847,12,285,12],[847,20,282,26],[848,0,286,4,"MOBILEME"],[848,4,286,4,"MOBILEME"],[848,12,286,12],[848,14,286,14],[848,24,282,26],[849,0,287,4,"SUBSCRIBED"],[849,4,287,4,"SUBSCRIBED"],[849,14,287,14],[849,16,287,16],[849,28,282,26],[850,0,288,4,"BIRTHDAYS"],[850,4,288,4,"BIRTHDAYS"],[850,13,288,13],[850,15,288,15],[851,0,282,26],[851,3,282,7],[853,0,290,7],[853,6,290,13,"AttendeeRole"],[853,18,290,25],[853,21,290,28],[854,0,291,4,"UNKNOWN"],[854,4,291,4,"UNKNOWN"],[854,11,291,11],[854,13,291,13],[854,22,290,28],[855,0,292,4,"REQUIRED"],[855,4,292,4,"REQUIRED"],[855,12,292,12],[855,14,292,14],[855,24,290,28],[856,0,293,4,"OPTIONAL"],[856,4,293,4,"OPTIONAL"],[856,12,293,12],[856,14,293,14],[856,24,290,28],[857,0,294,4,"CHAIR"],[857,4,294,4,"CHAIR"],[857,9,294,9],[857,11,294,11],[857,18,290,28],[858,0,295,4,"NON_PARTICIPANT"],[858,4,295,4,"NON_PARTICIPANT"],[858,19,295,19],[858,21,295,21],[858,37,290,28],[859,0,296,4,"ATTENDEE"],[859,4,296,4,"ATTENDEE"],[859,12,296,12],[859,14,296,14],[859,24,290,28],[860,0,297,4,"ORGANIZER"],[860,4,297,4,"ORGANIZER"],[860,13,297,13],[860,15,297,15],[860,26,290,28],[861,0,298,4,"PERFORMER"],[861,4,298,4,"PERFORMER"],[861,13,298,13],[861,15,298,15],[861,26,290,28],[862,0,299,4,"SPEAKER"],[862,4,299,4,"SPEAKER"],[862,11,299,11],[862,13,299,13],[862,22,290,28],[863,0,300,4,"NONE"],[863,4,300,4,"NONE"],[863,8,300,8],[863,10,300,10],[864,0,290,28],[864,3,290,7],[866,0,302,7],[866,6,302,13,"AttendeeStatus"],[866,20,302,27],[866,23,302,30],[867,0,303,4,"UNKNOWN"],[867,4,303,4,"UNKNOWN"],[867,11,303,11],[867,13,303,13],[867,22,302,30],[868,0,304,4,"PENDING"],[868,4,304,4,"PENDING"],[868,11,304,11],[868,13,304,13],[868,22,302,30],[869,0,305,4,"ACCEPTED"],[869,4,305,4,"ACCEPTED"],[869,12,305,12],[869,14,305,14],[869,24,302,30],[870,0,306,4,"DECLINED"],[870,4,306,4,"DECLINED"],[870,12,306,12],[870,14,306,14],[870,24,302,30],[871,0,307,4,"TENTATIVE"],[871,4,307,4,"TENTATIVE"],[871,13,307,13],[871,15,307,15],[871,26,302,30],[872,0,308,4,"DELEGATED"],[872,4,308,4,"DELEGATED"],[872,13,308,13],[872,15,308,15],[872,26,302,30],[873,0,309,4,"COMPLETED"],[873,4,309,4,"COMPLETED"],[873,13,309,13],[873,15,309,15],[873,26,302,30],[874,0,310,4,"IN_PROCESS"],[874,4,310,4,"IN_PROCESS"],[874,14,310,14],[874,16,310,16],[874,27,302,30],[875,0,311,4,"INVITED"],[875,4,311,4,"INVITED"],[875,11,311,11],[875,13,311,13],[875,22,302,30],[876,0,312,4,"NONE"],[876,4,312,4,"NONE"],[876,8,312,8],[876,10,312,10],[877,0,302,30],[877,3,302,7],[879,0,314,7],[879,6,314,13,"AttendeeType"],[879,18,314,25],[879,21,314,28],[880,0,315,4,"UNKNOWN"],[880,4,315,4,"UNKNOWN"],[880,11,315,11],[880,13,315,13],[880,22,314,28],[881,0,316,4,"PERSON"],[881,4,316,4,"PERSON"],[881,10,316,10],[881,12,316,12],[881,20,314,28],[882,0,317,4,"ROOM"],[882,4,317,4,"ROOM"],[882,8,317,8],[882,10,317,10],[882,16,314,28],[883,0,318,4,"GROUP"],[883,4,318,4,"GROUP"],[883,9,318,9],[883,11,318,11],[883,18,314,28],[884,0,319,4,"RESOURCE"],[884,4,319,4,"RESOURCE"],[884,12,319,12],[884,14,319,14],[884,24,314,28],[885,0,320,4,"OPTIONAL"],[885,4,320,4,"OPTIONAL"],[885,12,320,12],[885,14,320,14],[885,24,314,28],[886,0,321,4,"REQUIRED"],[886,4,321,4,"REQUIRED"],[886,12,321,12],[886,14,321,14],[886,24,314,28],[887,0,322,4,"NONE"],[887,4,322,4,"NONE"],[887,8,322,8],[887,10,322,10],[888,0,314,28],[888,3,314,7],[890,0,324,7],[890,6,324,13,"AlarmMethod"],[890,17,324,24],[890,20,324,27],[891,0,325,4,"ALARM"],[891,4,325,4,"ALARM"],[891,9,325,9],[891,11,325,11],[891,18,324,27],[892,0,326,4,"ALERT"],[892,4,326,4,"ALERT"],[892,9,326,9],[892,11,326,11],[892,18,324,27],[893,0,327,4,"EMAIL"],[893,4,327,4,"EMAIL"],[893,9,327,9],[893,11,327,11],[893,18,324,27],[894,0,328,4,"SMS"],[894,4,328,4,"SMS"],[894,7,328,7],[894,9,328,9],[894,14,324,27],[895,0,329,4,"DEFAULT"],[895,4,329,4,"DEFAULT"],[895,11,329,11],[895,13,329,13],[896,0,324,27],[896,3,324,7],[898,0,331,7],[898,6,331,13,"EventAccessLevel"],[898,22,331,29],[898,25,331,32],[899,0,332,4,"CONFIDENTIAL"],[899,4,332,4,"CONFIDENTIAL"],[899,16,332,16],[899,18,332,18],[899,32,331,32],[900,0,333,4,"PRIVATE"],[900,4,333,4,"PRIVATE"],[900,11,333,11],[900,13,333,13],[900,22,331,32],[901,0,334,4,"PUBLIC"],[901,4,334,4,"PUBLIC"],[901,10,334,10],[901,12,334,12],[901,20,331,32],[902,0,335,4,"DEFAULT"],[902,4,335,4,"DEFAULT"],[902,11,335,11],[902,13,335,13],[903,0,331,32],[903,3,331,7],[905,0,337,7],[905,6,337,13,"CalendarAccessLevel"],[905,25,337,32],[905,28,337,35],[906,0,338,4,"CONTRIBUTOR"],[906,4,338,4,"CONTRIBUTOR"],[906,15,338,15],[906,17,338,17],[906,30,337,35],[907,0,339,4,"EDITOR"],[907,4,339,4,"EDITOR"],[907,10,339,10],[907,12,339,12],[907,20,337,35],[908,0,340,4,"FREEBUSY"],[908,4,340,4,"FREEBUSY"],[908,12,340,12],[908,14,340,14],[908,24,337,35],[909,0,341,4,"OVERRIDE"],[909,4,341,4,"OVERRIDE"],[909,12,341,12],[909,14,341,14],[909,24,337,35],[910,0,342,4,"OWNER"],[910,4,342,4,"OWNER"],[910,9,342,9],[910,11,342,11],[910,18,337,35],[911,0,343,4,"READ"],[911,4,343,4,"READ"],[911,8,343,8],[911,10,343,10],[911,16,337,35],[912,0,344,4,"RESPOND"],[912,4,344,4,"RESPOND"],[912,11,344,11],[912,13,344,13],[912,22,337,35],[913,0,345,4,"ROOT"],[913,4,345,4,"ROOT"],[913,8,345,8],[913,10,345,10],[913,16,337,35],[914,0,346,4,"NONE"],[914,4,346,4,"NONE"],[914,8,346,8],[914,10,346,10],[915,0,337,35],[915,3,337,7],[917,0,348,7],[917,6,348,13,"ReminderStatus"],[917,20,348,27],[917,23,348,30],[918,0,349,4,"COMPLETED"],[918,4,349,4,"COMPLETED"],[918,13,349,13],[918,15,349,15],[918,26,348,30],[919,0,350,4,"INCOMPLETE"],[919,4,350,4,"INCOMPLETE"],[919,14,350,14],[919,16,350,16],[920,0,348,30],[920,3,348,7],[922,0,352,7],[922,6,352,13,"DEFAULT"],[922,13,352,20],[922,16,352,23],[922,25,352,7]]},"type":"js/module"}]}