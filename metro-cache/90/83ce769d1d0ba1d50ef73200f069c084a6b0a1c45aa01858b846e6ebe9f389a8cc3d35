{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/extends","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/objectSpread","data":{"isAsync":false}},{"name":"@babel/runtime/regenerator","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false}},{"name":"react-native","data":{"isAsync":false}},{"name":"./AudioAvailability","data":{"isAsync":false}},{"name":"../AV","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.Sound = void 0;\n\n  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/extends\"));\n\n  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/objectSpread\"));\n\n  var _regenerator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/regenerator\"));\n\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/classCallCheck\"));\n\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/createClass\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[6], \"react-native\");\n\n  var _AudioAvailability = _$$_REQUIRE(_dependencyMap[7], \"./AudioAvailability\");\n\n  var _AV = _$$_REQUIRE(_dependencyMap[8], \"../AV\");\n\n  var Sound = function () {\n    function Sound() {\n      var _this = this;\n\n      (0, _classCallCheck2.default)(this, Sound);\n      this._loaded = false;\n      this._loading = false;\n      this._key = -1;\n      this._lastStatusUpdate = null;\n      this._lastStatusUpdateTime = null;\n      this._subscriptions = [];\n      this._eventEmitter = new _reactNative.NativeEventEmitter(_reactNative.NativeModules.ExponentAV);\n      this._coalesceStatusUpdatesInMillis = 100;\n      this._onPlaybackStatusUpdate = null;\n\n      this._internalStatusUpdateCallback = function (_ref) {\n        var key = _ref.key,\n            status = _ref.status;\n\n        if (_this._key === key) {\n          _this._callOnPlaybackStatusUpdateForNewStatus(status);\n        }\n      };\n\n      this._errorCallback = function (error) {\n        _this._clearSubscriptions();\n\n        _this._loaded = false;\n        _this._key = -1;\n\n        _this._callOnPlaybackStatusUpdateForNewStatus((0, _AV.getUnloadedStatus)(error));\n      };\n\n      this.getStatusAsync = function _callee() {\n        var status;\n        return _regenerator.default.async(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!_this._loaded) {\n                  _context.next = 2;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", _this._performOperationAndHandleStatusAsync(function () {\n                  return _reactNative.NativeModules.ExponentAV.getStatusForSound(_this._key);\n                }));\n\n              case 2:\n                status = (0, _AV.getUnloadedStatus)();\n\n                _this._callOnPlaybackStatusUpdateForNewStatus(status);\n\n                return _context.abrupt(\"return\", status);\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, null, this);\n      };\n    }\n\n    (0, _createClass2.default)(Sound, [{\n      key: \"_callOnPlaybackStatusUpdateForNewStatus\",\n      value: function _callOnPlaybackStatusUpdateForNewStatus(status) {\n        var shouldDismissBasedOnCoalescing = this._lastStatusUpdateTime && JSON.stringify(status) === this._lastStatusUpdate && Date.now() - this._lastStatusUpdateTime.getTime() < this._coalesceStatusUpdatesInMillis;\n\n        if (this._onPlaybackStatusUpdate != null && !shouldDismissBasedOnCoalescing) {\n          this._onPlaybackStatusUpdate(status);\n\n          this._lastStatusUpdateTime = new Date();\n          this._lastStatusUpdate = JSON.stringify(status);\n        }\n      }\n    }, {\n      key: \"_performOperationAndHandleStatusAsync\",\n      value: function _performOperationAndHandleStatusAsync(operation) {\n        var status;\n        return _regenerator.default.async(function _performOperationAndHandleStatusAsync$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                (0, _AudioAvailability.throwIfAudioIsDisabled)();\n\n                if (!this._loaded) {\n                  _context2.next = 9;\n                  break;\n                }\n\n                _context2.next = 4;\n                return _regenerator.default.awrap(operation());\n\n              case 4:\n                status = _context2.sent;\n\n                this._callOnPlaybackStatusUpdateForNewStatus(status);\n\n                return _context2.abrupt(\"return\", status);\n\n              case 9:\n                throw new Error('Cannot complete operation because sound is not loaded.');\n\n              case 10:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, null, this);\n      }\n    }, {\n      key: \"_subscribeToNativeStatusUpdateEvents\",\n      value: function _subscribeToNativeStatusUpdateEvents() {\n        if (this._loaded) {\n          this._subscriptions.push(this._eventEmitter.addListener('didUpdatePlaybackStatus', this._internalStatusUpdateCallback));\n        }\n      }\n    }, {\n      key: \"_clearSubscriptions\",\n      value: function _clearSubscriptions() {\n        this._subscriptions.forEach(function (e) {\n          return e.remove();\n        });\n\n        this._subscriptions = [];\n      }\n    }, {\n      key: \"setOnPlaybackStatusUpdate\",\n      value: function setOnPlaybackStatusUpdate(onPlaybackStatusUpdate) {\n        this._onPlaybackStatusUpdate = onPlaybackStatusUpdate;\n        this.getStatusAsync();\n      }\n    }, {\n      key: \"loadAsync\",\n      value: function loadAsync(source) {\n        var _this2 = this;\n\n        var initialStatus,\n            downloadFirst,\n            _ref2,\n            nativeSource,\n            fullInitialStatus,\n            _args3 = arguments;\n\n        return _regenerator.default.async(function loadAsync$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                initialStatus = _args3.length > 1 && _args3[1] !== undefined ? _args3[1] : {};\n                downloadFirst = _args3.length > 2 && _args3[2] !== undefined ? _args3[2] : true;\n                (0, _AudioAvailability.throwIfAudioIsDisabled)();\n\n                if (!this._loading) {\n                  _context3.next = 5;\n                  break;\n                }\n\n                throw new Error('The Sound is already loading.');\n\n              case 5:\n                if (this._loaded) {\n                  _context3.next = 15;\n                  break;\n                }\n\n                this._loading = true;\n                _context3.next = 9;\n                return _regenerator.default.awrap((0, _AV.getNativeSourceAndFullInitialStatusForLoadAsync)(source, initialStatus, downloadFirst));\n\n              case 9:\n                _ref2 = _context3.sent;\n                nativeSource = _ref2.nativeSource;\n                fullInitialStatus = _ref2.fullInitialStatus;\n                return _context3.abrupt(\"return\", new Promise(function (resolve, reject) {\n                  var loadSuccess = function loadSuccess(key, status) {\n                    _this2._key = key;\n                    _this2._loaded = true;\n                    _this2._loading = false;\n\n                    _reactNative.NativeModules.ExponentAV.setErrorCallbackForSound(_this2._key, _this2._errorCallback);\n\n                    _this2._subscribeToNativeStatusUpdateEvents();\n\n                    _this2._callOnPlaybackStatusUpdateForNewStatus(status);\n\n                    resolve(status);\n                  };\n\n                  var loadError = function loadError(error) {\n                    _this2._loading = false;\n                    reject(new Error(error));\n                  };\n\n                  _reactNative.NativeModules.ExponentAV.loadForSound(nativeSource, fullInitialStatus, loadSuccess, loadError);\n                }));\n\n              case 15:\n                throw new Error('The Sound is already loaded.');\n\n              case 16:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, null, this);\n      }\n    }, {\n      key: \"unloadAsync\",\n      value: function unloadAsync() {\n        var key, status;\n        return _regenerator.default.async(function unloadAsync$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                if (!this._loaded) {\n                  _context4.next = 12;\n                  break;\n                }\n\n                this._loaded = false;\n                key = this._key;\n                this._key = -1;\n                _context4.next = 6;\n                return _regenerator.default.awrap(_reactNative.NativeModules.ExponentAV.unloadForSound(key));\n\n              case 6:\n                status = _context4.sent;\n\n                this._callOnPlaybackStatusUpdateForNewStatus(status);\n\n                this._clearSubscriptions();\n\n                return _context4.abrupt(\"return\", status);\n\n              case 12:\n                return _context4.abrupt(\"return\", this.getStatusAsync());\n\n              case 13:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, null, this);\n      }\n    }, {\n      key: \"setStatusAsync\",\n      value: function setStatusAsync(status) {\n        var _this3 = this;\n\n        return _regenerator.default.async(function setStatusAsync$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                (0, _AV.assertStatusValuesInBounds)(status);\n                return _context5.abrupt(\"return\", this._performOperationAndHandleStatusAsync(function () {\n                  return _reactNative.NativeModules.ExponentAV.setStatusForSound(_this3._key, status);\n                }));\n\n              case 2:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, null, this);\n      }\n    }, {\n      key: \"replayAsync\",\n      value: function replayAsync() {\n        var _this4 = this;\n\n        var status,\n            _args6 = arguments;\n        return _regenerator.default.async(function replayAsync$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                status = _args6.length > 0 && _args6[0] !== undefined ? _args6[0] : {};\n\n                if (!(status.positionMillis && status.positionMillis !== 0)) {\n                  _context6.next = 3;\n                  break;\n                }\n\n                throw new Error('Requested position after replay has to be 0.');\n\n              case 3:\n                return _context6.abrupt(\"return\", this._performOperationAndHandleStatusAsync(function () {\n                  return _reactNative.NativeModules.ExponentAV.replaySound(_this4._key, (0, _objectSpread2.default)({}, status, {\n                    positionMillis: 0,\n                    shouldPlay: true\n                  }));\n                }));\n\n              case 4:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, null, this);\n      }\n    }]);\n    return Sound;\n  }();\n\n  exports.Sound = Sound;\n\n  Sound.create = function _callee2(source) {\n    var initialStatus,\n        onPlaybackStatusUpdate,\n        downloadFirst,\n        _args7 = arguments;\n    return _regenerator.default.async(function _callee2$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            initialStatus = _args7.length > 1 && _args7[1] !== undefined ? _args7[1] : {};\n            onPlaybackStatusUpdate = _args7.length > 2 && _args7[2] !== undefined ? _args7[2] : null;\n            downloadFirst = _args7.length > 3 && _args7[3] !== undefined ? _args7[3] : true;\n            console.warn(\"Sound.create is deprecated in favor of Sound.createAsync with the same API except for the new method name\");\n            return _context7.abrupt(\"return\", Sound.createAsync(source, initialStatus, onPlaybackStatusUpdate, downloadFirst));\n\n          case 5:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, null, this);\n  };\n\n  Sound.createAsync = function _callee3(source) {\n    var initialStatus,\n        onPlaybackStatusUpdate,\n        downloadFirst,\n        sound,\n        status,\n        _args8 = arguments;\n    return _regenerator.default.async(function _callee3$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            initialStatus = _args8.length > 1 && _args8[1] !== undefined ? _args8[1] : {};\n            onPlaybackStatusUpdate = _args8.length > 2 && _args8[2] !== undefined ? _args8[2] : null;\n            downloadFirst = _args8.length > 3 && _args8[3] !== undefined ? _args8[3] : true;\n            sound = new Sound();\n            sound.setOnPlaybackStatusUpdate(onPlaybackStatusUpdate);\n            _context8.next = 7;\n            return _regenerator.default.awrap(sound.loadAsync(source, initialStatus, downloadFirst));\n\n          case 7:\n            status = _context8.sent;\n            return _context8.abrupt(\"return\", {\n              sound: sound,\n              status: status\n            });\n\n          case 9:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, null, this);\n  };\n\n  (0, _extends2.default)(Sound.prototype, _AV.PlaybackMixin);\n});","map":[[19,0,1,0],[21,0,2,0],[23,0,3,0],[25,6,4,13,"Sound"],[25,11],[26,0,5,4],[26,21,5,18],[27,0,5,18],[29,0,5,18],[30,0,6,8],[30,11,6,13,"_loaded"],[30,18,6,8],[30,21,6,23],[30,26,6,8],[31,0,7,8],[31,11,7,13,"_loading"],[31,19,7,8],[31,22,7,24],[31,27,7,8],[32,0,8,8],[32,11,8,13,"_key"],[32,15,8,8],[32,18,8,20],[32,19,8,21],[32,20,8,8],[33,0,9,8],[33,11,9,13,"_lastStatusUpdate"],[33,28,9,8],[33,31,9,33],[33,35,9,8],[34,0,10,8],[34,11,10,13,"_lastStatusUpdateTime"],[34,32,10,8],[34,35,10,37],[34,39,10,8],[35,0,11,8],[35,11,11,13,"_subscriptions"],[35,25,11,8],[35,28,11,30],[35,30,11,8],[36,0,12,8],[36,11,12,13,"_eventEmitter"],[36,24,12,8],[36,27,12,29],[36,31,12,33,"NativeEventEmitter"],[36,62,12,29],[36,63,12,52,"NativeModules"],[36,90,12,66,"ExponentAV"],[36,100,12,29],[36,101,12,8],[37,0,13,8],[37,11,13,13,"_coalesceStatusUpdatesInMillis"],[37,41,13,8],[37,44,13,46],[37,47,13,8],[38,0,14,8],[38,11,14,13,"_onPlaybackStatusUpdate"],[38,34,14,8],[38,37,14,39],[38,41,14,8],[40,0,15,8],[40,11,15,13,"_internalStatusUpdateCallback"],[40,40,15,8],[40,43,15,45],[40,59,15,66],[41,0,15,66],[41,12,15,48,"key"],[41,15,15,66],[41,23,15,48,"key"],[41,26,15,66],[42,0,15,66],[42,12,15,53,"status"],[42,18,15,66],[42,26,15,53,"status"],[42,32,15,66],[44,0,16,12],[44,12,16,16],[44,17,16,20],[44,18,16,21,"_key"],[44,22,16,16],[44,27,16,30,"key"],[44,30,16,12],[44,32,16,35],[45,0,17,16],[45,10,17,16],[45,15,17,20],[45,16,17,21,"_callOnPlaybackStatusUpdateForNewStatus"],[45,55,17,16],[45,56,17,61,"status"],[45,62,17,16],[46,0,18,13],[47,0,19,9],[47,7,15,8],[49,0,20,8],[49,11,20,13,"_errorCallback"],[49,25,20,8],[49,28,20,30],[49,38,20,31,"error"],[49,43,20,30],[49,45,20,41],[50,0,21,12],[50,8,21,12],[50,13,21,16],[50,14,21,17,"_clearSubscriptions"],[50,33,21,12],[52,0,22,12],[52,8,22,12],[52,13,22,16],[52,14,22,17,"_loaded"],[52,21,22,12],[52,24,22,27],[52,29,22,12],[53,0,23,12],[53,8,23,12],[53,13,23,16],[53,14,23,17,"_key"],[53,18,23,12],[53,21,23,24],[53,22,23,25],[53,23,23,12],[55,0,24,12],[55,8,24,12],[55,13,24,16],[55,14,24,17,"_callOnPlaybackStatusUpdateForNewStatus"],[55,53,24,12],[55,54,24,57],[55,81,24,75,"error"],[55,86,24,57],[55,87,24,12],[56,0,25,9],[56,7,20,8],[58,0,29,8],[58,11,29,13,"getStatusAsync"],[58,25,29,8],[58,28,29,30],[59,0,29,30],[60,0,29,30],[61,0,29,30],[62,0,29,30],[63,0,29,30],[64,0,29,30],[64,21,30,16],[64,26,30,20],[64,27,30,21,"_loaded"],[64,34,29,30],[65,0,29,30],[66,0,29,30],[67,0,29,30],[69,0,29,30],[69,49,31,23],[69,54,31,27],[69,55,31,28,"_performOperationAndHandleStatusAsync"],[69,92,31,23],[69,93,31,66],[70,0,31,66],[70,25,31,72,"NativeModules"],[70,52,31,86,"ExponentAV"],[70,62,31,72],[70,63,31,97,"getStatusForSound"],[70,80,31,72],[70,81,31,115],[70,86,31,119],[70,87,31,120,"_key"],[70,91,31,72],[70,92,31,66],[71,0,31,66],[71,17,31,23],[71,18,29,30],[73,0,29,30],[74,0,33,18,"status"],[74,16,33,18,"status"],[74,22,29,30],[74,25,33,27],[74,53,29,30],[76,0,34,12],[76,16,34,12],[76,21,34,16],[76,22,34,17,"_callOnPlaybackStatusUpdateForNewStatus"],[76,61,34,12],[76,62,34,57,"status"],[76,68,34,12],[78,0,29,30],[78,49,35,19,"status"],[78,55,29,30],[80,0,29,30],[81,0,29,30],[82,0,29,30],[83,0,29,30],[84,0,29,30],[85,0,29,30],[86,0,29,30],[86,7,29,8],[87,0,37,5],[91,62,39,44,"status"],[91,68],[91,70,39,52],[92,0,40,8],[92,12,40,14,"shouldDismissBasedOnCoalescing"],[92,42,40,44],[92,45,40,47],[92,50,40,52,"_lastStatusUpdateTime"],[92,71,40,47],[92,75,41,12,"JSON"],[92,79,41,16],[92,80,41,17,"stringify"],[92,89,41,12],[92,90,41,27,"status"],[92,96,41,12],[92,102,41,39],[92,107,41,44,"_lastStatusUpdate"],[92,124,40,47],[92,128,42,12,"Date"],[92,132,42,16],[92,133,42,17,"now"],[92,136,42,12],[92,141,42,25],[92,146,42,30,"_lastStatusUpdateTime"],[92,167,42,25],[92,168,42,52,"getTime"],[92,175,42,25],[92,177,42,12],[92,180,42,64],[92,185,42,69,"_coalesceStatusUpdatesInMillis"],[92,215,40,8],[94,0,43,8],[94,12,43,12],[94,17,43,17,"_onPlaybackStatusUpdate"],[94,40,43,12],[94,44,43,44],[94,48,43,12],[94,52,43,52],[94,53,43,53,"shouldDismissBasedOnCoalescing"],[94,83,43,8],[94,85,43,85],[95,0,44,12],[95,15,44,17,"_onPlaybackStatusUpdate"],[95,38,44,12],[95,39,44,41,"status"],[95,45,44,12],[97,0,45,12],[97,15,45,17,"_lastStatusUpdateTime"],[97,36,45,12],[97,39,45,41],[97,43,45,45,"Date"],[97,47,45,41],[97,49,45,12],[98,0,46,12],[98,15,46,17,"_lastStatusUpdate"],[98,32,46,12],[98,35,46,37,"JSON"],[98,39,46,41],[98,40,46,42,"stringify"],[98,49,46,37],[98,50,46,52,"status"],[98,56,46,37],[98,57,46,12],[99,0,47,9],[100,0,48,5],[103,60,49,48,"operation"],[103,69],[109,0,50,8],[111,21,51,12],[111,26,51,17,"_loaded"],[111,33],[117,50,52,33,"operation"],[117,59,52,42],[117,61],[120,0,52,18,"status"],[120,16,52,18,"status"],[120,22],[122,0,53,12],[122,21,53,17,"_callOnPlaybackStatusUpdateForNewStatus"],[122,60,53,12],[122,61,53,57,"status"],[122,67,53,12],[124,50,54,19,"status"],[124,56],[127,22,57,18],[127,26,57,22,"Error"],[127,31,57,18],[127,32,57,28],[127,88,57,18],[127,89],[138,61,61,43],[139,0,62,8],[139,12,62,12],[139,17,62,17,"_loaded"],[139,24,62,8],[139,26,62,26],[140,0,63,12],[140,15,63,17,"_subscriptions"],[140,29,63,12],[140,30,63,32,"push"],[140,34,63,12],[140,35,63,37],[140,40,63,42,"_eventEmitter"],[140,53,63,37],[140,54,63,56,"addListener"],[140,65,63,37],[140,66,63,68],[140,91,63,37],[140,93,63,95],[140,98,63,100,"_internalStatusUpdateCallback"],[140,127,63,37],[140,128,63,12],[141,0,64,9],[142,0,65,5],[145,44,66,26],[146,0,67,8],[146,13,67,13,"_subscriptions"],[146,27,67,8],[146,28,67,28,"forEach"],[146,35,67,8],[146,36,67,36],[146,46,67,36,"e"],[146,47,67,37],[147,0,67,37],[147,17,67,41,"e"],[147,18,67,42],[147,19,67,43,"remove"],[147,25,67,41],[147,27,67,37],[148,0,67,37],[148,9,67,8],[150,0,68,8],[150,13,68,13,"_subscriptions"],[150,27,68,8],[150,30,68,30],[150,32,68,8],[151,0,69,5],[154,48,70,30,"onPlaybackStatusUpdate"],[154,70],[154,72,70,54],[155,0,71,8],[155,13,71,13,"_onPlaybackStatusUpdate"],[155,36,71,8],[155,39,71,39,"onPlaybackStatusUpdate"],[155,61,71,8],[156,0,72,8],[156,13,72,13,"getStatusAsync"],[156,27,72,8],[157,0,73,5],[160,32,75,20,"source"],[160,38],[174,0,75,28,"initialStatus"],[174,16,75,28,"initialStatus"],[174,29],[174,91,75,44],[174,93],[175,0,75,48,"downloadFirst"],[175,16,75,48,"downloadFirst"],[175,29],[175,91,75,64],[175,95],[176,0,76,8],[178,21,77,12],[178,26,77,17,"_loading"],[178,34],[183,22,78,18],[183,26,78,22,"Error"],[183,31,78,18],[183,32,78,28],[183,63,78,18],[183,64],[186,20,80,13],[186,25,80,18,"_loaded"],[186,32],[191,0,81,12],[191,21,81,17,"_loading"],[191,29,81,12],[191,32,81,28],[191,36,81,12],[193,50,82,63],[193,107,82,111,"source"],[193,113,82,63],[193,115,82,119,"initialStatus"],[193,128,82,63],[193,130,82,134,"downloadFirst"],[193,143,82,63],[193,144],[197,0,82,20,"nativeSource"],[197,16,82,20,"nativeSource"],[197,28],[197,37,82,20,"nativeSource"],[197,49],[198,0,82,34,"fullInitialStatus"],[198,16,82,34,"fullInitialStatus"],[198,33],[198,42,82,34,"fullInitialStatus"],[198,59],[199,50,84,19],[199,54,84,23,"Promise"],[199,61,84,19],[199,62,84,31],[199,72,84,32,"resolve"],[199,79,84,31],[199,81,84,41,"reject"],[199,87,84,31],[199,89,84,52],[200,0,85,16],[200,22,85,22,"loadSuccess"],[200,33,85,33],[200,36,85,36],[200,45,85,22,"loadSuccess"],[200,56,85,36],[200,57,85,37,"key"],[200,60,85,36],[200,62,85,42,"status"],[200,68,85,36],[200,70,85,53],[201,0,86,20],[201,20,86,20],[201,26,86,24],[201,27,86,25,"_key"],[201,31,86,20],[201,34,86,32,"key"],[201,37,86,20],[202,0,87,20],[202,20,87,20],[202,26,87,24],[202,27,87,25,"_loaded"],[202,34,87,20],[202,37,87,35],[202,41,87,20],[203,0,88,20],[203,20,88,20],[203,26,88,24],[203,27,88,25,"_loading"],[203,35,88,20],[203,38,88,36],[203,43,88,20],[205,0,89,20,"NativeModules"],[205,47,89,34,"ExponentAV"],[205,57,89,20],[205,58,89,45,"setErrorCallbackForSound"],[205,82,89,20],[205,83,89,70],[205,89,89,74],[205,90,89,75,"_key"],[205,94,89,20],[205,96,89,81],[205,102,89,85],[205,103,89,86,"_errorCallback"],[205,117,89,20],[207,0,90,20],[207,20,90,20],[207,26,90,24],[207,27,90,25,"_subscribeToNativeStatusUpdateEvents"],[207,63,90,20],[209,0,91,20],[209,20,91,20],[209,26,91,24],[209,27,91,25,"_callOnPlaybackStatusUpdateForNewStatus"],[209,66,91,20],[209,67,91,65,"status"],[209,73,91,20],[211,0,92,20,"resolve"],[211,20,92,20,"resolve"],[211,27,92,27],[211,28,92,28,"status"],[211,34,92,27],[211,35,92,20],[212,0,93,17],[212,19,85,16],[214,0,94,16],[214,22,94,22,"loadError"],[214,31,94,31],[214,34,94,34],[214,43,94,22,"loadError"],[214,52,94,34],[214,53,94,35,"error"],[214,58,94,34],[214,60,94,45],[215,0,95,20],[215,20,95,20],[215,26,95,24],[215,27,95,25,"_loading"],[215,35,95,20],[215,38,95,36],[215,43,95,20],[216,0,96,20,"reject"],[216,20,96,20,"reject"],[216,26,96,26],[216,27,96,27],[216,31,96,31,"Error"],[216,36,96,27],[216,37,96,37,"error"],[216,42,96,27],[216,43,96,26],[216,44,96,20],[217,0,97,17],[217,19,94,16],[219,0,98,16,"NativeModules"],[219,45,98,30,"ExponentAV"],[219,55,98,16],[219,56,98,41,"loadForSound"],[219,68,98,16],[219,69,98,54,"nativeSource"],[219,81,98,16],[219,83,98,68,"fullInitialStatus"],[219,100,98,16],[219,102,98,87,"loadSuccess"],[219,113,98,16],[219,115,98,100,"loadError"],[219,124,98,16],[220,0,99,13],[220,17,84,19],[220,18],[223,22,102,18],[223,26,102,22,"Error"],[223,31,102,18],[223,32,102,28],[223,62,102,18],[223,63],[240,21,106,12],[240,26,106,17,"_loaded"],[240,33],[245,0,107,12],[245,21,107,17,"_loaded"],[245,28,107,12],[245,31,107,27],[245,36,107,12],[246,0,108,18,"key"],[246,16,108,18,"key"],[246,19],[246,22,108,24],[246,27,108,29,"_key"],[246,31],[247,0,109,12],[247,21,109,17,"_key"],[247,25,109,12],[247,28,109,24],[247,29,109,25],[247,30,109,12],[249,50,110,33,"NativeModules"],[249,77,110,47,"ExponentAV"],[249,87,110,33],[249,88,110,58,"unloadForSound"],[249,102,110,33],[249,103,110,73,"key"],[249,106,110,33],[249,107],[252,0,110,18,"status"],[252,16,110,18,"status"],[252,22],[254,0,111,12],[254,21,111,17,"_callOnPlaybackStatusUpdateForNewStatus"],[254,60,111,12],[254,61,111,57,"status"],[254,67,111,12],[256,0,112,12],[256,21,112,17,"_clearSubscriptions"],[256,40,112,12],[258,50,113,19,"status"],[258,56],[261,50,116,19],[261,55,116,24,"getStatusAsync"],[261,69,116,19],[261,71],[272,37,120,25,"status"],[272,43],[279,0,121,8],[279,52,121,35,"status"],[279,58,121,8],[280,50,122,15],[280,55,122,20,"_performOperationAndHandleStatusAsync"],[280,92,122,15],[280,93,122,58],[281,0,122,58],[281,25,122,64,"NativeModules"],[281,52,122,78,"ExponentAV"],[281,62,122,64],[281,63,122,89,"setStatusForSound"],[281,80,122,64],[281,81,122,107],[281,87,122,111],[281,88,122,112,"_key"],[281,92,122,64],[281,94,122,118,"status"],[281,100,122,64],[281,101,122,58],[282,0,122,58],[282,17,122,15],[282,18],[302,0,124,22,"status"],[302,16,124,22,"status"],[302,22],[302,84,124,31],[302,86],[304,22,125,12,"status"],[304,28,125,18],[304,29,125,19,"positionMillis"],[304,43,125,12],[304,47,125,37,"status"],[304,53,125,43],[304,54,125,44,"positionMillis"],[304,68,125,37],[304,73,125,63],[304,74],[309,22,126,18],[309,26,126,22,"Error"],[309,31,126,18],[309,32,126,28],[309,78,126,18],[309,79],[312,50,128,15],[312,55,128,20,"_performOperationAndHandleStatusAsync"],[312,92,128,15],[312,93,128,58],[313,0,128,58],[313,25,128,64,"NativeModules"],[313,52,128,78,"ExponentAV"],[313,62,128,64],[313,63,128,89,"replaySound"],[313,74,128,64],[313,75,128,101],[313,81,128,105],[313,82,128,106,"_key"],[313,86,128,64],[313,120,129,15,"status"],[313,126,128,64],[314,0,130,12,"positionMillis"],[314,20,130,12,"positionMillis"],[314,34,130,26],[314,36,130,28],[314,37,128,64],[315,0,131,12,"shouldPlay"],[315,20,131,12,"shouldPlay"],[315,30,131,22],[315,32,131,24],[316,0,128,64],[316,21,128,58],[317,0,128,58],[317,17,128,15],[317,18],[332,0,135,0,"Sound"],[332,2,135,0,"Sound"],[332,7,135,5],[332,8,135,6,"create"],[332,14,135,0],[332,17,135,15],[332,35,135,22,"source"],[332,41,135,15],[333,0,135,15],[334,0,135,15],[335,0,135,15],[336,0,135,15],[337,0,135,15],[338,0,135,15],[339,0,135,15],[340,0,135,15],[341,0,135,30,"initialStatus"],[341,12,135,30,"initialStatus"],[341,25,135,15],[341,87,135,46],[341,89,135,15],[342,0,135,50,"onPlaybackStatusUpdate"],[342,12,135,50,"onPlaybackStatusUpdate"],[342,34,135,15],[342,96,135,75],[342,100,135,15],[343,0,135,81,"downloadFirst"],[343,12,135,81,"downloadFirst"],[343,25,135,15],[343,87,135,97],[343,91,135,15],[344,0,136,4,"console"],[344,12,136,4,"console"],[344,19,136,11],[344,20,136,12,"warn"],[344,24,136,4],[345,0,135,15],[345,46,137,11,"Sound"],[345,51,137,16],[345,52,137,17,"createAsync"],[345,63,137,11],[345,64,137,29,"source"],[345,70,137,11],[345,72,137,37,"initialStatus"],[345,85,137,11],[345,87,137,52,"onPlaybackStatusUpdate"],[345,109,137,11],[345,111,137,76,"downloadFirst"],[345,124,137,11],[345,125,135,15],[347,0,135,15],[348,0,135,15],[349,0,135,15],[350,0,135,15],[351,0,135,15],[352,0,135,15],[353,0,135,15],[353,3,135,0],[355,0,139,0,"Sound"],[355,2,139,0,"Sound"],[355,7,139,5],[355,8,139,6,"createAsync"],[355,19,139,0],[355,22,139,20],[355,40,139,27,"source"],[355,46,139,20],[356,0,139,20],[357,0,139,20],[358,0,139,20],[359,0,139,20],[360,0,139,20],[361,0,139,20],[362,0,139,20],[363,0,139,20],[364,0,139,20],[365,0,139,20],[366,0,139,35,"initialStatus"],[366,12,139,35,"initialStatus"],[366,25,139,20],[366,87,139,51],[366,89,139,20],[367,0,139,55,"onPlaybackStatusUpdate"],[367,12,139,55,"onPlaybackStatusUpdate"],[367,34,139,20],[367,96,139,80],[367,100,139,20],[368,0,139,86,"downloadFirst"],[368,12,139,86,"downloadFirst"],[368,25,139,20],[368,87,139,102],[368,91,139,20],[369,0,140,10,"sound"],[369,12,140,10,"sound"],[369,17,139,20],[369,20,140,18],[369,24,140,22,"Sound"],[369,29,140,18],[369,31,139,20],[370,0,141,4,"sound"],[370,12,141,4,"sound"],[370,17,141,9],[370,18,141,10,"setOnPlaybackStatusUpdate"],[370,43,141,4],[370,44,141,36,"onPlaybackStatusUpdate"],[370,66,141,4],[371,0,139,20],[372,0,139,20],[372,46,142,25,"sound"],[372,51,142,30],[372,52,142,31,"loadAsync"],[372,61,142,25],[372,62,142,41,"source"],[372,68,142,25],[372,70,142,49,"initialStatus"],[372,83,142,25],[372,85,142,64,"downloadFirst"],[372,98,142,25],[372,99,139,20],[374,0,139,20],[375,0,142,10,"status"],[375,12,142,10,"status"],[375,18,139,20],[376,0,139,20],[376,46,143,11],[377,0,143,13,"sound"],[377,14,143,13,"sound"],[377,19,143,18],[377,21,143,13,"sound"],[377,26,143,11],[378,0,143,20,"status"],[378,14,143,20,"status"],[378,20,143,26],[378,22,143,20,"status"],[379,0,143,11],[379,13,139,20],[381,0,139,20],[382,0,139,20],[383,0,139,20],[384,0,139,20],[385,0,139,20],[386,0,139,20],[387,0,139,20],[387,3,139,0],[389,0,145,0],[389,25,145,14,"Sound"],[389,30,145,19],[389,31,145,20,"prototype"],[389,40,145,0],[389,42,145,31,"PlaybackMixin"],[389,59,145,0]]},"type":"js/module"}]}