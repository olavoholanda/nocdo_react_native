{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/regenerator","data":{"isAsync":false}},{"name":"expo-errors","data":{"isAsync":false}},{"name":"fbemitter","data":{"isAsync":false}},{"name":"react-native","data":{"isAsync":false}},{"name":"./ExponentUpdates","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.reload = reload;\n  exports.reloadFromCache = reloadFromCache;\n  exports.checkForUpdateAsync = checkForUpdateAsync;\n  exports.fetchUpdateAsync = fetchUpdateAsync;\n  exports.addListener = addListener;\n  exports.EventType = void 0;\n\n  var _regenerator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/regenerator\"));\n\n  var _expoErrors = _$$_REQUIRE(_dependencyMap[2], \"expo-errors\");\n\n  var _fbemitter = _$$_REQUIRE(_dependencyMap[3], \"fbemitter\");\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[4], \"react-native\");\n\n  var _ExponentUpdates = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"./ExponentUpdates\"));\n\n  function reload() {\n    return _regenerator.default.async(function reload$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regenerator.default.awrap(_ExponentUpdates.default.reload());\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, this);\n  }\n\n  function reloadFromCache() {\n    return _regenerator.default.async(function reloadFromCache$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regenerator.default.awrap(_ExponentUpdates.default.reloadFromCache());\n\n          case 2:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, this);\n  }\n\n  function checkForUpdateAsync() {\n    var result, returnObj;\n    return _regenerator.default.async(function checkForUpdateAsync$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            if (_ExponentUpdates.default.checkForUpdateAsync) {\n              _context3.next = 2;\n              break;\n            }\n\n            throw new _expoErrors.UnavailabilityError('Updates', 'checkForUpdateAsync');\n\n          case 2:\n            _context3.next = 4;\n            return _regenerator.default.awrap(_ExponentUpdates.default.checkForUpdateAsync());\n\n          case 4:\n            result = _context3.sent;\n            returnObj = {\n              isAvailable: !!result\n            };\n\n            if (result) {\n              returnObj.manifest = typeof result === 'string' ? JSON.parse(result) : result;\n            }\n\n            return _context3.abrupt(\"return\", returnObj);\n\n          case 8:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, this);\n  }\n\n  function fetchUpdateAsync() {\n    var _ref,\n        eventListener,\n        subscription,\n        result,\n        returnObj,\n        _args4 = arguments;\n\n    return _regenerator.default.async(function fetchUpdateAsync$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _ref = _args4.length > 0 && _args4[0] !== undefined ? _args4[0] : {}, eventListener = _ref.eventListener;\n\n            if (_ExponentUpdates.default.fetchUpdateAsync) {\n              _context4.next = 3;\n              break;\n            }\n\n            throw new _expoErrors.UnavailabilityError('Updates', 'fetchUpdateAsync');\n\n          case 3:\n            if (eventListener && typeof eventListener === 'function') {\n              subscription = addListener(eventListener);\n            }\n\n            _context4.prev = 4;\n            _context4.next = 7;\n            return _regenerator.default.awrap(_ExponentUpdates.default.fetchUpdateAsync());\n\n          case 7:\n            result = _context4.sent;\n\n          case 8:\n            _context4.prev = 8;\n            subscription && subscription.remove();\n            return _context4.finish(8);\n\n          case 11:\n            returnObj = {\n              isNew: !!result\n            };\n\n            if (result) {\n              returnObj.manifest = typeof result === 'string' ? JSON.parse(result) : result;\n            }\n\n            return _context4.abrupt(\"return\", returnObj);\n\n          case 14:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, this, [[4,, 8, 11]]);\n  }\n\n  var _emitter;\n\n  function _getEmitter() {\n    if (!_emitter) {\n      _emitter = new _fbemitter.EventEmitter();\n\n      _reactNative.DeviceEventEmitter.addListener('Exponent.nativeUpdatesEvent', _emitEvent);\n    }\n\n    return _emitter;\n  }\n\n  function _emitEvent(params) {\n    var newParams = params;\n\n    if (typeof params === 'string') {\n      newParams = JSON.parse(params);\n    }\n\n    if (newParams.manifestString) {\n      newParams.manifest = JSON.parse(newParams.manifestString);\n      delete newParams.manifestString;\n    }\n\n    if (!_emitter) {\n      throw new Error(\"EventEmitter must be initialized to use from its listener\");\n    }\n\n    _emitter.emit('Exponent.updatesEvent', newParams);\n  }\n\n  function addListener(listener) {\n    var emitter = _getEmitter();\n\n    return emitter.addListener('Exponent.updatesEvent', listener);\n  }\n\n  var EventType = {\n    DOWNLOAD_STARTED: 'downloadStart',\n    DOWNLOAD_PROGRESS: 'downloadProgress',\n    DOWNLOAD_FINISHED: 'downloadFinished',\n    NO_UPDATE_AVAILABLE: 'noUpdateAvailable',\n    ERROR: 'error'\n  };\n  exports.EventType = EventType;\n});","map":[[16,0,1,0],[18,0,2,0],[20,0,3,0],[22,0,4,0],[24,0,5,7],[24,11,5,22,"reload"],[24,17,5,7],[25,0,5,7],[26,0,5,7],[27,0,5,7],[28,0,5,7],[29,0,5,7],[30,0,5,7],[30,46,6,10,"ExponentUpdates"],[30,71,6,26,"reload"],[30,77,6,10],[30,79,5,7],[32,0,5,7],[33,0,5,7],[34,0,5,7],[35,0,5,7],[36,0,5,7],[37,0,5,7],[38,0,5,7],[40,0,8,7],[40,11,8,22,"reloadFromCache"],[40,26,8,7],[41,0,8,7],[42,0,8,7],[43,0,8,7],[44,0,8,7],[45,0,8,7],[46,0,8,7],[46,46,9,10,"ExponentUpdates"],[46,71,9,26,"reloadFromCache"],[46,86,9,10],[46,88,8,7],[48,0,8,7],[49,0,8,7],[50,0,8,7],[51,0,8,7],[52,0,8,7],[53,0,8,7],[54,0,8,7],[56,0,11,7],[56,11,11,22,"checkForUpdateAsync"],[56,30,11,7],[57,0,11,7],[58,0,11,7],[59,0,11,7],[60,0,11,7],[61,0,11,7],[62,0,11,7],[62,16,12,9,"ExponentUpdates"],[62,41,12,25,"checkForUpdateAsync"],[62,60,11,7],[63,0,11,7],[64,0,11,7],[65,0,11,7],[67,0,11,7],[67,18,13,14],[67,22,13,18,"UnavailabilityError"],[67,53,13,14],[67,54,13,38],[67,63,13,14],[67,65,13,49],[67,86,13,14],[67,87,11,7],[69,0,11,7],[70,0,11,7],[71,0,11,7],[71,46,15,25,"ExponentUpdates"],[71,71,15,41,"checkForUpdateAsync"],[71,90,15,25],[71,92,11,7],[73,0,11,7],[74,0,15,10,"result"],[74,12,15,10,"result"],[74,18,11,7],[75,0,16,8,"returnObj"],[75,12,16,8,"returnObj"],[75,21,11,7],[75,24,16,20],[76,0,17,8,"isAvailable"],[76,14,17,8,"isAvailable"],[76,25,17,19],[76,27,17,21],[76,28,17,22],[76,29,17,23,"result"],[77,0,16,20],[77,13,11,7],[79,0,19,4],[79,16,19,8,"result"],[79,22,19,4],[79,24,19,16],[80,0,20,8,"returnObj"],[80,14,20,8,"returnObj"],[80,23,20,17],[80,24,20,18,"manifest"],[80,32,20,8],[80,35,20,29],[80,42,20,36,"result"],[80,48,20,29],[80,53,20,47],[80,61,20,29],[80,64,20,58,"JSON"],[80,68,20,62],[80,69,20,63,"parse"],[80,74,20,58],[80,75,20,69,"result"],[80,81,20,58],[80,82,20,29],[80,85,20,79,"result"],[80,91,20,8],[81,0,21,5],[83,0,11,7],[83,46,22,11,"returnObj"],[83,55,11,7],[85,0,11,7],[86,0,11,7],[87,0,11,7],[88,0,11,7],[89,0,11,7],[90,0,11,7],[91,0,11,7],[93,0,24,7],[93,11,24,22,"fetchUpdateAsync"],[93,27,24,7],[94,0,24,7],[95,0,24,7],[96,0,24,7],[97,0,24,7],[98,0,24,7],[99,0,24,7],[101,0,24,7],[102,0,24,7],[103,0,24,7],[104,0,24,7],[105,0,24,7],[105,78,24,59],[105,80,24,7],[105,82,24,41,"eventListener"],[105,95,24,7],[105,103,24,41,"eventListener"],[105,116,24,7],[107,0,24,7],[107,16,25,9,"ExponentUpdates"],[107,41,25,25,"fetchUpdateAsync"],[107,57,24,7],[108,0,24,7],[109,0,24,7],[110,0,24,7],[112,0,24,7],[112,18,26,14],[112,22,26,18,"UnavailabilityError"],[112,53,26,14],[112,54,26,38],[112,63,26,14],[112,65,26,49],[112,83,26,14],[112,84,24,7],[114,0,24,7],[115,0,30,4],[115,16,30,8,"eventListener"],[115,29,30,21],[115,33,30,25],[115,40,30,32,"eventListener"],[115,53,30,25],[115,58,30,50],[115,68,30,4],[115,70,30,62],[116,0,31,8,"subscription"],[116,14,31,8,"subscription"],[116,26,31,20],[116,29,31,23,"addListener"],[116,40,31,34],[116,41,31,35,"eventListener"],[116,54,31,34],[116,55,31,8],[117,0,32,5],[119,0,24,7],[120,0,24,7],[121,0,24,7],[121,46,34,23,"ExponentUpdates"],[121,71,34,39,"fetchUpdateAsync"],[121,87,34,23],[121,89,24,7],[123,0,24,7],[124,0,34,8,"result"],[124,12,34,8,"result"],[124,18,24,7],[126,0,24,7],[127,0,24,7],[128,0,37,8,"subscription"],[128,12,37,8,"subscription"],[128,24,37,20],[128,28,37,24,"subscription"],[128,40,37,36],[128,41,37,37,"remove"],[128,47,37,24],[128,49,37,8],[129,0,24,7],[131,0,24,7],[132,0,39,8,"returnObj"],[132,12,39,8,"returnObj"],[132,21,24,7],[132,24,39,20],[133,0,40,8,"isNew"],[133,14,40,8,"isNew"],[133,19,40,13],[133,21,40,15],[133,22,40,16],[133,23,40,17,"result"],[134,0,39,20],[134,13,24,7],[136,0,42,4],[136,16,42,8,"result"],[136,22,42,4],[136,24,42,16],[137,0,43,8,"returnObj"],[137,14,43,8,"returnObj"],[137,23,43,17],[137,24,43,18,"manifest"],[137,32,43,8],[137,35,43,29],[137,42,43,36,"result"],[137,48,43,29],[137,53,43,47],[137,61,43,29],[137,64,43,58,"JSON"],[137,68,43,62],[137,69,43,63,"parse"],[137,74,43,58],[137,75,43,69,"result"],[137,81,43,58],[137,82,43,29],[137,85,43,79,"result"],[137,91,43,8],[138,0,44,5],[140,0,24,7],[140,46,45,11,"returnObj"],[140,55,24,7],[142,0,24,7],[143,0,24,7],[144,0,24,7],[145,0,24,7],[146,0,24,7],[147,0,24,7],[148,0,24,7],[150,0,47,0],[150,6,47,4,"_emitter"],[150,14,47,0],[152,0,48,0],[152,11,48,9,"_getEmitter"],[152,22,48,0],[152,25,48,23],[153,0,49,4],[153,8,49,8],[153,9,49,9,"_emitter"],[153,17,49,4],[153,19,49,19],[154,0,50,8,"_emitter"],[154,6,50,8,"_emitter"],[154,14,50,16],[154,17,50,19],[154,21,50,23,"EventEmitter"],[154,44,50,19],[154,46,50,8],[156,0,51,8,"DeviceEventEmitter"],[156,38,51,27,"addListener"],[156,49,51,8],[156,50,51,39],[156,79,51,8],[156,81,51,70,"_emitEvent"],[156,91,51,8],[157,0,52,5],[159,0,53,4],[159,11,53,11,"_emitter"],[159,19,53,4],[160,0,54,1],[162,0,55,0],[162,11,55,9,"_emitEvent"],[162,21,55,0],[162,22,55,20,"params"],[162,28,55,0],[162,30,55,28],[163,0,56,4],[163,8,56,8,"newParams"],[163,17,56,17],[163,20,56,20,"params"],[163,26,56,4],[165,0,57,4],[165,8,57,8],[165,15,57,15,"params"],[165,21,57,8],[165,26,57,26],[165,34,57,4],[165,36,57,36],[166,0,58,8,"newParams"],[166,6,58,8,"newParams"],[166,15,58,17],[166,18,58,20,"JSON"],[166,22,58,24],[166,23,58,25,"parse"],[166,28,58,20],[166,29,58,31,"params"],[166,35,58,20],[166,36,58,8],[167,0,59,5],[169,0,60,4],[169,8,60,8,"newParams"],[169,17,60,17],[169,18,60,18,"manifestString"],[169,32,60,4],[169,34,60,34],[170,0,61,8,"newParams"],[170,6,61,8,"newParams"],[170,15,61,17],[170,16,61,18,"manifest"],[170,24,61,8],[170,27,61,29,"JSON"],[170,31,61,33],[170,32,61,34,"parse"],[170,37,61,29],[170,38,61,40,"newParams"],[170,47,61,49],[170,48,61,50,"manifestString"],[170,62,61,29],[170,63,61,8],[171,0,62,8],[171,13,62,15,"newParams"],[171,22,62,24],[171,23,62,25,"manifestString"],[171,37,62,8],[172,0,63,5],[174,0,64,4],[174,8,64,8],[174,9,64,9,"_emitter"],[174,17,64,4],[174,19,64,19],[175,0,65,8],[175,12,65,14],[175,16,65,18,"Error"],[175,21,65,14],[175,82,65,8],[176,0,66,5],[178,0,67,4,"_emitter"],[178,4,67,4,"_emitter"],[178,12,67,12],[178,13,67,13,"emit"],[178,17,67,4],[178,18,67,18],[178,41,67,4],[178,43,67,43,"newParams"],[178,52,67,4],[179,0,68,1],[181,0,69,7],[181,11,69,16,"addListener"],[181,22,69,7],[181,23,69,28,"listener"],[181,31,69,7],[181,33,69,38],[182,0,70,4],[182,8,70,8,"emitter"],[182,15,70,15],[182,18,70,18,"_getEmitter"],[182,29,70,29],[182,31,70,4],[184,0,71,4],[184,11,71,11,"emitter"],[184,18,71,18],[184,19,71,19,"addListener"],[184,30,71,11],[184,31,71,31],[184,54,71,11],[184,56,71,56,"listener"],[184,64,71,11],[184,65,71,4],[185,0,72,1],[187,0,73,7],[187,6,73,13,"EventType"],[187,15,73,22],[187,18,73,25],[188,0,74,4,"DOWNLOAD_STARTED"],[188,4,74,4,"DOWNLOAD_STARTED"],[188,20,74,20],[188,22,74,22],[188,37,73,25],[189,0,75,4,"DOWNLOAD_PROGRESS"],[189,4,75,4,"DOWNLOAD_PROGRESS"],[189,21,75,21],[189,23,75,23],[189,41,73,25],[190,0,76,4,"DOWNLOAD_FINISHED"],[190,4,76,4,"DOWNLOAD_FINISHED"],[190,21,76,21],[190,23,76,23],[190,41,73,25],[191,0,77,4,"NO_UPDATE_AVAILABLE"],[191,4,77,4,"NO_UPDATE_AVAILABLE"],[191,23,77,23],[191,25,77,25],[191,44,73,25],[192,0,78,4,"ERROR"],[192,4,78,4,"ERROR"],[192,9,78,9],[192,11,78,11],[193,0,73,25],[193,3,73,7]]},"type":"js/module"}]}