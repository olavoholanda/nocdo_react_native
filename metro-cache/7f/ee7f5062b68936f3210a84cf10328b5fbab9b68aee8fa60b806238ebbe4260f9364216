{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/regenerator","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/objectSpread","data":{"isAsync":false}},{"name":"expo-asset","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.getNativeSourceFromSource = getNativeSourceFromSource;\n  exports.assertStatusValuesInBounds = assertStatusValuesInBounds;\n  exports.getNativeSourceAndFullInitialStatusForLoadAsync = getNativeSourceAndFullInitialStatusForLoadAsync;\n  exports.getUnloadedStatus = getUnloadedStatus;\n  exports.PlaybackMixin = exports._DEFAULT_INITIAL_PLAYBACK_STATUS = exports._DEFAULT_PROGRESS_UPDATE_INTERVAL_MILLIS = void 0;\n\n  var _regenerator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/regenerator\"));\n\n  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/objectSpread\"));\n\n  var _expoAsset = _$$_REQUIRE(_dependencyMap[3], \"expo-asset\");\n\n  var _DEFAULT_PROGRESS_UPDATE_INTERVAL_MILLIS = 500;\n  exports._DEFAULT_PROGRESS_UPDATE_INTERVAL_MILLIS = _DEFAULT_PROGRESS_UPDATE_INTERVAL_MILLIS;\n  var _DEFAULT_INITIAL_PLAYBACK_STATUS = {\n    positionMillis: 0,\n    progressUpdateIntervalMillis: _DEFAULT_PROGRESS_UPDATE_INTERVAL_MILLIS,\n    shouldPlay: false,\n    rate: 1.0,\n    shouldCorrectPitch: false,\n    volume: 1.0,\n    isMuted: false,\n    isLooping: false\n  };\n  exports._DEFAULT_INITIAL_PLAYBACK_STATUS = _DEFAULT_INITIAL_PLAYBACK_STATUS;\n\n  function getNativeSourceFromSource(source) {\n    var uri = null;\n    var overridingExtension = null;\n    var headers;\n\n    var asset = _getAssetFromPlaybackSource(source);\n\n    if (asset != null) {\n      uri = asset.localUri || asset.uri;\n    } else if (source != null && typeof source !== 'number' && 'uri' in source && typeof source.uri === 'string') {\n      uri = source.uri;\n    }\n\n    if (uri == null) {\n      return null;\n    }\n\n    if (source != null && typeof source !== 'number' && 'overrideFileExtensionAndroid' in source && typeof source.overrideFileExtensionAndroid === 'string') {\n      overridingExtension = source.overrideFileExtensionAndroid;\n    }\n\n    if (source != null && typeof source !== 'number' && 'headers' in source && typeof source.headers === 'object') {\n      headers = source.headers;\n    }\n\n    return {\n      uri: uri,\n      overridingExtension: overridingExtension,\n      headers: headers\n    };\n  }\n\n  function _getAssetFromPlaybackSource(source) {\n    if (source == null) {\n      return null;\n    }\n\n    var asset = null;\n\n    if (typeof source === 'number') {\n      asset = _expoAsset.Asset.fromModule(source);\n    } else if (source instanceof _expoAsset.Asset) {\n      asset = source;\n    }\n\n    return asset;\n  }\n\n  function assertStatusValuesInBounds(status) {\n    if (typeof status.rate === 'number' && (status.rate < 0 || status.rate > 32)) {\n      throw new RangeError('Rate value must be between 0.0 and 32.0');\n    }\n\n    if (typeof status.volume === 'number' && (status.volume < 0 || status.volume > 1)) {\n      throw new RangeError('Volume value must be between 0.0 and 1.0');\n    }\n  }\n\n  function getNativeSourceAndFullInitialStatusForLoadAsync(source, initialStatus, downloadFirst) {\n    var asset, nativeSource, fullInitialStatus;\n    return _regenerator.default.async(function getNativeSourceAndFullInitialStatusForLoadAsync$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            asset = _getAssetFromPlaybackSource(source);\n\n            if (!(downloadFirst && asset)) {\n              _context.next = 4;\n              break;\n            }\n\n            _context.next = 4;\n            return _regenerator.default.awrap(asset.downloadAsync());\n\n          case 4:\n            nativeSource = getNativeSourceFromSource(source);\n\n            if (!(nativeSource === null)) {\n              _context.next = 7;\n              break;\n            }\n\n            throw new Error(\"Cannot load an AV asset from a null playback source\");\n\n          case 7:\n            fullInitialStatus = initialStatus == null ? _DEFAULT_INITIAL_PLAYBACK_STATUS : (0, _objectSpread2.default)({}, _DEFAULT_INITIAL_PLAYBACK_STATUS, initialStatus);\n            assertStatusValuesInBounds(fullInitialStatus);\n            return _context.abrupt(\"return\", {\n              nativeSource: nativeSource,\n              fullInitialStatus: fullInitialStatus\n            });\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, this);\n  }\n\n  function getUnloadedStatus() {\n    var error = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    return (0, _objectSpread2.default)({\n      isLoaded: false\n    }, error ? {\n      error: error\n    } : null);\n  }\n\n  var PlaybackMixin = {\n    playAsync: function playAsync() {\n      return _regenerator.default.async(function playAsync$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              return _context2.abrupt(\"return\", this.setStatusAsync({\n                shouldPlay: true\n              }));\n\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, this);\n    },\n    playFromPositionAsync: function playFromPositionAsync(positionMillis) {\n      var tolerances,\n          _args3 = arguments;\n      return _regenerator.default.async(function playFromPositionAsync$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              tolerances = _args3.length > 1 && _args3[1] !== undefined ? _args3[1] : {};\n              return _context3.abrupt(\"return\", this.setStatusAsync({\n                positionMillis: positionMillis,\n                shouldPlay: true,\n                seekMillisToleranceAfter: tolerances.toleranceMillisAfter,\n                seekMillisToleranceBefore: tolerances.toleranceMillisBefore\n              }));\n\n            case 2:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, this);\n    },\n    pauseAsync: function pauseAsync() {\n      return _regenerator.default.async(function pauseAsync$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              return _context4.abrupt(\"return\", this.setStatusAsync({\n                shouldPlay: false\n              }));\n\n            case 1:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, this);\n    },\n    stopAsync: function stopAsync() {\n      return _regenerator.default.async(function stopAsync$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              return _context5.abrupt(\"return\", this.setStatusAsync({\n                positionMillis: 0,\n                shouldPlay: false\n              }));\n\n            case 1:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, null, this);\n    },\n    setPositionAsync: function setPositionAsync(positionMillis) {\n      var tolerances,\n          _args6 = arguments;\n      return _regenerator.default.async(function setPositionAsync$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              tolerances = _args6.length > 1 && _args6[1] !== undefined ? _args6[1] : {};\n              return _context6.abrupt(\"return\", this.setStatusAsync({\n                positionMillis: positionMillis,\n                seekMillisToleranceAfter: tolerances.toleranceMillisAfter,\n                seekMillisToleranceBefore: tolerances.toleranceMillisBefore\n              }));\n\n            case 2:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, null, this);\n    },\n    setRateAsync: function setRateAsync(rate, shouldCorrectPitch) {\n      return _regenerator.default.async(function setRateAsync$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              return _context7.abrupt(\"return\", this.setStatusAsync({\n                rate: rate,\n                shouldCorrectPitch: shouldCorrectPitch\n              }));\n\n            case 1:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, null, this);\n    },\n    setVolumeAsync: function setVolumeAsync(volume) {\n      return _regenerator.default.async(function setVolumeAsync$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              return _context8.abrupt(\"return\", this.setStatusAsync({\n                volume: volume\n              }));\n\n            case 1:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, null, this);\n    },\n    setIsMutedAsync: function setIsMutedAsync(isMuted) {\n      return _regenerator.default.async(function setIsMutedAsync$(_context9) {\n        while (1) {\n          switch (_context9.prev = _context9.next) {\n            case 0:\n              return _context9.abrupt(\"return\", this.setStatusAsync({\n                isMuted: isMuted\n              }));\n\n            case 1:\n            case \"end\":\n              return _context9.stop();\n          }\n        }\n      }, null, this);\n    },\n    setIsLoopingAsync: function setIsLoopingAsync(isLooping) {\n      return _regenerator.default.async(function setIsLoopingAsync$(_context10) {\n        while (1) {\n          switch (_context10.prev = _context10.next) {\n            case 0:\n              return _context10.abrupt(\"return\", this.setStatusAsync({\n                isLooping: isLooping\n              }));\n\n            case 1:\n            case \"end\":\n              return _context10.stop();\n          }\n        }\n      }, null, this);\n    },\n    setProgressUpdateIntervalAsync: function setProgressUpdateIntervalAsync(progressUpdateIntervalMillis) {\n      return _regenerator.default.async(function setProgressUpdateIntervalAsync$(_context11) {\n        while (1) {\n          switch (_context11.prev = _context11.next) {\n            case 0:\n              return _context11.abrupt(\"return\", this.setStatusAsync({\n                progressUpdateIntervalMillis: progressUpdateIntervalMillis\n              }));\n\n            case 1:\n            case \"end\":\n              return _context11.stop();\n          }\n        }\n      }, null, this);\n    }\n  };\n  exports.PlaybackMixin = PlaybackMixin;\n});","map":[[17,0,1,0],[19,0,2,7],[19,6,2,13,"_DEFAULT_PROGRESS_UPDATE_INTERVAL_MILLIS"],[19,46,2,53],[19,49,2,56],[19,52,2,7],[21,0,3,7],[21,6,3,13,"_DEFAULT_INITIAL_PLAYBACK_STATUS"],[21,38,3,45],[21,41,3,48],[22,0,4,4,"positionMillis"],[22,4,4,4,"positionMillis"],[22,18,4,18],[22,20,4,20],[22,21,3,48],[23,0,5,4,"progressUpdateIntervalMillis"],[23,4,5,4,"progressUpdateIntervalMillis"],[23,32,5,32],[23,34,5,34,"_DEFAULT_PROGRESS_UPDATE_INTERVAL_MILLIS"],[23,74,3,48],[24,0,6,4,"shouldPlay"],[24,4,6,4,"shouldPlay"],[24,14,6,14],[24,16,6,16],[24,21,3,48],[25,0,7,4,"rate"],[25,4,7,4,"rate"],[25,8,7,8],[25,10,7,10],[25,13,3,48],[26,0,8,4,"shouldCorrectPitch"],[26,4,8,4,"shouldCorrectPitch"],[26,22,8,22],[26,24,8,24],[26,29,3,48],[27,0,9,4,"volume"],[27,4,9,4,"volume"],[27,10,9,10],[27,12,9,12],[27,15,3,48],[28,0,10,4,"isMuted"],[28,4,10,4,"isMuted"],[28,11,10,11],[28,13,10,13],[28,18,3,48],[29,0,11,4,"isLooping"],[29,4,11,4,"isLooping"],[29,13,11,13],[29,15,11,15],[30,0,3,48],[30,3,3,7],[33,0,13,7],[33,11,13,16,"getNativeSourceFromSource"],[33,36,13,7],[33,37,13,42,"source"],[33,43,13,7],[33,45,13,50],[34,0,14,4],[34,8,14,8,"uri"],[34,11,14,11],[34,14,14,14],[34,18,14,4],[35,0,15,4],[35,8,15,8,"overridingExtension"],[35,27,15,27],[35,30,15,30],[35,34,15,4],[36,0,16,4],[36,8,16,8,"headers"],[36,15,16,4],[38,0,17,4],[38,8,17,8,"asset"],[38,13,17,13],[38,16,17,16,"_getAssetFromPlaybackSource"],[38,43,17,43],[38,44,17,44,"source"],[38,50,17,43],[38,51,17,4],[40,0,18,4],[40,8,18,8,"asset"],[40,13,18,13],[40,17,18,17],[40,21,18,4],[40,23,18,23],[41,0,19,8,"uri"],[41,6,19,8,"uri"],[41,9,19,11],[41,12,19,14,"asset"],[41,17,19,19],[41,18,19,20,"localUri"],[41,26,19,14],[41,30,19,32,"asset"],[41,35,19,37],[41,36,19,38,"uri"],[41,39,19,8],[42,0,20,5],[42,5,18,4],[42,11,21,9],[42,15,21,13,"source"],[42,21,21,19],[42,25,21,23],[42,29,21,13],[42,33,22,8],[42,40,22,15,"source"],[42,46,22,8],[42,51,22,26],[42,59,21,13],[42,63,23,8],[42,72,23,17,"source"],[42,78,21,13],[42,82,24,8],[42,89,24,15,"source"],[42,95,24,21],[42,96,24,22,"uri"],[42,99,24,8],[42,104,24,30],[42,112,21,9],[42,114,24,40],[43,0,25,8,"uri"],[43,6,25,8,"uri"],[43,9,25,11],[43,12,25,14,"source"],[43,18,25,20],[43,19,25,21,"uri"],[43,22,25,8],[44,0,26,5],[46,0,27,4],[46,8,27,8,"uri"],[46,11,27,11],[46,15,27,15],[46,19,27,4],[46,21,27,21],[47,0,28,8],[47,13,28,15],[47,17,28,8],[48,0,29,5],[50,0,30,4],[50,8,30,8,"source"],[50,14,30,14],[50,18,30,18],[50,22,30,8],[50,26,31,8],[50,33,31,15,"source"],[50,39,31,8],[50,44,31,26],[50,52,30,8],[50,56,32,8],[50,90,32,42,"source"],[50,96,30,8],[50,100,33,8],[50,107,33,15,"source"],[50,113,33,21],[50,114,33,22,"overrideFileExtensionAndroid"],[50,142,33,8],[50,147,33,55],[50,155,30,4],[50,157,33,65],[51,0,34,8,"overridingExtension"],[51,6,34,8,"overridingExtension"],[51,25,34,27],[51,28,34,30,"source"],[51,34,34,36],[51,35,34,37,"overrideFileExtensionAndroid"],[51,63,34,8],[52,0,35,5],[54,0,36,4],[54,8,36,8,"source"],[54,14,36,14],[54,18,36,18],[54,22,36,8],[54,26,36,26],[54,33,36,33,"source"],[54,39,36,26],[54,44,36,44],[54,52,36,8],[54,56,36,56],[54,69,36,69,"source"],[54,75,36,8],[54,79,36,79],[54,86,36,86,"source"],[54,92,36,92],[54,93,36,93,"headers"],[54,100,36,79],[54,105,36,105],[54,113,36,4],[54,115,36,115],[55,0,37,8,"headers"],[55,6,37,8,"headers"],[55,13,37,15],[55,16,37,18,"source"],[55,22,37,24],[55,23,37,25,"headers"],[55,30,37,8],[56,0,38,5],[58,0,39,4],[58,11,39,11],[59,0,39,13,"uri"],[59,6,39,13,"uri"],[59,9,39,16],[59,11,39,13,"uri"],[59,14,39,11],[60,0,39,18,"overridingExtension"],[60,6,39,18,"overridingExtension"],[60,25,39,37],[60,27,39,18,"overridingExtension"],[60,46,39,11],[61,0,39,39,"headers"],[61,6,39,39,"headers"],[61,13,39,46],[61,15,39,39,"headers"],[62,0,39,11],[62,5,39,4],[63,0,40,1],[65,0,41,0],[65,11,41,9,"_getAssetFromPlaybackSource"],[65,38,41,0],[65,39,41,37,"source"],[65,45,41,0],[65,47,41,45],[66,0,42,4],[66,8,42,8,"source"],[66,14,42,14],[66,18,42,18],[66,22,42,4],[66,24,42,24],[67,0,43,8],[67,13,43,15],[67,17,43,8],[68,0,44,5],[70,0,45,4],[70,8,45,8,"asset"],[70,13,45,13],[70,16,45,16],[70,20,45,4],[72,0,46,4],[72,8,46,8],[72,15,46,15,"source"],[72,21,46,8],[72,26,46,26],[72,34,46,4],[72,36,46,36],[73,0,47,8,"asset"],[73,6,47,8,"asset"],[73,11,47,13],[73,14,47,16,"Asset"],[73,31,47,22,"fromModule"],[73,41,47,16],[73,42,47,33,"source"],[73,48,47,16],[73,49,47,8],[74,0,48,5],[74,5,46,4],[74,11,49,9],[74,15,49,13,"source"],[74,21,49,19],[74,33,49,31,"Asset"],[74,49,49,9],[74,51,49,38],[75,0,50,8,"asset"],[75,6,50,8,"asset"],[75,11,50,13],[75,14,50,16,"source"],[75,20,50,8],[76,0,51,5],[78,0,52,4],[78,11,52,11,"asset"],[78,16,52,4],[79,0,53,1],[81,0,54,7],[81,11,54,16,"assertStatusValuesInBounds"],[81,37,54,7],[81,38,54,43,"status"],[81,44,54,7],[81,46,54,51],[82,0,55,4],[82,8,55,8],[82,15,55,15,"status"],[82,21,55,21],[82,22,55,22,"rate"],[82,26,55,8],[82,31,55,31],[82,39,55,8],[82,44,55,44,"status"],[82,50,55,50],[82,51,55,51,"rate"],[82,55,55,44],[82,58,55,58],[82,59,55,44],[82,63,55,63,"status"],[82,69,55,69],[82,70,55,70,"rate"],[82,74,55,63],[82,77,55,77],[82,79,55,8],[82,80,55,4],[82,82,55,82],[83,0,56,8],[83,12,56,14],[83,16,56,18,"RangeError"],[83,26,56,14],[83,27,56,29],[83,68,56,14],[83,69,56,8],[84,0,57,5],[86,0,58,4],[86,8,58,8],[86,15,58,15,"status"],[86,21,58,21],[86,22,58,22,"volume"],[86,28,58,8],[86,33,58,33],[86,41,58,8],[86,46,58,46,"status"],[86,52,58,52],[86,53,58,53,"volume"],[86,59,58,46],[86,62,58,62],[86,63,58,46],[86,67,58,67,"status"],[86,73,58,73],[86,74,58,74,"volume"],[86,80,58,67],[86,83,58,83],[86,84,58,8],[86,85,58,4],[86,87,58,87],[87,0,59,8],[87,12,59,14],[87,16,59,18,"RangeError"],[87,26,59,14],[87,27,59,29],[87,69,59,14],[87,70,59,8],[88,0,60,5],[89,0,61,1],[91,0,62,7],[91,11,62,22,"getNativeSourceAndFullInitialStatusForLoadAsync"],[91,58,62,7],[91,59,62,70,"source"],[91,65,62,7],[91,67,62,78,"initialStatus"],[91,80,62,7],[91,82,62,93,"downloadFirst"],[91,95,62,7],[92,0,62,7],[93,0,62,7],[94,0,62,7],[95,0,62,7],[96,0,62,7],[97,0,64,8,"asset"],[97,12,64,8,"asset"],[97,17,62,7],[97,20,64,16,"_getAssetFromPlaybackSource"],[97,47,64,43],[97,48,64,44,"source"],[97,54,64,43],[97,55,62,7],[99,0,62,7],[99,18,65,8,"downloadFirst"],[99,31,65,21],[99,35,65,25,"asset"],[99,40,62,7],[100,0,62,7],[101,0,62,7],[102,0,62,7],[104,0,62,7],[105,0,62,7],[105,46,67,14,"asset"],[105,51,67,19],[105,52,67,20,"downloadAsync"],[105,65,67,14],[105,67,62,7],[107,0,62,7],[108,0,70,10,"nativeSource"],[108,12,70,10,"nativeSource"],[108,24,62,7],[108,27,70,25,"getNativeSourceFromSource"],[108,52,70,50],[108,53,70,51,"source"],[108,59,70,50],[108,60,62,7],[110,0,62,7],[110,18,71,8,"nativeSource"],[110,30,71,20],[110,35,71,25],[110,39,62,7],[111,0,62,7],[112,0,62,7],[113,0,62,7],[115,0,62,7],[115,18,72,14],[115,22,72,18,"Error"],[115,27,72,14],[115,82,62,7],[117,0,62,7],[118,0,75,10,"fullInitialStatus"],[118,12,75,10,"fullInitialStatus"],[118,29,62,7],[118,32,75,30,"initialStatus"],[118,45,75,43],[118,49,75,47],[118,53,75,30],[118,56,76,10,"_DEFAULT_INITIAL_PLAYBACK_STATUS"],[118,88,75,30],[118,123,78,15,"_DEFAULT_INITIAL_PLAYBACK_STATUS"],[118,155,75,30],[118,157,79,15,"initialStatus"],[118,170,75,30],[118,171,62,7],[119,0,81,4,"assertStatusValuesInBounds"],[119,12,81,4,"assertStatusValuesInBounds"],[119,38,81,30],[119,39,81,31,"fullInitialStatus"],[119,56,81,30],[119,57,81,4],[120,0,62,7],[120,45,82,11],[121,0,82,13,"nativeSource"],[121,14,82,13,"nativeSource"],[121,26,82,25],[121,28,82,13,"nativeSource"],[121,40,82,11],[122,0,82,27,"fullInitialStatus"],[122,14,82,27,"fullInitialStatus"],[122,31,82,44],[122,33,82,27,"fullInitialStatus"],[123,0,82,11],[123,13,62,7],[125,0,62,7],[126,0,62,7],[127,0,62,7],[128,0,62,7],[129,0,62,7],[130,0,62,7],[131,0,62,7],[133,0,84,7],[133,11,84,16,"getUnloadedStatus"],[133,28,84,7],[133,31,84,48],[134,0,84,48],[134,8,84,34,"error"],[134,13,84,48],[134,84,84,42],[134,88,84,48],[135,0,85,4],[136,0,86,8,"isLoaded"],[136,6,86,8,"isLoaded"],[136,14,86,16],[136,16,86,18],[137,0,85,4],[137,7,87,12,"error"],[137,12,87,17],[137,15,87,20],[138,0,87,22,"error"],[138,6,87,22,"error"],[138,11,87,27],[138,13,87,22,"error"],[139,0,87,20],[139,5,87,17],[139,8,87,32],[139,12,85,4],[140,0,89,1],[142,0,94,7],[142,6,94,13,"PlaybackMixin"],[142,19,94,26],[142,22,94,29],[143,0,95,10,"playAsync"],[143,4,95,10,"playAsync"],[143,13,94,29],[144,0,94,29],[145,0,94,29],[146,0,94,29],[147,0,94,29],[148,0,94,29],[148,48,96,15],[148,53,96,20,"setStatusAsync"],[148,67,96,15],[148,68,96,35],[149,0,96,37,"shouldPlay"],[149,16,96,37,"shouldPlay"],[149,26,96,47],[149,28,96,49],[150,0,96,35],[150,15,96,15],[150,16,94,29],[152,0,94,29],[153,0,94,29],[154,0,94,29],[155,0,94,29],[156,0,94,29],[157,0,94,29],[158,0,94,29],[159,0,98,10,"playFromPositionAsync"],[159,4,98,10,"playFromPositionAsync"],[159,25,94,29],[159,58,98,32,"positionMillis"],[159,72,94,29],[160,0,94,29],[161,0,94,29],[162,0,94,29],[163,0,94,29],[164,0,94,29],[165,0,94,29],[166,0,98,48,"tolerances"],[166,14,98,48,"tolerances"],[166,24,94,29],[166,86,98,61],[166,88,94,29],[167,0,94,29],[167,48,99,15],[167,53,99,20,"setStatusAsync"],[167,67,99,15],[167,68,99,35],[168,0,100,12,"positionMillis"],[168,16,100,12,"positionMillis"],[168,30,100,26],[168,32,100,12,"positionMillis"],[168,46,99,35],[169,0,101,12,"shouldPlay"],[169,16,101,12,"shouldPlay"],[169,26,101,22],[169,28,101,24],[169,32,99,35],[170,0,102,12,"seekMillisToleranceAfter"],[170,16,102,12,"seekMillisToleranceAfter"],[170,40,102,36],[170,42,102,38,"tolerances"],[170,52,102,48],[170,53,102,49,"toleranceMillisAfter"],[170,73,99,35],[171,0,103,12,"seekMillisToleranceBefore"],[171,16,103,12,"seekMillisToleranceBefore"],[171,41,103,37],[171,43,103,39,"tolerances"],[171,53,103,49],[171,54,103,50,"toleranceMillisBefore"],[172,0,99,35],[172,15,99,15],[172,16,94,29],[174,0,94,29],[175,0,94,29],[176,0,94,29],[177,0,94,29],[178,0,94,29],[179,0,94,29],[180,0,94,29],[181,0,106,10,"pauseAsync"],[181,4,106,10,"pauseAsync"],[181,14,94,29],[182,0,94,29],[183,0,94,29],[184,0,94,29],[185,0,94,29],[186,0,94,29],[186,48,107,15],[186,53,107,20,"setStatusAsync"],[186,67,107,15],[186,68,107,35],[187,0,107,37,"shouldPlay"],[187,16,107,37,"shouldPlay"],[187,26,107,47],[187,28,107,49],[188,0,107,35],[188,15,107,15],[188,16,94,29],[190,0,94,29],[191,0,94,29],[192,0,94,29],[193,0,94,29],[194,0,94,29],[195,0,94,29],[196,0,94,29],[197,0,109,10,"stopAsync"],[197,4,109,10,"stopAsync"],[197,13,94,29],[198,0,94,29],[199,0,94,29],[200,0,94,29],[201,0,94,29],[202,0,94,29],[202,48,110,15],[202,53,110,20,"setStatusAsync"],[202,67,110,15],[202,68,110,35],[203,0,110,37,"positionMillis"],[203,16,110,37,"positionMillis"],[203,30,110,51],[203,32,110,53],[203,33,110,35],[204,0,110,56,"shouldPlay"],[204,16,110,56,"shouldPlay"],[204,26,110,66],[204,28,110,68],[205,0,110,35],[205,15,110,15],[205,16,94,29],[207,0,94,29],[208,0,94,29],[209,0,94,29],[210,0,94,29],[211,0,94,29],[212,0,94,29],[213,0,94,29],[214,0,112,10,"setPositionAsync"],[214,4,112,10,"setPositionAsync"],[214,20,94,29],[214,48,112,27,"positionMillis"],[214,62,94,29],[215,0,94,29],[216,0,94,29],[217,0,94,29],[218,0,94,29],[219,0,94,29],[220,0,94,29],[221,0,112,43,"tolerances"],[221,14,112,43,"tolerances"],[221,24,94,29],[221,86,112,56],[221,88,94,29],[222,0,94,29],[222,48,113,15],[222,53,113,20,"setStatusAsync"],[222,67,113,15],[222,68,113,35],[223,0,114,12,"positionMillis"],[223,16,114,12,"positionMillis"],[223,30,114,26],[223,32,114,12,"positionMillis"],[223,46,113,35],[224,0,115,12,"seekMillisToleranceAfter"],[224,16,115,12,"seekMillisToleranceAfter"],[224,40,115,36],[224,42,115,38,"tolerances"],[224,52,115,48],[224,53,115,49,"toleranceMillisAfter"],[224,73,113,35],[225,0,116,12,"seekMillisToleranceBefore"],[225,16,116,12,"seekMillisToleranceBefore"],[225,41,116,37],[225,43,116,39,"tolerances"],[225,53,116,49],[225,54,116,50,"toleranceMillisBefore"],[226,0,113,35],[226,15,113,15],[226,16,94,29],[228,0,94,29],[229,0,94,29],[230,0,94,29],[231,0,94,29],[232,0,94,29],[233,0,94,29],[234,0,94,29],[235,0,119,10,"setRateAsync"],[235,4,119,10,"setRateAsync"],[235,16,94,29],[235,40,119,23,"rate"],[235,44,94,29],[235,46,119,29,"shouldCorrectPitch"],[235,64,94,29],[236,0,94,29],[237,0,94,29],[238,0,94,29],[239,0,94,29],[240,0,94,29],[240,48,120,15],[240,53,120,20,"setStatusAsync"],[240,67,120,15],[240,68,120,35],[241,0,120,37,"rate"],[241,16,120,37,"rate"],[241,20,120,41],[241,22,120,37,"rate"],[241,26,120,35],[242,0,120,43,"shouldCorrectPitch"],[242,16,120,43,"shouldCorrectPitch"],[242,34,120,61],[242,36,120,43,"shouldCorrectPitch"],[243,0,120,35],[243,15,120,15],[243,16,94,29],[245,0,94,29],[246,0,94,29],[247,0,94,29],[248,0,94,29],[249,0,94,29],[250,0,94,29],[251,0,94,29],[252,0,122,10,"setVolumeAsync"],[252,4,122,10,"setVolumeAsync"],[252,18,94,29],[252,44,122,25,"volume"],[252,50,94,29],[253,0,94,29],[254,0,94,29],[255,0,94,29],[256,0,94,29],[257,0,94,29],[257,48,123,15],[257,53,123,20,"setStatusAsync"],[257,67,123,15],[257,68,123,35],[258,0,123,37,"volume"],[258,16,123,37,"volume"],[258,22,123,43],[258,24,123,37,"volume"],[259,0,123,35],[259,15,123,15],[259,16,94,29],[261,0,94,29],[262,0,94,29],[263,0,94,29],[264,0,94,29],[265,0,94,29],[266,0,94,29],[267,0,94,29],[268,0,125,10,"setIsMutedAsync"],[268,4,125,10,"setIsMutedAsync"],[268,19,94,29],[268,46,125,26,"isMuted"],[268,53,94,29],[269,0,94,29],[270,0,94,29],[271,0,94,29],[272,0,94,29],[273,0,94,29],[273,48,126,15],[273,53,126,20,"setStatusAsync"],[273,67,126,15],[273,68,126,35],[274,0,126,37,"isMuted"],[274,16,126,37,"isMuted"],[274,23,126,44],[274,25,126,37,"isMuted"],[275,0,126,35],[275,15,126,15],[275,16,94,29],[277,0,94,29],[278,0,94,29],[279,0,94,29],[280,0,94,29],[281,0,94,29],[282,0,94,29],[283,0,94,29],[284,0,128,10,"setIsLoopingAsync"],[284,4,128,10,"setIsLoopingAsync"],[284,21,94,29],[284,50,128,28,"isLooping"],[284,59,94,29],[285,0,94,29],[286,0,94,29],[287,0,94,29],[288,0,94,29],[289,0,94,29],[289,49,129,15],[289,54,129,20,"setStatusAsync"],[289,68,129,15],[289,69,129,35],[290,0,129,37,"isLooping"],[290,16,129,37,"isLooping"],[290,25,129,46],[290,27,129,37,"isLooping"],[291,0,129,35],[291,15,129,15],[291,16,94,29],[293,0,94,29],[294,0,94,29],[295,0,94,29],[296,0,94,29],[297,0,94,29],[298,0,94,29],[299,0,94,29],[300,0,131,10,"setProgressUpdateIntervalAsync"],[300,4,131,10,"setProgressUpdateIntervalAsync"],[300,34,94,29],[300,76,131,41,"progressUpdateIntervalMillis"],[300,104,94,29],[301,0,94,29],[302,0,94,29],[303,0,94,29],[304,0,94,29],[305,0,94,29],[305,49,132,15],[305,54,132,20,"setStatusAsync"],[305,68,132,15],[305,69,132,35],[306,0,132,37,"progressUpdateIntervalMillis"],[306,16,132,37,"progressUpdateIntervalMillis"],[306,44,132,65],[306,46,132,37,"progressUpdateIntervalMillis"],[307,0,132,35],[307,15,132,15],[307,16,94,29],[309,0,94,29],[310,0,94,29],[311,0,94,29],[312,0,94,29],[313,0,94,29],[314,0,94,29],[315,0,94,29],[316,0,94,29],[316,3,94,7]]},"type":"js/module"}]}