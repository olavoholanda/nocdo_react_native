{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"isAsync":false}},{"name":"./core/AnimatedCond","data":{"isAsync":false}},{"name":"./core/AnimatedSet","data":{"isAsync":false}},{"name":"./core/AnimatedOperator","data":{"isAsync":false}},{"name":"./core/AnimatedStartClock","data":{"isAsync":false}},{"name":"./core/AnimatedStopClock","data":{"isAsync":false}},{"name":"./core/AnimatedClockTest","data":{"isAsync":false}},{"name":"./core/AnimatedDebug","data":{"isAsync":false}},{"name":"./core/AnimatedCall","data":{"isAsync":false}},{"name":"./core/AnimatedEvent","data":{"isAsync":false}},{"name":"./core/AnimatedAlways","data":{"isAsync":false}},{"name":"./core/AnimatedConcat","data":{"isAsync":false}},{"name":"./utils","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.event = exports.clockRunning = exports.stopClock = exports.concat = exports.always = exports.startClock = exports.debug = exports.call = exports.block = exports.cond = exports.set = exports.not = exports.defined = exports.or = exports.and = exports.neq = exports.greaterOrEq = exports.lessOrEq = exports.greaterThan = exports.eq = exports.lessThan = exports.round = exports.exp = exports.cos = exports.sin = exports.sqrt = exports.modulo = exports.pow = exports.divide = exports.multiply = exports.sub = exports.add = void 0;\n\n  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/slicedToArray\"));\n\n  var _AnimatedCond = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"./core/AnimatedCond\"));\n\n  var _AnimatedSet = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"./core/AnimatedSet\"));\n\n  var _AnimatedOperator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"./core/AnimatedOperator\"));\n\n  var _AnimatedStartClock = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"./core/AnimatedStartClock\"));\n\n  var _AnimatedStopClock = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"./core/AnimatedStopClock\"));\n\n  var _AnimatedClockTest = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"./core/AnimatedClockTest\"));\n\n  var _AnimatedDebug = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8], \"./core/AnimatedDebug\"));\n\n  var _AnimatedCall = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9], \"./core/AnimatedCall\"));\n\n  var _AnimatedEvent = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10], \"./core/AnimatedEvent\"));\n\n  var _AnimatedAlways = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11], \"./core/AnimatedAlways\"));\n\n  var _AnimatedConcat = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12], \"./core/AnimatedConcat\"));\n\n  var _utils = _$$_REQUIRE(_dependencyMap[13], \"./utils\");\n\n  function operator(name) {\n    return function () {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      return new _AnimatedOperator.default(name, args.map(_utils.adapt));\n    };\n  }\n\n  var add = operator('add');\n  exports.add = add;\n  var sub = operator('sub');\n  exports.sub = sub;\n  var multiply = operator('multiply');\n  exports.multiply = multiply;\n  var divide = operator('divide');\n  exports.divide = divide;\n  var pow = operator('pow');\n  exports.pow = pow;\n  var modulo = operator('modulo');\n  exports.modulo = modulo;\n  var sqrt = operator('sqrt');\n  exports.sqrt = sqrt;\n  var sin = operator('sin');\n  exports.sin = sin;\n  var cos = operator('cos');\n  exports.cos = cos;\n  var exp = operator('exp');\n  exports.exp = exp;\n  var round = operator('round');\n  exports.round = round;\n  var lessThan = operator('lessThan');\n  exports.lessThan = lessThan;\n  var eq = operator('eq');\n  exports.eq = eq;\n  var greaterThan = operator('greaterThan');\n  exports.greaterThan = greaterThan;\n  var lessOrEq = operator('lessOrEq');\n  exports.lessOrEq = lessOrEq;\n  var greaterOrEq = operator('greaterOrEq');\n  exports.greaterOrEq = greaterOrEq;\n  var neq = operator('neq');\n  exports.neq = neq;\n  var and = operator('and');\n  exports.and = and;\n  var or = operator('or');\n  exports.or = or;\n  var defined = operator('defined');\n  exports.defined = defined;\n  var not = operator('not');\n  exports.not = not;\n\n  var set = function set(what, value) {\n    return new _AnimatedSet.default(what, (0, _utils.adapt)(value));\n  };\n\n  exports.set = set;\n\n  var cond = function cond(_cond, ifBlock, elseBlock) {\n    return new _AnimatedCond.default((0, _utils.adapt)(_cond), (0, _utils.adapt)(ifBlock), elseBlock === undefined ? undefined : (0, _utils.adapt)(elseBlock));\n  };\n\n  exports.cond = cond;\n\n  var block = function block(items) {\n    return (0, _utils.adapt)(items);\n  };\n\n  exports.block = block;\n\n  var call = function call(args, func) {\n    return new _AnimatedCall.default(args, func);\n  };\n\n  exports.call = call;\n\n  var debug = function debug(message, value) {\n    if (__DEV__) {\n      var runningInRemoteDebugger = typeof atob !== 'undefined';\n      var runningInExpoShell = global.Expo && global.Expo.Constants.appOwnership !== 'standalone';\n\n      if (runningInRemoteDebugger || runningInExpoShell) {\n        return block([call([value], function (_ref) {\n          var _ref2 = (0, _slicedToArray2.default)(_ref, 1),\n              a = _ref2[0];\n\n          return console.log(message + \" \" + a);\n        }), value]);\n      } else {\n        return new _AnimatedDebug.default(message, (0, _utils.adapt)(value));\n      }\n    }\n\n    return value;\n  };\n\n  exports.debug = debug;\n\n  var startClock = function startClock(clock) {\n    return new _AnimatedStartClock.default(clock);\n  };\n\n  exports.startClock = startClock;\n\n  var always = function always(item) {\n    return new _AnimatedAlways.default(item);\n  };\n\n  exports.always = always;\n\n  var concat = function concat() {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    return new _AnimatedConcat.default(args.map(_utils.adapt));\n  };\n\n  exports.concat = concat;\n\n  var stopClock = function stopClock(clock) {\n    return new _AnimatedStopClock.default(clock);\n  };\n\n  exports.stopClock = stopClock;\n\n  var clockRunning = function clockRunning(clock) {\n    return new _AnimatedClockTest.default(clock);\n  };\n\n  exports.clockRunning = clockRunning;\n\n  var event = function event(argMapping, config) {\n    return new _AnimatedEvent.default(argMapping, config);\n  };\n\n  exports.event = event;\n});","map":[[11,0,1,0],[13,0,2,0],[15,0,3,0],[17,0,4,0],[19,0,5,0],[21,0,6,0],[23,0,7,0],[25,0,8,0],[27,0,9,0],[29,0,10,0],[31,0,11,0],[33,0,13,0],[35,0,15,0],[35,11,15,9,"operator"],[35,19,15,0],[35,20,15,18,"name"],[35,24,15,0],[35,26,15,24],[36,0,16,2],[36,11,16,9],[37,0,16,9],[37,40,16,13,"args"],[37,44,16,9],[38,0,16,13,"args"],[38,8,16,13,"args"],[38,12,16,9],[39,0,16,9],[41,0,16,9],[41,13,16,22],[41,17,16,26,"AnimatedOperator"],[41,42,16,22],[41,43,16,43,"name"],[41,47,16,22],[41,49,16,49,"args"],[41,53,16,53],[41,54,16,54,"map"],[41,57,16,49],[41,58,16,58,"adapt"],[41,70,16,49],[41,71,16,22],[41,72,16,9],[42,0,16,9],[42,5,16,2],[43,0,17,1],[45,0,19,7],[45,6,19,13,"add"],[45,9,19,16],[45,12,19,19,"operator"],[45,20,19,27],[45,21,19,28],[45,26,19,27],[45,27,19,7],[47,0,20,7],[47,6,20,13,"sub"],[47,9,20,16],[47,12,20,19,"operator"],[47,20,20,27],[47,21,20,28],[47,26,20,27],[47,27,20,7],[49,0,21,7],[49,6,21,13,"multiply"],[49,14,21,21],[49,17,21,24,"operator"],[49,25,21,32],[49,26,21,33],[49,36,21,32],[49,37,21,7],[51,0,22,7],[51,6,22,13,"divide"],[51,12,22,19],[51,15,22,22,"operator"],[51,23,22,30],[51,24,22,31],[51,32,22,30],[51,33,22,7],[53,0,23,7],[53,6,23,13,"pow"],[53,9,23,16],[53,12,23,19,"operator"],[53,20,23,27],[53,21,23,28],[53,26,23,27],[53,27,23,7],[55,0,24,7],[55,6,24,13,"modulo"],[55,12,24,19],[55,15,24,22,"operator"],[55,23,24,30],[55,24,24,31],[55,32,24,30],[55,33,24,7],[57,0,25,7],[57,6,25,13,"sqrt"],[57,10,25,17],[57,13,25,20,"operator"],[57,21,25,28],[57,22,25,29],[57,28,25,28],[57,29,25,7],[59,0,26,7],[59,6,26,13,"sin"],[59,9,26,16],[59,12,26,19,"operator"],[59,20,26,27],[59,21,26,28],[59,26,26,27],[59,27,26,7],[61,0,27,7],[61,6,27,13,"cos"],[61,9,27,16],[61,12,27,19,"operator"],[61,20,27,27],[61,21,27,28],[61,26,27,27],[61,27,27,7],[63,0,28,7],[63,6,28,13,"exp"],[63,9,28,16],[63,12,28,19,"operator"],[63,20,28,27],[63,21,28,28],[63,26,28,27],[63,27,28,7],[65,0,29,7],[65,6,29,13,"round"],[65,11,29,18],[65,14,29,21,"operator"],[65,22,29,29],[65,23,29,30],[65,30,29,29],[65,31,29,7],[67,0,30,7],[67,6,30,13,"lessThan"],[67,14,30,21],[67,17,30,24,"operator"],[67,25,30,32],[67,26,30,33],[67,36,30,32],[67,37,30,7],[69,0,31,7],[69,6,31,13,"eq"],[69,8,31,15],[69,11,31,18,"operator"],[69,19,31,26],[69,20,31,27],[69,24,31,26],[69,25,31,7],[71,0,32,7],[71,6,32,13,"greaterThan"],[71,17,32,24],[71,20,32,27,"operator"],[71,28,32,35],[71,29,32,36],[71,42,32,35],[71,43,32,7],[73,0,33,7],[73,6,33,13,"lessOrEq"],[73,14,33,21],[73,17,33,24,"operator"],[73,25,33,32],[73,26,33,33],[73,36,33,32],[73,37,33,7],[75,0,34,7],[75,6,34,13,"greaterOrEq"],[75,17,34,24],[75,20,34,27,"operator"],[75,28,34,35],[75,29,34,36],[75,42,34,35],[75,43,34,7],[77,0,35,7],[77,6,35,13,"neq"],[77,9,35,16],[77,12,35,19,"operator"],[77,20,35,27],[77,21,35,28],[77,26,35,27],[77,27,35,7],[79,0,36,7],[79,6,36,13,"and"],[79,9,36,16],[79,12,36,19,"operator"],[79,20,36,27],[79,21,36,28],[79,26,36,27],[79,27,36,7],[81,0,37,7],[81,6,37,13,"or"],[81,8,37,15],[81,11,37,18,"operator"],[81,19,37,26],[81,20,37,27],[81,24,37,26],[81,25,37,7],[83,0,38,7],[83,6,38,13,"defined"],[83,13,38,20],[83,16,38,23,"operator"],[83,24,38,31],[83,25,38,32],[83,34,38,31],[83,35,38,7],[85,0,39,7],[85,6,39,13,"not"],[85,9,39,16],[85,12,39,19,"operator"],[85,20,39,27],[85,21,39,28],[85,26,39,27],[85,27,39,7],[88,0,41,7],[88,6,41,13,"set"],[88,9,41,16],[88,12,41,19],[88,21,41,13,"set"],[88,24,41,19],[88,25,41,28,"what"],[88,29,41,19],[88,31,41,34,"value"],[88,36,41,19],[88,38,41,41],[89,0,42,2],[89,11,42,9],[89,15,42,13,"AnimatedSet"],[89,35,42,9],[89,36,42,25,"what"],[89,40,42,9],[89,42,42,31],[89,60,42,37,"value"],[89,65,42,31],[89,66,42,9],[89,67,42,2],[90,0,43,1],[90,3,41,7],[94,0,45,7],[94,6,45,13,"cond"],[94,10,45,17],[94,13,45,20],[94,27,45,29,"cond"],[94,32,45,20],[94,34,45,35,"ifBlock"],[94,41,45,20],[94,43,45,44,"elseBlock"],[94,52,45,20],[94,54,45,55],[95,0,46,2],[95,11,46,9],[95,15,46,13,"AnimatedCond"],[95,36,46,9],[95,37,47,4],[95,55,47,10,"cond"],[95,60,47,4],[95,61,46,9],[95,63,48,4],[95,81,48,10,"ifBlock"],[95,88,48,4],[95,89,46,9],[95,91,49,4,"elseBlock"],[95,100,49,13],[95,105,49,18,"undefined"],[95,114,49,4],[95,117,49,30,"undefined"],[95,126,49,4],[95,129,49,42],[95,147,49,48,"elseBlock"],[95,156,49,42],[95,157,46,9],[95,158,46,2],[96,0,51,1],[96,3,45,7],[100,0,53,7],[100,6,53,13,"block"],[100,11,53,18],[100,14,53,21],[100,23,53,13,"block"],[100,28,53,21],[100,29,53,30,"items"],[100,34,53,21],[100,36,53,37],[101,0,54,2],[101,11,54,9],[101,29,54,15,"items"],[101,34,54,9],[101,35,54,2],[102,0,55,1],[102,3,53,7],[106,0,57,7],[106,6,57,13,"call"],[106,10,57,17],[106,13,57,20],[106,22,57,13,"call"],[106,26,57,20],[106,27,57,29,"args"],[106,31,57,20],[106,33,57,35,"func"],[106,37,57,20],[106,39,57,41],[107,0,58,2],[107,11,58,9],[107,15,58,13,"AnimatedCall"],[107,36,58,9],[107,37,58,26,"args"],[107,41,58,9],[107,43,58,32,"func"],[107,47,58,9],[107,48,58,2],[108,0,59,1],[108,3,57,7],[112,0,61,7],[112,6,61,13,"debug"],[112,11,61,18],[112,14,61,21],[112,23,61,13,"debug"],[112,28,61,21],[112,29,61,30,"message"],[112,36,61,21],[112,38,61,39,"value"],[112,43,61,21],[112,45,61,46],[113,0,62,2],[113,8,62,6,"__DEV__"],[113,15,62,2],[113,17,62,15],[114,0,63,4],[114,10,63,10,"runningInRemoteDebugger"],[114,33,63,33],[114,36,63,36],[114,43,63,43,"atob"],[114,47,63,36],[114,52,63,52],[114,63,63,4],[115,0,67,4],[115,10,67,10,"runningInExpoShell"],[115,28,67,28],[115,31,68,6,"global"],[115,37,68,12],[115,38,68,13,"Expo"],[115,42,68,6],[115,46,68,21,"global"],[115,52,68,27],[115,53,68,28,"Expo"],[115,57,68,21],[115,58,68,33,"Constants"],[115,67,68,21],[115,68,68,43,"appOwnership"],[115,80,68,21],[115,85,68,60],[115,97,67,4],[117,0,70,4],[117,10,70,8,"runningInRemoteDebugger"],[117,33,70,31],[117,37,70,35,"runningInExpoShell"],[117,55,70,4],[117,57,70,55],[118,0,73,6],[118,15,73,13,"block"],[118,20,73,18],[118,21,73,19],[118,22,74,8,"call"],[118,26,74,12],[118,27,74,13],[118,28,74,14,"value"],[118,33,74,13],[118,34,74,12],[118,36,74,22],[119,0,74,22],[120,0,74,22],[120,14,74,24,"a"],[120,15,74,22],[122,0,74,22],[122,17,74,31,"console"],[122,24,74,38],[122,25,74,39,"log"],[122,28,74,31],[122,29,74,46,"message"],[122,36,74,31],[122,45,74,57,"a"],[122,46,74,31],[122,47,74,22],[123,0,74,22],[123,9,74,12],[123,10,73,19],[123,12,75,8,"value"],[123,17,73,19],[123,18,73,18],[123,19,73,6],[124,0,77,5],[124,7,70,4],[124,13,77,11],[125,0,78,6],[125,15,78,13],[125,19,78,17,"AnimatedDebug"],[125,41,78,13],[125,42,78,31,"message"],[125,49,78,13],[125,51,78,40],[125,69,78,46,"value"],[125,74,78,40],[125,75,78,13],[125,76,78,6],[126,0,79,5],[127,0,80,3],[129,0,82,2],[129,11,82,9,"value"],[129,16,82,2],[130,0,83,1],[130,3,61,7],[134,0,85,7],[134,6,85,13,"startClock"],[134,16,85,23],[134,19,85,26],[134,28,85,13,"startClock"],[134,38,85,26],[134,39,85,35,"clock"],[134,44,85,26],[134,46,85,42],[135,0,86,2],[135,11,86,9],[135,15,86,13,"AnimatedStartClock"],[135,42,86,9],[135,43,86,32,"clock"],[135,48,86,9],[135,49,86,2],[136,0,87,1],[136,3,85,7],[140,0,89,7],[140,6,89,13,"always"],[140,12,89,19],[140,15,89,22],[140,24,89,13,"always"],[140,30,89,22],[140,31,89,31,"item"],[140,35,89,22],[140,37,89,37],[141,0,90,2],[141,11,90,9],[141,15,90,13,"AnimatedAlways"],[141,38,90,9],[141,39,90,28,"item"],[141,43,90,9],[141,44,90,2],[142,0,91,1],[142,3,89,7],[146,0,93,7],[146,6,93,13,"concat"],[146,12,93,19],[146,15,93,22],[146,24,93,13,"concat"],[146,30,93,22],[146,33,93,40],[147,0,93,40],[147,39,93,34,"args"],[147,43,93,40],[148,0,93,34,"args"],[148,6,93,34,"args"],[148,10,93,40],[149,0,93,40],[151,0,94,2],[151,11,94,9],[151,15,94,13,"AnimatedConcat"],[151,38,94,9],[151,39,94,28,"args"],[151,43,94,32],[151,44,94,33,"map"],[151,47,94,28],[151,48,94,37,"adapt"],[151,60,94,28],[151,61,94,9],[151,62,94,2],[152,0,95,1],[152,3,93,7],[156,0,97,7],[156,6,97,13,"stopClock"],[156,15,97,22],[156,18,97,25],[156,27,97,13,"stopClock"],[156,36,97,25],[156,37,97,34,"clock"],[156,42,97,25],[156,44,97,41],[157,0,98,2],[157,11,98,9],[157,15,98,13,"AnimatedStopClock"],[157,41,98,9],[157,42,98,31,"clock"],[157,47,98,9],[157,48,98,2],[158,0,99,1],[158,3,97,7],[162,0,101,7],[162,6,101,13,"clockRunning"],[162,18,101,25],[162,21,101,28],[162,30,101,13,"clockRunning"],[162,42,101,28],[162,43,101,37,"clock"],[162,48,101,28],[162,50,101,44],[163,0,102,2],[163,11,102,9],[163,15,102,13,"AnimatedClockTest"],[163,41,102,9],[163,42,102,31,"clock"],[163,47,102,9],[163,48,102,2],[164,0,103,1],[164,3,101,7],[168,0,105,7],[168,6,105,13,"event"],[168,11,105,18],[168,14,105,21],[168,23,105,13,"event"],[168,28,105,21],[168,29,105,30,"argMapping"],[168,39,105,21],[168,41,105,42,"config"],[168,47,105,21],[168,49,105,50],[169,0,106,2],[169,11,106,9],[169,15,106,13,"AnimatedEvent"],[169,37,106,9],[169,38,106,27,"argMapping"],[169,48,106,9],[169,50,106,39,"config"],[169,56,106,9],[169,57,106,2],[170,0,107,1],[170,3,105,7]]},"type":"js/module"}]}