{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/regenerator","data":{"isAsync":false}},{"name":"react-native","data":{"isAsync":false}},{"name":"./Audio/Recording","data":{"isAsync":false}},{"name":"./Audio/Sound","data":{"isAsync":false}},{"name":"./Audio/AudioAvailability","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  var _exportNames = {\n    INTERRUPTION_MODE_IOS_MIX_WITH_OTHERS: true,\n    INTERRUPTION_MODE_IOS_DO_NOT_MIX: true,\n    INTERRUPTION_MODE_IOS_DUCK_OTHERS: true,\n    INTERRUPTION_MODE_ANDROID_DO_NOT_MIX: true,\n    INTERRUPTION_MODE_ANDROID_DUCK_OTHERS: true,\n    setAudioModeAsync: true,\n    setIsEnabledAsync: true\n  };\n  exports.setAudioModeAsync = setAudioModeAsync;\n  Object.defineProperty(exports, \"setIsEnabledAsync\", {\n    enumerable: true,\n    get: function get() {\n      return _AudioAvailability.setIsEnabledAsync;\n    }\n  });\n  exports.INTERRUPTION_MODE_ANDROID_DUCK_OTHERS = exports.INTERRUPTION_MODE_ANDROID_DO_NOT_MIX = exports.INTERRUPTION_MODE_IOS_DUCK_OTHERS = exports.INTERRUPTION_MODE_IOS_DO_NOT_MIX = exports.INTERRUPTION_MODE_IOS_MIX_WITH_OTHERS = void 0;\n\n  var _regenerator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/regenerator\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[2], \"react-native\");\n\n  var _Recording = _$$_REQUIRE(_dependencyMap[3], \"./Audio/Recording\");\n\n  Object.keys(_Recording).forEach(function (key) {\n    if (key === \"default\" || key === \"__esModule\") return;\n    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n    Object.defineProperty(exports, key, {\n      enumerable: true,\n      get: function get() {\n        return _Recording[key];\n      }\n    });\n  });\n\n  var _Sound = _$$_REQUIRE(_dependencyMap[4], \"./Audio/Sound\");\n\n  Object.keys(_Sound).forEach(function (key) {\n    if (key === \"default\" || key === \"__esModule\") return;\n    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n    Object.defineProperty(exports, key, {\n      enumerable: true,\n      get: function get() {\n        return _Sound[key];\n      }\n    });\n  });\n\n  var _AudioAvailability = _$$_REQUIRE(_dependencyMap[5], \"./Audio/AudioAvailability\");\n\n  var INTERRUPTION_MODE_IOS_MIX_WITH_OTHERS = 0;\n  exports.INTERRUPTION_MODE_IOS_MIX_WITH_OTHERS = INTERRUPTION_MODE_IOS_MIX_WITH_OTHERS;\n  var INTERRUPTION_MODE_IOS_DO_NOT_MIX = 1;\n  exports.INTERRUPTION_MODE_IOS_DO_NOT_MIX = INTERRUPTION_MODE_IOS_DO_NOT_MIX;\n  var INTERRUPTION_MODE_IOS_DUCK_OTHERS = 2;\n  exports.INTERRUPTION_MODE_IOS_DUCK_OTHERS = INTERRUPTION_MODE_IOS_DUCK_OTHERS;\n  var INTERRUPTION_MODE_ANDROID_DO_NOT_MIX = 1;\n  exports.INTERRUPTION_MODE_ANDROID_DO_NOT_MIX = INTERRUPTION_MODE_ANDROID_DO_NOT_MIX;\n  var INTERRUPTION_MODE_ANDROID_DUCK_OTHERS = 2;\n  exports.INTERRUPTION_MODE_ANDROID_DUCK_OTHERS = INTERRUPTION_MODE_ANDROID_DUCK_OTHERS;\n\n  var _isValueValid = function _isValueValid(value, validValues) {\n    return validValues.filter(function (validValue) {\n      return validValue === value;\n    }).length > 0;\n  };\n\n  var _findMissingKeys = function _findMissingKeys(object, requiredKeys) {\n    return requiredKeys.filter(function (requiredKey) {\n      return !(requiredKey in object);\n    });\n  };\n\n  function setAudioModeAsync(mode) {\n    var missingKeys;\n    return _regenerator.default.async(function setAudioModeAsync$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            missingKeys = _findMissingKeys(mode, ['allowsRecordingIOS', 'interruptionModeIOS', 'playsInSilentModeIOS', 'interruptionModeAndroid', 'shouldDuckAndroid', 'playThroughEarpieceAndroid']);\n\n            if (!(missingKeys.length > 0)) {\n              _context.next = 3;\n              break;\n            }\n\n            throw new Error(\"Audio mode attempted to be set without the required keys: \" + JSON.stringify(missingKeys));\n\n          case 3:\n            if (_isValueValid(mode.interruptionModeIOS, [INTERRUPTION_MODE_IOS_MIX_WITH_OTHERS, INTERRUPTION_MODE_IOS_DO_NOT_MIX, INTERRUPTION_MODE_IOS_DUCK_OTHERS])) {\n              _context.next = 5;\n              break;\n            }\n\n            throw new Error(\"\\\"interruptionModeIOS\\\" was set to an invalid value.\");\n\n          case 5:\n            if (_isValueValid(mode.interruptionModeAndroid, [INTERRUPTION_MODE_ANDROID_DO_NOT_MIX, INTERRUPTION_MODE_ANDROID_DUCK_OTHERS])) {\n              _context.next = 7;\n              break;\n            }\n\n            throw new Error(\"\\\"interruptionModeAndroid\\\" was set to an invalid value.\");\n\n          case 7:\n            if (!(typeof mode.allowsRecordingIOS !== 'boolean' || typeof mode.playsInSilentModeIOS !== 'boolean' || typeof mode.shouldDuckAndroid !== 'boolean' || typeof mode.playThroughEarpieceAndroid !== 'boolean')) {\n              _context.next = 9;\n              break;\n            }\n\n            throw new Error('\"allowsRecordingIOS\", \"playsInSilentModeIOS\", \"playThroughEarpieceAndroid\", and \"shouldDuckAndroid\" must be booleans.');\n\n          case 9:\n            _context.next = 11;\n            return _regenerator.default.awrap(_reactNative.NativeModules.ExponentAV.setAudioMode(mode));\n\n          case 11:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, this);\n  }\n});","map":[[27,0,1,0],[29,0,2,0],[31,0,2,0],[32,0,2,0],[33,0,2,0],[34,0,2,0],[35,0,2,0],[36,0,2,0],[37,0,2,0],[38,0,2,0],[39,0,2,0],[40,0,2,0],[42,0,3,0],[44,0,3,0],[45,0,3,0],[46,0,3,0],[47,0,3,0],[48,0,3,0],[49,0,3,0],[50,0,3,0],[51,0,3,0],[52,0,3,0],[53,0,3,0],[55,0,4,0],[57,0,5,7],[57,6,5,13,"INTERRUPTION_MODE_IOS_MIX_WITH_OTHERS"],[57,43,5,50],[57,46,5,53],[57,47,5,7],[59,0,6,7],[59,6,6,13,"INTERRUPTION_MODE_IOS_DO_NOT_MIX"],[59,38,6,45],[59,41,6,48],[59,42,6,7],[61,0,7,7],[61,6,7,13,"INTERRUPTION_MODE_IOS_DUCK_OTHERS"],[61,39,7,46],[61,42,7,49],[61,43,7,7],[63,0,8,7],[63,6,8,13,"INTERRUPTION_MODE_ANDROID_DO_NOT_MIX"],[63,42,8,49],[63,45,8,52],[63,46,8,7],[65,0,9,7],[65,6,9,13,"INTERRUPTION_MODE_ANDROID_DUCK_OTHERS"],[65,43,9,50],[65,46,9,53],[65,47,9,7],[68,0,11,0],[68,6,11,6,"_isValueValid"],[68,19,11,19],[68,22,11,22],[68,31,11,6,"_isValueValid"],[68,44,11,22],[68,45,11,23,"value"],[68,50,11,22],[68,52,11,30,"validValues"],[68,63,11,22],[68,65,11,46],[69,0,12,4],[69,11,12,11,"validValues"],[69,22,12,22],[69,23,12,23,"filter"],[69,29,12,11],[69,30,12,30],[69,40,12,30,"validValue"],[69,50,12,40],[70,0,12,40],[70,13,12,44,"validValue"],[70,23,12,54],[70,28,12,59,"value"],[70,33,12,40],[71,0,12,40],[71,5,12,11],[71,7,12,66,"length"],[71,13,12,11],[71,16,12,75],[71,17,12,4],[72,0,13,1],[72,3,11,0],[74,0,15,0],[74,6,15,6,"_findMissingKeys"],[74,22,15,22],[74,25,15,25],[74,34,15,6,"_findMissingKeys"],[74,50,15,25],[74,51,15,26,"object"],[74,57,15,25],[74,59,15,34,"requiredKeys"],[74,71,15,25],[74,73,15,51],[75,0,16,4],[75,11,16,11,"requiredKeys"],[75,23,16,23],[75,24,16,24,"filter"],[75,30,16,11],[75,31,16,31],[75,41,16,31,"requiredKey"],[75,52,16,42],[76,0,16,42],[76,13,16,46],[76,15,16,48,"requiredKey"],[76,26,16,59],[76,30,16,63,"object"],[76,36,16,46],[76,37,16,42],[77,0,16,42],[77,5,16,11],[77,6,16,4],[78,0,17,1],[78,3,15,0],[80,0,18,7],[80,11,18,22,"setAudioModeAsync"],[80,28,18,7],[80,29,18,40,"mode"],[80,33,18,7],[81,0,18,7],[82,0,18,7],[83,0,18,7],[84,0,18,7],[85,0,18,7],[86,0,19,10,"missingKeys"],[86,12,19,10,"missingKeys"],[86,23,18,7],[86,26,19,24,"_findMissingKeys"],[86,42,19,40],[86,43,19,41,"mode"],[86,47,19,40],[86,49,19,47],[86,50,20,8],[86,70,19,47],[86,72,21,8],[86,93,19,47],[86,95,22,8],[86,117,19,47],[86,119,23,8],[86,144,19,47],[86,146,24,8],[86,165,19,47],[86,167,25,8],[86,195,19,47],[86,196,19,40],[86,197,18,7],[88,0,18,7],[88,18,27,8,"missingKeys"],[88,29,27,19],[88,30,27,20,"length"],[88,36,27,8],[88,39,27,29],[88,40,18,7],[89,0,18,7],[90,0,18,7],[91,0,18,7],[93,0,18,7],[93,18,28,14],[93,22,28,18,"Error"],[93,27,28,14],[93,91,28,85,"JSON"],[93,95,28,89],[93,96,28,90,"stringify"],[93,105,28,85],[93,106,28,100,"missingKeys"],[93,117,28,85],[93,118,28,14],[93,119,18,7],[95,0,18,7],[96,0,18,7],[96,16,30,9,"_isValueValid"],[96,29,30,22],[96,30,30,23,"mode"],[96,34,30,27],[96,35,30,28,"interruptionModeIOS"],[96,54,30,22],[96,56,30,49],[96,57,31,8,"INTERRUPTION_MODE_IOS_MIX_WITH_OTHERS"],[96,94,30,49],[96,96,32,8,"INTERRUPTION_MODE_IOS_DO_NOT_MIX"],[96,128,30,49],[96,130,33,8,"INTERRUPTION_MODE_IOS_DUCK_OTHERS"],[96,163,30,49],[96,164,30,22],[96,165,18,7],[97,0,18,7],[98,0,18,7],[99,0,18,7],[101,0,18,7],[101,18,35,14],[101,22,35,18,"Error"],[101,27,35,14],[101,83,18,7],[103,0,18,7],[104,0,18,7],[104,16,37,9,"_isValueValid"],[104,29,37,22],[104,30,37,23,"mode"],[104,34,37,27],[104,35,37,28,"interruptionModeAndroid"],[104,58,37,22],[104,60,37,53],[104,61,38,8,"INTERRUPTION_MODE_ANDROID_DO_NOT_MIX"],[104,97,37,53],[104,99,39,8,"INTERRUPTION_MODE_ANDROID_DUCK_OTHERS"],[104,136,37,53],[104,137,37,22],[104,138,18,7],[105,0,18,7],[106,0,18,7],[107,0,18,7],[109,0,18,7],[109,18,41,14],[109,22,41,18,"Error"],[109,27,41,14],[109,87,18,7],[111,0,18,7],[112,0,18,7],[112,18,43,8],[112,25,43,15,"mode"],[112,29,43,19],[112,30,43,20,"allowsRecordingIOS"],[112,48,43,8],[112,53,43,43],[112,62,43,8],[112,66,44,8],[112,73,44,15,"mode"],[112,77,44,19],[112,78,44,20,"playsInSilentModeIOS"],[112,98,44,8],[112,103,44,45],[112,112,43,8],[112,116,45,8],[112,123,45,15,"mode"],[112,127,45,19],[112,128,45,20,"shouldDuckAndroid"],[112,145,45,8],[112,150,45,42],[112,159,43,8],[112,163,46,8],[112,170,46,15,"mode"],[112,174,46,19],[112,175,46,20,"playThroughEarpieceAndroid"],[112,201,46,8],[112,206,46,51],[112,215,18,7],[113,0,18,7],[114,0,18,7],[115,0,18,7],[117,0,18,7],[117,18,47,14],[117,22,47,18,"Error"],[117,27,47,14],[117,28,47,24],[117,147,47,14],[117,148,18,7],[119,0,18,7],[120,0,18,7],[121,0,18,7],[121,46,49,17,"NativeModules"],[121,73,49,31,"ExponentAV"],[121,83,49,17],[121,84,49,42,"setAudioMode"],[121,96,49,17],[121,97,49,55,"mode"],[121,101,49,17],[121,102,18,7],[123,0,18,7],[124,0,18,7],[126,0,18,7],[127,0,18,7],[128,0,18,7],[129,0,18,7],[130,0,18,7],[131,0,18,7],[132,0,18,7]]},"type":"js/module"}]}