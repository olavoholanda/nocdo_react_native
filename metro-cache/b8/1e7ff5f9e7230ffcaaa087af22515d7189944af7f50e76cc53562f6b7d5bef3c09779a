{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false}},{"name":"./timer/polyfillNextTick","data":{"isAsync":false}},{"name":"lodash.zipobject","data":{"isAsync":false}},{"name":"react-native","data":{"isAsync":false}},{"name":"@expo/websql/custom","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.openDatabase = openDatabase;\n  exports.default = void 0;\n\n  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/slicedToArray\"));\n\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/classCallCheck\"));\n\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/createClass\"));\n\n  _$$_REQUIRE(_dependencyMap[4], \"./timer/polyfillNextTick\");\n\n  var _lodash = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"lodash.zipobject\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[6], \"react-native\");\n\n  var _custom = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"@expo/websql/custom\"));\n\n  var ExponentSQLite = _reactNative.NativeModules.ExponentSQLite;\n\n  var SQLiteDatabase = function () {\n    function SQLiteDatabase(name) {\n      (0, _classCallCheck2.default)(this, SQLiteDatabase);\n      this._closed = false;\n      this._name = name;\n    }\n\n    (0, _createClass2.default)(SQLiteDatabase, [{\n      key: \"exec\",\n      value: function exec(queries, readOnly, callback) {\n        if (this._closed) {\n          throw new Error(\"The SQLite database is closed\");\n        }\n\n        ExponentSQLite.exec(this._name, queries.map(_serializeQuery), readOnly).then(function (nativeResultSets) {\n          callback(null, nativeResultSets.map(_deserializeResultSet));\n        }, function (error) {\n          callback(error instanceof Error ? error : new Error(error));\n        });\n      }\n    }, {\n      key: \"close\",\n      value: function close() {\n        this._closed = true;\n        ExponentSQLite.close(this._name);\n      }\n    }]);\n    return SQLiteDatabase;\n  }();\n\n  function _serializeQuery(query) {\n    return [query.sql, _reactNative.Platform.OS === 'android' ? query.args.map(_escapeBlob) : query.args];\n  }\n\n  function _deserializeResultSet(nativeResult) {\n    var _nativeResult = (0, _slicedToArray2.default)(nativeResult, 5),\n        errorMessage = _nativeResult[0],\n        insertId = _nativeResult[1],\n        rowsAffected = _nativeResult[2],\n        columns = _nativeResult[3],\n        rows = _nativeResult[4];\n\n    if (errorMessage !== null) {\n      return {\n        error: new Error(errorMessage)\n      };\n    }\n\n    return {\n      insertId: insertId,\n      rowsAffected: rowsAffected,\n      rows: rows.map(function (row) {\n        return (0, _lodash.default)(columns, row);\n      })\n    };\n  }\n\n  function _escapeBlob(data) {\n    if (typeof data === 'string') {\n      return data.replace(/\\u0002/g, \"\\x02\\x02\").replace(/\\u0001/g, \"\\x01\\x02\").replace(/\\u0000/g, \"\\x01\\x01\");\n    } else {\n      return data;\n    }\n  }\n\n  var _openExpoSQLiteDatabase = (0, _custom.default)(SQLiteDatabase);\n\n  function openDatabase(name) {\n    var version = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '1.0';\n    var description = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : name;\n    var size = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;\n    var callback = arguments.length > 4 ? arguments[4] : undefined;\n\n    if (name === undefined) {\n      throw new TypeError(\"The database name must not be undefined\");\n    }\n\n    return _openExpoSQLiteDatabase(name, version, description, size, callback);\n  }\n\n  var _default = {\n    openDatabase: openDatabase\n  };\n  exports.default = _default;\n});","map":[[16,0,1,0],[18,0,2,0],[20,0,3,0],[22,0,4,0],[24,6,5,8,"ExponentSQLite"],[24,20],[24,23,5,27,"NativeModules"],[24,49],[24,50,5,8,"ExponentSQLite"],[24,64],[26,6,6,6,"SQLiteDatabase"],[26,20],[27,0,7,4],[27,28,7,16,"name"],[27,32,7,4],[27,34,7,22],[28,0,7,22],[29,0,8,8],[29,11,8,13,"_closed"],[29,18,8,8],[29,21,8,23],[29,26,8,8],[30,0,9,8],[30,11,9,13,"_name"],[30,16,9,8],[30,19,9,21,"name"],[30,23,9,8],[31,0,10,5],[35,27,11,9,"queries"],[35,34],[35,36,11,18,"readOnly"],[35,44],[35,46,11,28,"callback"],[35,54],[35,56,11,38],[36,0,12,8],[36,12,12,12],[36,17,12,17,"_closed"],[36,24,12,8],[36,26,12,26],[37,0,13,12],[37,16,13,18],[37,20,13,22,"Error"],[37,25,13,18],[37,58,13,12],[38,0,14,9],[40,0,15,8,"ExponentSQLite"],[40,8,15,8,"ExponentSQLite"],[40,22,15,22],[40,23,15,23,"exec"],[40,27,15,8],[40,28,15,28],[40,33,15,33,"_name"],[40,38,15,8],[40,40,15,40,"queries"],[40,47,15,47],[40,48,15,48,"map"],[40,51,15,40],[40,52,15,52,"_serializeQuery"],[40,67,15,40],[40,68,15,8],[40,70,15,70,"readOnly"],[40,78,15,8],[40,80,15,80,"then"],[40,84,15,8],[40,85,15,85],[40,95,15,85,"nativeResultSets"],[40,111,15,101],[40,113,15,105],[41,0,16,12,"callback"],[41,10,16,12,"callback"],[41,18,16,20],[41,19,16,21],[41,23,16,20],[41,25,16,27,"nativeResultSets"],[41,41,16,43],[41,42,16,44,"map"],[41,45,16,27],[41,46,16,48,"_deserializeResultSet"],[41,67,16,27],[41,68,16,20],[41,69,16,12],[42,0,17,9],[42,9,15,8],[42,11,17,11],[42,21,17,11,"error"],[42,26,17,16],[42,28,17,20],[43,0,19,12,"callback"],[43,10,19,12,"callback"],[43,18,19,20],[43,19,19,21,"error"],[43,24,19,26],[43,36,19,38,"Error"],[43,41,19,21],[43,44,19,46,"error"],[43,49,19,21],[43,52,19,54],[43,56,19,58,"Error"],[43,61,19,54],[43,62,19,64,"error"],[43,67,19,54],[43,68,19,20],[43,69,19,12],[44,0,20,9],[44,9,15,8],[45,0,21,5],[48,30,22,12],[49,0,23,8],[49,13,23,13,"_closed"],[49,20,23,8],[49,23,23,23],[49,27,23,8],[50,0,24,8,"ExponentSQLite"],[50,8,24,8,"ExponentSQLite"],[50,22,24,22],[50,23,24,23,"close"],[50,28,24,8],[50,29,24,29],[50,34,24,34,"_name"],[50,39,24,8],[51,0,25,5],[56,0,27,0],[56,11,27,9,"_serializeQuery"],[56,26,27,0],[56,27,27,25,"query"],[56,32,27,0],[56,34,27,32],[57,0,28,4],[57,11,28,11],[57,12,28,12,"query"],[57,17,28,17],[57,18,28,18,"sql"],[57,21,28,11],[57,23,28,23,"Platform"],[57,45,28,32,"OS"],[57,47,28,23],[57,52,28,39],[57,61,28,23],[57,64,28,51,"query"],[57,69,28,56],[57,70,28,57,"args"],[57,74,28,51],[57,75,28,62,"map"],[57,78,28,51],[57,79,28,66,"_escapeBlob"],[57,90,28,51],[57,91,28,23],[57,94,28,81,"query"],[57,99,28,86],[57,100,28,87,"args"],[57,104,28,11],[57,105,28,4],[58,0,29,1],[60,0,30,0],[60,11,30,9,"_deserializeResultSet"],[60,32,30,0],[60,33,30,31,"nativeResult"],[60,45,30,0],[60,47,30,45],[61,0,30,45],[61,53,31,64,"nativeResult"],[61,65,30,45],[62,0,30,45],[62,8,31,9,"errorMessage"],[62,20,30,45],[63,0,30,45],[63,8,31,23,"insertId"],[63,16,30,45],[64,0,30,45],[64,8,31,33,"rowsAffected"],[64,20,30,45],[65,0,30,45],[65,8,31,47,"columns"],[65,15,30,45],[66,0,30,45],[66,8,31,56,"rows"],[66,12,30,45],[68,0,34,4],[68,8,34,8,"errorMessage"],[68,20,34,20],[68,25,34,25],[68,29,34,4],[68,31,34,31],[69,0,35,8],[69,13,35,15],[70,0,35,17,"error"],[70,8,35,17,"error"],[70,13,35,22],[70,15,35,24],[70,19,35,28,"Error"],[70,24,35,24],[70,25,35,34,"errorMessage"],[70,37,35,24],[71,0,35,15],[71,7,35,8],[72,0,36,5],[74,0,37,4],[74,11,37,11],[75,0,38,8,"insertId"],[75,6,38,8,"insertId"],[75,14,38,16],[75,16,38,8,"insertId"],[75,24,37,11],[76,0,39,8,"rowsAffected"],[76,6,39,8,"rowsAffected"],[76,18,39,20],[76,20,39,8,"rowsAffected"],[76,32,37,11],[77,0,40,8,"rows"],[77,6,40,8,"rows"],[77,10,40,12],[77,12,40,14,"rows"],[77,16,40,18],[77,17,40,19,"map"],[77,20,40,14],[77,21,40,23],[77,31,40,23,"row"],[77,34,40,26],[78,0,40,26],[78,15,40,30],[78,36,40,40,"columns"],[78,43,40,30],[78,45,40,49,"row"],[78,48,40,30],[78,49,40,26],[79,0,40,26],[79,7,40,14],[80,0,37,11],[80,5,37,4],[81,0,42,1],[83,0,43,0],[83,11,43,9,"_escapeBlob"],[83,22,43,0],[83,23,43,21,"data"],[83,27,43,0],[83,29,43,27],[84,0,44,4],[84,8,44,8],[84,15,44,15,"data"],[84,19,44,8],[84,24,44,24],[84,32,44,4],[84,34,44,34],[85,0,46,8],[85,13,46,15,"data"],[85,17,46,19],[85,18,47,13,"replace"],[85,25,46,15],[85,26,47,21],[85,35,46,15],[85,37,47,32],[85,47,46,15],[85,49,48,13,"replace"],[85,56,46,15],[85,57,48,21],[85,66,46,15],[85,68,48,32],[85,78,46,15],[85,80,49,13,"replace"],[85,87,46,15],[85,88,49,21],[85,97,46,15],[85,99,49,32],[85,109,46,15],[85,110,46,8],[86,0,51,5],[86,5,44,4],[86,11,52,9],[87,0,53,8],[87,13,53,15,"data"],[87,17,53,8],[88,0,54,5],[89,0,55,1],[91,0,56,0],[91,6,56,6,"_openExpoSQLiteDatabase"],[91,29,56,29],[91,32,56,32],[91,53,56,51,"SQLiteDatabase"],[91,67,56,32],[91,68,56,0],[93,0,57,7],[93,11,57,16,"openDatabase"],[93,23,57,7],[93,24,57,29,"name"],[93,28,57,7],[93,30,57,92],[94,0,57,92],[94,8,57,35,"version"],[94,15,57,92],[94,86,57,45],[94,91,57,92],[95,0,57,92],[95,8,57,52,"description"],[95,19,57,92],[95,90,57,66,"name"],[95,94,57,92],[96,0,57,92],[96,8,57,72,"size"],[96,12,57,92],[96,83,57,79],[96,84,57,92],[97,0,57,92],[97,8,57,82,"callback"],[97,16,57,92],[99,0,58,4],[99,8,58,8,"name"],[99,12,58,12],[99,17,58,17,"undefined"],[99,26,58,4],[99,28,58,28],[100,0,59,8],[100,12,59,14],[100,16,59,18,"TypeError"],[100,25,59,14],[100,68,59,8],[101,0,60,5],[103,0,61,4],[103,11,61,11,"_openExpoSQLiteDatabase"],[103,34,61,34],[103,35,61,35,"name"],[103,39,61,34],[103,41,61,41,"version"],[103,48,61,34],[103,50,61,50,"description"],[103,61,61,34],[103,63,61,63,"size"],[103,67,61,34],[103,69,61,69,"callback"],[103,77,61,34],[103,78,61,4],[104,0,62,1],[106,17,63,15],[107,0,64,4,"openDatabase"],[107,4,64,4,"openDatabase"],[107,16,64,16],[107,18,64,4,"openDatabase"],[108,0,63,15],[108,3]]},"type":"js/module"}]}