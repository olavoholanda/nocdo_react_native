{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/regenerator","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/objectSpread","data":{"isAsync":false}},{"name":"react-native","data":{"isAsync":false}},{"name":"./BranchEvent","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = createBranchUniversalObject;\n\n  var _regenerator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/regenerator\"));\n\n  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/objectSpread\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[3], \"react-native\");\n\n  var _BranchEvent = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"./BranchEvent\"));\n\n  var RNBranch = _reactNative.NativeModules.RNBranch;\n\n  function createBranchUniversalObject(identifier) {\n    var options,\n        contentMetadata,\n        key,\n        valueType,\n        branchUniversalObject,\n        price,\n        _ref,\n        ident,\n        _args = arguments;\n\n    return _regenerator.default.async(function createBranchUniversalObject$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            options = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n\n            if (!(typeof identifier !== 'string')) {\n              _context.next = 3;\n              break;\n            }\n\n            throw new Error('react-native-branch: identifier must be a string');\n\n          case 3:\n            contentMetadata = options.contentMetadata || {};\n\n            if (!contentMetadata.customMetadata) {\n              _context.next = 14;\n              break;\n            }\n\n            _context.t0 = _regenerator.default.keys(contentMetadata.customMetadata);\n\n          case 6:\n            if ((_context.t1 = _context.t0()).done) {\n              _context.next = 14;\n              break;\n            }\n\n            key = _context.t1.value;\n            valueType = typeof contentMetadata.customMetadata[key];\n\n            if (!(valueType == 'string')) {\n              _context.next = 11;\n              break;\n            }\n\n            return _context.abrupt(\"continue\", 6);\n\n          case 11:\n            console.warn('[Branch] customMetadata values must be strings. Value for property ' + key + ' has type ' + valueType + '.');\n            _context.next = 6;\n            break;\n\n          case 14:\n            branchUniversalObject = (0, _objectSpread2.default)({\n              canonicalIdentifier: identifier,\n              contentMetadata: contentMetadata\n            }, options);\n            price = contentMetadata.price === undefined ? undefined : '' + contentMetadata.price;\n            branchUniversalObject.contentMetadata.price = price;\n\n            if (options.automaticallyListOnSpotlight !== undefined) {\n              console.info('[Branch] automaticallyListOnSpotlight is deprecated. Please use locallyIndex instead.');\n            }\n\n            if (options.price !== undefined) {\n              console.info('[Branch] price is deprecated. Please use contentMetadata.price instead.');\n            }\n\n            if (options.currency !== undefined) {\n              console.info('[Branch] currency is deprecated. Please use contentMetadata.price instead.');\n            }\n\n            if (options.metadata !== undefined) {\n              console.info('[Branch] metadata is deprecated. Please use contentMetadata.customMetadata instead.');\n            }\n\n            if (options.contentIndexingMode !== undefined) {\n              console.info('[Branch] contentIndexingMode is deprecated. Please use locallyIndex or publiclyIndex instead.');\n            }\n\n            _context.next = 24;\n            return _regenerator.default.awrap(RNBranch.createUniversalObject(branchUniversalObject));\n\n          case 24:\n            _ref = _context.sent;\n            ident = _ref.ident;\n            return _context.abrupt(\"return\", {\n              ident: ident,\n              showShareSheet: function showShareSheet() {\n                var shareOptions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n                var linkProperties = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n                var controlParams = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n                shareOptions = (0, _objectSpread2.default)({\n                  title: options.title || '',\n                  text: options.contentDescription || ''\n                }, shareOptions);\n                linkProperties = (0, _objectSpread2.default)({\n                  feature: 'share',\n                  channel: 'RNApp'\n                }, linkProperties);\n                return this._tryFunction(RNBranch.showShareSheet, shareOptions, linkProperties, controlParams);\n              },\n              registerView: function registerView() {\n                console.info('[Branch] registerView is deprecated. Please use logEvent(BranchEvent.ViewItem) instead.');\n                return this._tryFunction(RNBranch.registerView);\n              },\n              generateShortUrl: function generateShortUrl() {\n                var linkProperties = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n                var controlParams = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n                return this._tryFunction(RNBranch.generateShortUrl, linkProperties, controlParams);\n              },\n              listOnSpotlight: function listOnSpotlight() {\n                console.info('[Branch] listOnSpotlight is deprecated. Please use locallyIndex instead.');\n                if (_reactNative.Platform.OS !== 'ios') return Promise.resolve();\n                return this._tryFunction(RNBranch.listOnSpotlight);\n              },\n              userCompletedAction: function userCompletedAction(event) {\n                var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n                console.info('[Branch] userCompletedAction is deprecated. Please use logEvent or the BranchEvent class instead.');\n\n                if (event == RNBranch.REGISTER_VIEW_EVENT) {\n                  return this.logEvent(_BranchEvent.default.ViewItem, {\n                    customData: state\n                  });\n                }\n\n                return this._tryFunction(RNBranch.userCompletedActionOnUniversalObject, event, state);\n              },\n              logEvent: function logEvent(eventName) {\n                var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n                return new _BranchEvent.default(eventName, this, params).logEvent();\n              },\n              release: function release() {\n                return RNBranch.releaseUniversalObject(this.ident);\n              },\n              _newIdent: function _newIdent() {\n                var _this = this;\n\n                return RNBranch.createUniversalObject(branchUniversalObject).then(function (_ref2) {\n                  var ident = _ref2.ident;\n                  _this.ident = ident;\n                  return ident;\n                });\n              },\n              _tryFunction: function _tryFunction(func) {\n                var _this2 = this;\n\n                for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n                  args[_key - 1] = arguments[_key];\n                }\n\n                return func.apply(void 0, [this.ident].concat(args)).catch(function (error) {\n                  if (error.code != 'RNBranch::Error::BUONotFound') {\n                    throw error;\n                  }\n\n                  return _this2._newIdent().then(function (ident) {\n                    return func.apply(void 0, [ident].concat(args));\n                  });\n                });\n              }\n            });\n\n          case 27:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, this);\n  }\n});","map":[[13,0,1,0],[15,0,2,0],[17,6,4,8,"RNBranch"],[17,14],[17,17,4,21,"NativeModules"],[17,43],[17,44,4,8,"RNBranch"],[17,52],[19,0,6,15],[19,11,6,30,"createBranchUniversalObject"],[19,38,6,15],[19,39,6,58,"identifier"],[19,49,6,15],[20,0,6,15],[21,0,6,15],[22,0,6,15],[23,0,6,15],[24,0,6,15],[25,0,6,15],[26,0,6,15],[27,0,6,15],[28,0,6,15],[30,0,6,15],[31,0,6,15],[32,0,6,15],[33,0,6,15],[34,0,6,70,"options"],[34,12,6,70,"options"],[34,19,6,15],[34,78,6,80],[34,80,6,15],[36,0,6,15],[36,18,7,6],[36,25,7,13,"identifier"],[36,35,7,6],[36,40,7,28],[36,48,6,15],[37,0,6,15],[38,0,6,15],[39,0,6,15],[41,0,6,15],[41,18,7,44],[41,22,7,48,"Error"],[41,27,7,44],[41,28,7,54],[41,78,7,44],[41,79,6,15],[43,0,6,15],[44,0,9,8,"contentMetadata"],[44,12,9,8,"contentMetadata"],[44,27,6,15],[44,30,9,26,"options"],[44,37,9,33],[44,38,9,34,"contentMetadata"],[44,53,9,26],[44,57,9,53],[44,59,6,15],[46,0,6,15],[46,17,11,6,"contentMetadata"],[46,32,11,21],[46,33,11,22,"customMetadata"],[46,47,6,15],[47,0,6,15],[48,0,6,15],[49,0,6,15],[51,0,6,15],[51,52,12,22,"contentMetadata"],[51,67,12,37],[51,68,12,38,"customMetadata"],[51,82,6,15],[53,0,6,15],[54,0,6,15],[55,0,6,15],[56,0,6,15],[57,0,6,15],[59,0,12,15,"key"],[59,12,12,15,"key"],[59,15,6,15],[60,0,13,12,"valueType"],[60,12,13,12,"valueType"],[60,21,6,15],[60,24,13,24],[60,31,13,31,"contentMetadata"],[60,46,13,46],[60,47,13,47,"customMetadata"],[60,61,13,31],[60,62,13,62,"key"],[60,65,13,31],[60,66,6,15],[62,0,6,15],[62,18,14,10,"valueType"],[62,27,14,19],[62,31,14,23],[62,39,6,15],[63,0,6,15],[64,0,6,15],[65,0,6,15],[67,0,6,15],[69,0,6,15],[70,0,15,6,"console"],[70,12,15,6,"console"],[70,19,15,13],[70,20,15,14,"warn"],[70,24,15,6],[70,25,15,19],[70,97,15,91,"key"],[70,100,15,19],[70,103,15,97],[70,115,15,19],[70,118,15,112,"valueType"],[70,127,15,19],[70,130,15,124],[70,133,15,6],[71,0,6,15],[72,0,6,15],[74,0,6,15],[75,0,20,8,"branchUniversalObject"],[75,12,20,8,"branchUniversalObject"],[75,33,6,15],[76,0,21,4,"canonicalIdentifier"],[76,14,21,4,"canonicalIdentifier"],[76,33,21,23],[76,35,21,25,"identifier"],[76,45,6,15],[77,0,22,4,"contentMetadata"],[77,14,22,4,"contentMetadata"],[77,29,22,19],[77,31,22,21,"contentMetadata"],[78,0,6,15],[78,15,23,7,"options"],[78,22,6,15],[79,0,27,8,"price"],[79,12,27,8,"price"],[79,17,6,15],[79,20,27,16,"contentMetadata"],[79,35,27,31],[79,36,27,32,"price"],[79,41,27,16],[79,46,27,42,"undefined"],[79,55,27,16],[79,58,27,54,"undefined"],[79,67,27,16],[79,70,27,66],[79,75,27,71,"contentMetadata"],[79,90,27,86],[79,91,27,87,"price"],[79,96,6,15],[80,0,28,2,"branchUniversalObject"],[80,12,28,2,"branchUniversalObject"],[80,33,28,23],[80,34,28,24,"contentMetadata"],[80,49,28,2],[80,50,28,40,"price"],[80,55,28,2],[80,58,28,48,"price"],[80,63,28,2],[82,0,30,2],[82,16,30,6,"options"],[82,23,30,13],[82,24,30,14,"automaticallyListOnSpotlight"],[82,52,30,6],[82,57,30,47,"undefined"],[82,66,30,2],[82,68,30,58],[83,0,31,4,"console"],[83,14,31,4,"console"],[83,21,31,11],[83,22,31,12,"info"],[83,26,31,4],[83,27,31,17],[83,114,31,4],[84,0,32,3],[86,0,34,2],[86,16,34,6,"options"],[86,23,34,13],[86,24,34,14,"price"],[86,29,34,6],[86,34,34,24,"undefined"],[86,43,34,2],[86,45,34,35],[87,0,35,4,"console"],[87,14,35,4,"console"],[87,21,35,11],[87,22,35,12,"info"],[87,26,35,4],[87,27,35,17],[87,100,35,4],[88,0,36,3],[90,0,38,2],[90,16,38,6,"options"],[90,23,38,13],[90,24,38,14,"currency"],[90,32,38,6],[90,37,38,27,"undefined"],[90,46,38,2],[90,48,38,38],[91,0,39,4,"console"],[91,14,39,4,"console"],[91,21,39,11],[91,22,39,12,"info"],[91,26,39,4],[91,27,39,17],[91,103,39,4],[92,0,40,3],[94,0,42,2],[94,16,42,6,"options"],[94,23,42,13],[94,24,42,14,"metadata"],[94,32,42,6],[94,37,42,27,"undefined"],[94,46,42,2],[94,48,42,38],[95,0,43,4,"console"],[95,14,43,4,"console"],[95,21,43,11],[95,22,43,12,"info"],[95,26,43,4],[95,27,43,17],[95,112,43,4],[96,0,44,3],[98,0,46,2],[98,16,46,6,"options"],[98,23,46,13],[98,24,46,14,"contentIndexingMode"],[98,43,46,6],[98,48,46,38,"undefined"],[98,57,46,2],[98,59,46,49],[99,0,47,4,"console"],[99,14,47,4,"console"],[99,21,47,11],[99,22,47,12,"info"],[99,26,47,4],[99,27,47,17],[99,122,47,4],[100,0,48,3],[102,0,6,15],[103,0,6,15],[103,46,50,26,"RNBranch"],[103,54,50,34],[103,55,50,35,"createUniversalObject"],[103,76,50,26],[103,77,50,57,"branchUniversalObject"],[103,98,50,26],[103,99,6,15],[105,0,6,15],[106,0,6,15],[107,0,50,10,"ident"],[107,12,50,10,"ident"],[107,17,6,15],[107,25,50,10,"ident"],[107,30,6,15],[108,0,6,15],[108,45,52,9],[109,0,53,4,"ident"],[109,14,53,4,"ident"],[109,19,53,9],[109,21,53,11,"ident"],[109,26,52,9],[110,0,54,4,"showShareSheet"],[110,14,54,4,"showShareSheet"],[110,28,52,9],[110,56,54,79],[111,0,54,79],[111,20,54,19,"shareOptions"],[111,32,54,79],[111,103,54,34],[111,105,54,79],[112,0,54,79],[112,20,54,38,"linkProperties"],[112,34,54,79],[112,105,54,55],[112,107,54,79],[113,0,54,79],[113,20,54,59,"controlParams"],[113,33,54,79],[113,104,54,75],[113,106,54,79],[114,0,55,6,"shareOptions"],[114,16,55,6,"shareOptions"],[114,28,55,18],[115,0,56,8,"title"],[115,18,56,8,"title"],[115,23,56,13],[115,25,56,15,"options"],[115,32,56,22],[115,33,56,23,"title"],[115,38,56,15],[115,42,56,32],[115,44,55,18],[116,0,57,8,"text"],[116,18,57,8,"text"],[116,22,57,12],[116,24,57,14,"options"],[116,31,57,21],[116,32,57,22,"contentDescription"],[116,50,57,14],[116,54,57,44],[117,0,55,18],[117,19,58,11,"shareOptions"],[117,31,55,18],[117,32,55,6],[118,0,61,6,"linkProperties"],[118,16,61,6,"linkProperties"],[118,30,61,20],[119,0,62,8,"feature"],[119,18,62,8,"feature"],[119,25,62,15],[119,27,62,17],[119,34,61,20],[120,0,63,8,"channel"],[120,18,63,8,"channel"],[120,25,63,15],[120,27,63,17],[121,0,61,20],[121,19,64,11,"linkProperties"],[121,33,61,20],[121,34,61,6],[122,0,67,6],[122,23,67,13],[122,28,67,18,"_tryFunction"],[122,40,67,13],[122,41,67,31,"RNBranch"],[122,49,67,39],[122,50,67,40,"showShareSheet"],[122,64,67,13],[122,66,67,56,"shareOptions"],[122,78,67,13],[122,80,67,70,"linkProperties"],[122,94,67,13],[122,96,67,86,"controlParams"],[122,109,67,13],[122,110,67,6],[123,0,68,5],[123,15,52,9],[124,0,70,4,"registerView"],[124,14,70,4,"registerView"],[124,26,52,9],[124,52,70,19],[125,0,71,6,"console"],[125,16,71,6,"console"],[125,23,71,13],[125,24,71,14,"info"],[125,28,71,6],[125,29,71,19],[125,118,71,6],[126,0,72,6],[126,23,72,13],[126,28,72,18,"_tryFunction"],[126,40,72,13],[126,41,72,31,"RNBranch"],[126,49,72,39],[126,50,72,40,"registerView"],[126,62,72,13],[126,63,72,6],[127,0,73,5],[127,15,52,9],[128,0,74,4,"generateShortUrl"],[128,14,74,4,"generateShortUrl"],[128,30,52,9],[128,60,74,62],[129,0,74,62],[129,20,74,21,"linkProperties"],[129,34,74,62],[129,105,74,38],[129,107,74,62],[130,0,74,62],[130,20,74,42,"controlParams"],[130,33,74,62],[130,104,74,58],[130,106,74,62],[131,0,75,6],[131,23,75,13],[131,28,75,18,"_tryFunction"],[131,40,75,13],[131,41,75,31,"RNBranch"],[131,49,75,39],[131,50,75,40,"generateShortUrl"],[131,66,75,13],[131,68,75,58,"linkProperties"],[131,82,75,13],[131,84,75,74,"controlParams"],[131,97,75,13],[131,98,75,6],[132,0,76,5],[132,15,52,9],[133,0,77,4,"listOnSpotlight"],[133,14,77,4,"listOnSpotlight"],[133,29,52,9],[133,58,77,22],[134,0,78,6,"console"],[134,16,78,6,"console"],[134,23,78,13],[134,24,78,14,"info"],[134,28,78,6],[134,29,78,19],[134,103,78,6],[135,0,79,6],[135,20,79,10,"Platform"],[135,42,79,19,"OS"],[135,44,79,10],[135,49,79,26],[135,54,79,6],[135,56,79,33],[135,63,79,40,"Promise"],[135,70,79,47],[135,71,79,48,"resolve"],[135,78,79,40],[135,80,79,33],[136,0,80,6],[136,23,80,13],[136,28,80,18,"_tryFunction"],[136,40,80,13],[136,41,80,31,"RNBranch"],[136,49,80,39],[136,50,80,40,"listOnSpotlight"],[136,65,80,13],[136,66,80,6],[137,0,81,5],[137,15,52,9],[138,0,82,4,"userCompletedAction"],[138,14,82,4,"userCompletedAction"],[138,33,52,9],[138,64,82,24,"event"],[138,69,52,9],[138,71,82,43],[139,0,82,43],[139,20,82,31,"state"],[139,25,82,43],[139,96,82,39],[139,98,82,43],[140,0,83,6,"console"],[140,16,83,6,"console"],[140,23,83,13],[140,24,83,14,"info"],[140,28,83,6],[140,29,83,19],[140,128,83,6],[142,0,84,6],[142,20,84,10,"event"],[142,25,84,15],[142,29,84,19,"RNBranch"],[142,37,84,27],[142,38,84,28,"REGISTER_VIEW_EVENT"],[142,57,84,6],[142,59,84,49],[143,0,85,8],[143,25,85,15],[143,30,85,20,"logEvent"],[143,38,85,15],[143,39,85,29,"BranchEvent"],[143,60,85,41,"ViewItem"],[143,68,85,15],[143,70,85,51],[144,0,85,53,"customData"],[144,20,85,53,"customData"],[144,30,85,63],[144,32,85,65,"state"],[145,0,85,51],[145,19,85,15],[145,20,85,8],[146,0,86,7],[148,0,87,6],[148,23,87,13],[148,28,87,18,"_tryFunction"],[148,40,87,13],[148,41,87,31,"RNBranch"],[148,49,87,39],[148,50,87,40,"userCompletedActionOnUniversalObject"],[148,86,87,13],[148,88,87,78,"event"],[148,93,87,13],[148,95,87,85,"state"],[148,100,87,13],[148,101,87,6],[149,0,88,5],[149,15,52,9],[150,0,89,4,"logEvent"],[150,14,89,4,"logEvent"],[150,22,52,9],[150,42,89,13,"eventName"],[150,51,52,9],[150,53,89,37],[151,0,89,37],[151,20,89,24,"params"],[151,26,89,37],[151,97,89,33],[151,99,89,37],[152,0,90,6],[152,23,90,13],[152,27,90,17,"BranchEvent"],[152,47,90,13],[152,48,90,29,"eventName"],[152,57,90,13],[152,59,90,40],[152,63,90,13],[152,65,90,46,"params"],[152,71,90,13],[152,73,90,54,"logEvent"],[152,81,90,13],[152,83,90,6],[153,0,91,5],[153,15,52,9],[154,0,92,4,"release"],[154,14,92,4,"release"],[154,21,52,9],[154,42,92,14],[155,0,93,6],[155,23,93,13,"RNBranch"],[155,31,93,21],[155,32,93,22,"releaseUniversalObject"],[155,54,93,13],[155,55,93,45],[155,60,93,50,"ident"],[155,65,93,13],[155,66,93,6],[156,0,94,5],[156,15,52,9],[157,0,99,4,"_newIdent"],[157,14,99,4,"_newIdent"],[157,23,52,9],[157,46,99,16],[158,0,99,16],[160,0,100,6],[160,23,100,13,"RNBranch"],[160,31,100,21],[160,32,100,22,"createUniversalObject"],[160,53,100,13],[160,54,100,44,"branchUniversalObject"],[160,75,100,13],[160,77,100,67,"then"],[160,81,100,13],[160,82,100,72],[160,99,100,85],[161,0,100,85],[161,22,100,74,"ident"],[161,27,100,85],[161,36,100,74,"ident"],[161,41,100,85],[162,0,101,8],[162,18,101,8],[162,23,101,12],[162,24,101,13,"ident"],[162,29,101,8],[162,32,101,21,"ident"],[162,37,101,8],[163,0,102,8],[163,25,102,15,"ident"],[163,30,102,8],[164,0,103,7],[164,17,100,13],[164,18,100,6],[165,0,104,5],[165,15,52,9],[166,0,106,4,"_tryFunction"],[166,14,106,4,"_tryFunction"],[166,26,52,9],[166,50,106,17,"func"],[166,54,52,9],[166,56,106,32],[167,0,106,32],[169,0,106,32],[169,50,106,26,"args"],[169,54,106,32],[170,0,106,26,"args"],[170,18,106,26,"args"],[170,22,106,32],[171,0,106,32],[173,0,107,6],[173,23,107,13,"func"],[173,27,107,17],[173,33,107,13],[173,43,107,18],[173,48,107,23,"ident"],[173,53,107,13],[173,62,107,33,"args"],[173,66,107,13],[173,69,107,39,"catch"],[173,74,107,13],[173,75,107,45],[173,85,107,46,"error"],[173,90,107,45],[173,92,107,56],[174,0,108,8],[174,22,108,12,"error"],[174,27,108,17],[174,28,108,18,"code"],[174,32,108,12],[174,36,108,26],[174,66,108,8],[174,68,108,58],[175,0,109,10],[175,26,109,16,"error"],[175,31,109,10],[176,0,110,9],[178,0,111,8],[178,25,111,15],[178,31,111,19],[178,32,111,20,"_newIdent"],[178,41,111,15],[178,44,111,32,"then"],[178,48,111,15],[178,49,111,37],[178,59,111,38,"ident"],[178,64,111,37],[178,66,111,48],[179,0,112,10],[179,27,112,17,"func"],[179,31,112,21],[179,37,112,17],[179,47,112,22,"ident"],[179,52,112,17],[179,61,112,32,"args"],[179,65,112,17],[179,67,112,10],[180,0,113,9],[180,19,111,15],[180,20,111,8],[181,0,114,7],[181,17,107,13],[181,18,107,6],[182,0,115,5],[183,0,52,9],[183,13,6,15],[185,0,6,15],[186,0,6,15],[187,0,6,15],[188,0,6,15],[189,0,6,15],[190,0,6,15],[191,0,6,15]]},"type":"js/module"}]}