{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/objectSpread","data":{"isAsync":false}},{"name":"@babel/runtime/regenerator","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false}},{"name":"react-native","data":{"isAsync":false}},{"name":"../AV","data":{"isAsync":false}},{"name":"./AudioAvailability","data":{"isAsync":false}},{"name":"./Sound","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.Recording = exports.RECORDING_OPTIONS_PRESET_LOW_QUALITY = exports.RECORDING_OPTIONS_PRESET_HIGH_QUALITY = exports.RECORDING_OPTION_IOS_BIT_RATE_STRATEGY_VARIABLE = exports.RECORDING_OPTION_IOS_BIT_RATE_STRATEGY_VARIABLE_CONSTRAINED = exports.RECORDING_OPTION_IOS_BIT_RATE_STRATEGY_LONG_TERM_AVERAGE = exports.RECORDING_OPTION_IOS_BIT_RATE_STRATEGY_CONSTANT = exports.RECORDING_OPTION_IOS_AUDIO_QUALITY_MAX = exports.RECORDING_OPTION_IOS_AUDIO_QUALITY_HIGH = exports.RECORDING_OPTION_IOS_AUDIO_QUALITY_MEDIUM = exports.RECORDING_OPTION_IOS_AUDIO_QUALITY_LOW = exports.RECORDING_OPTION_IOS_AUDIO_QUALITY_MIN = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_ENHANCEDAC3 = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_AES3 = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MICROSOFTGSM = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_DVIINTELIMA = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_ILBC = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_AUDIBLE = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_AMR_WB = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_AMR = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_SPATIAL = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_HE_V2 = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_ELD_V2 = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_ELD_SBR = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_ELD = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_LD = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_HE = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_APPLELOSSLESS = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEGLAYER3 = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEGLAYER2 = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEGLAYER1 = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_QUALCOMM = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_QDESIGN2 = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_QDESIGN = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_ALAW = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_ULAW = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MACE6 = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MACE3 = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4TWINVQ = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4HVXC = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4CELP = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_APPLEIMA4 = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_60958AC3 = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_AC3 = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_LINEARPCM = exports.RECORDING_OPTION_ANDROID_AUDIO_ENCODER_AAC_ELD = exports.RECORDING_OPTION_ANDROID_AUDIO_ENCODER_HE_AAC = exports.RECORDING_OPTION_ANDROID_AUDIO_ENCODER_AAC = exports.RECORDING_OPTION_ANDROID_AUDIO_ENCODER_AMR_WB = exports.RECORDING_OPTION_ANDROID_AUDIO_ENCODER_AMR_NB = exports.RECORDING_OPTION_ANDROID_AUDIO_ENCODER_DEFAULT = exports.RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_WEBM = exports.RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_MPEG2TS = exports.RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_RTP_AVP = exports.RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_AAC_ADTS = exports.RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_AAC_ADIF = exports.RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_AMR_WB = exports.RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_AMR_NB = exports.RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_MPEG_4 = exports.RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_THREE_GPP = exports.RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_DEFAULT = void 0;\n\n  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/objectSpread\"));\n\n  var _regenerator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/regenerator\"));\n\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/classCallCheck\"));\n\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/createClass\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[5], \"react-native\");\n\n  var _AV = _$$_REQUIRE(_dependencyMap[6], \"../AV\");\n\n  var _AudioAvailability = _$$_REQUIRE(_dependencyMap[7], \"./AudioAvailability\");\n\n  var _Sound = _$$_REQUIRE(_dependencyMap[8], \"./Sound\");\n\n  var RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_DEFAULT = 0;\n  exports.RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_DEFAULT = RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_DEFAULT;\n  var RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_THREE_GPP = 1;\n  exports.RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_THREE_GPP = RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_THREE_GPP;\n  var RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_MPEG_4 = 2;\n  exports.RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_MPEG_4 = RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_MPEG_4;\n  var RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_AMR_NB = 3;\n  exports.RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_AMR_NB = RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_AMR_NB;\n  var RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_AMR_WB = 4;\n  exports.RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_AMR_WB = RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_AMR_WB;\n  var RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_AAC_ADIF = 5;\n  exports.RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_AAC_ADIF = RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_AAC_ADIF;\n  var RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_AAC_ADTS = 6;\n  exports.RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_AAC_ADTS = RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_AAC_ADTS;\n  var RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_RTP_AVP = 7;\n  exports.RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_RTP_AVP = RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_RTP_AVP;\n  var RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_MPEG2TS = 8;\n  exports.RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_MPEG2TS = RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_MPEG2TS;\n  var RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_WEBM = 9;\n  exports.RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_WEBM = RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_WEBM;\n  var RECORDING_OPTION_ANDROID_AUDIO_ENCODER_DEFAULT = 0;\n  exports.RECORDING_OPTION_ANDROID_AUDIO_ENCODER_DEFAULT = RECORDING_OPTION_ANDROID_AUDIO_ENCODER_DEFAULT;\n  var RECORDING_OPTION_ANDROID_AUDIO_ENCODER_AMR_NB = 1;\n  exports.RECORDING_OPTION_ANDROID_AUDIO_ENCODER_AMR_NB = RECORDING_OPTION_ANDROID_AUDIO_ENCODER_AMR_NB;\n  var RECORDING_OPTION_ANDROID_AUDIO_ENCODER_AMR_WB = 2;\n  exports.RECORDING_OPTION_ANDROID_AUDIO_ENCODER_AMR_WB = RECORDING_OPTION_ANDROID_AUDIO_ENCODER_AMR_WB;\n  var RECORDING_OPTION_ANDROID_AUDIO_ENCODER_AAC = 3;\n  exports.RECORDING_OPTION_ANDROID_AUDIO_ENCODER_AAC = RECORDING_OPTION_ANDROID_AUDIO_ENCODER_AAC;\n  var RECORDING_OPTION_ANDROID_AUDIO_ENCODER_HE_AAC = 4;\n  exports.RECORDING_OPTION_ANDROID_AUDIO_ENCODER_HE_AAC = RECORDING_OPTION_ANDROID_AUDIO_ENCODER_HE_AAC;\n  var RECORDING_OPTION_ANDROID_AUDIO_ENCODER_AAC_ELD = 5;\n  exports.RECORDING_OPTION_ANDROID_AUDIO_ENCODER_AAC_ELD = RECORDING_OPTION_ANDROID_AUDIO_ENCODER_AAC_ELD;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_LINEARPCM = 'lpcm';\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_LINEARPCM = RECORDING_OPTION_IOS_OUTPUT_FORMAT_LINEARPCM;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_AC3 = 'ac-3';\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_AC3 = RECORDING_OPTION_IOS_OUTPUT_FORMAT_AC3;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_60958AC3 = 'cac3';\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_60958AC3 = RECORDING_OPTION_IOS_OUTPUT_FORMAT_60958AC3;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_APPLEIMA4 = 'ima4';\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_APPLEIMA4 = RECORDING_OPTION_IOS_OUTPUT_FORMAT_APPLEIMA4;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC = 'aac ';\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC = RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4CELP = 'celp';\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4CELP = RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4CELP;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4HVXC = 'hvxc';\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4HVXC = RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4HVXC;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4TWINVQ = 'twvq';\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4TWINVQ = RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4TWINVQ;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_MACE3 = 'MAC3';\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MACE3 = RECORDING_OPTION_IOS_OUTPUT_FORMAT_MACE3;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_MACE6 = 'MAC6';\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MACE6 = RECORDING_OPTION_IOS_OUTPUT_FORMAT_MACE6;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_ULAW = 'ulaw';\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_ULAW = RECORDING_OPTION_IOS_OUTPUT_FORMAT_ULAW;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_ALAW = 'alaw';\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_ALAW = RECORDING_OPTION_IOS_OUTPUT_FORMAT_ALAW;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_QDESIGN = 'QDMC';\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_QDESIGN = RECORDING_OPTION_IOS_OUTPUT_FORMAT_QDESIGN;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_QDESIGN2 = 'QDM2';\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_QDESIGN2 = RECORDING_OPTION_IOS_OUTPUT_FORMAT_QDESIGN2;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_QUALCOMM = 'Qclp';\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_QUALCOMM = RECORDING_OPTION_IOS_OUTPUT_FORMAT_QUALCOMM;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEGLAYER1 = '.mp1';\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEGLAYER1 = RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEGLAYER1;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEGLAYER2 = '.mp2';\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEGLAYER2 = RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEGLAYER2;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEGLAYER3 = '.mp3';\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEGLAYER3 = RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEGLAYER3;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_APPLELOSSLESS = 'alac';\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_APPLELOSSLESS = RECORDING_OPTION_IOS_OUTPUT_FORMAT_APPLELOSSLESS;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_HE = 'aach';\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_HE = RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_HE;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_LD = 'aacl';\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_LD = RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_LD;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_ELD = 'aace';\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_ELD = RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_ELD;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_ELD_SBR = 'aacf';\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_ELD_SBR = RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_ELD_SBR;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_ELD_V2 = 'aacg';\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_ELD_V2 = RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_ELD_V2;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_HE_V2 = 'aacp';\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_HE_V2 = RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_HE_V2;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_SPATIAL = 'aacs';\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_SPATIAL = RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_SPATIAL;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_AMR = 'samr';\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_AMR = RECORDING_OPTION_IOS_OUTPUT_FORMAT_AMR;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_AMR_WB = 'sawb';\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_AMR_WB = RECORDING_OPTION_IOS_OUTPUT_FORMAT_AMR_WB;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_AUDIBLE = 'AUDB';\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_AUDIBLE = RECORDING_OPTION_IOS_OUTPUT_FORMAT_AUDIBLE;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_ILBC = 'ilbc';\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_ILBC = RECORDING_OPTION_IOS_OUTPUT_FORMAT_ILBC;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_DVIINTELIMA = 0x6d730011;\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_DVIINTELIMA = RECORDING_OPTION_IOS_OUTPUT_FORMAT_DVIINTELIMA;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_MICROSOFTGSM = 0x6d730031;\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MICROSOFTGSM = RECORDING_OPTION_IOS_OUTPUT_FORMAT_MICROSOFTGSM;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_AES3 = 'aes3';\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_AES3 = RECORDING_OPTION_IOS_OUTPUT_FORMAT_AES3;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_ENHANCEDAC3 = 'ec-3';\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_ENHANCEDAC3 = RECORDING_OPTION_IOS_OUTPUT_FORMAT_ENHANCEDAC3;\n  var RECORDING_OPTION_IOS_AUDIO_QUALITY_MIN = 0;\n  exports.RECORDING_OPTION_IOS_AUDIO_QUALITY_MIN = RECORDING_OPTION_IOS_AUDIO_QUALITY_MIN;\n  var RECORDING_OPTION_IOS_AUDIO_QUALITY_LOW = 0x20;\n  exports.RECORDING_OPTION_IOS_AUDIO_QUALITY_LOW = RECORDING_OPTION_IOS_AUDIO_QUALITY_LOW;\n  var RECORDING_OPTION_IOS_AUDIO_QUALITY_MEDIUM = 0x40;\n  exports.RECORDING_OPTION_IOS_AUDIO_QUALITY_MEDIUM = RECORDING_OPTION_IOS_AUDIO_QUALITY_MEDIUM;\n  var RECORDING_OPTION_IOS_AUDIO_QUALITY_HIGH = 0x60;\n  exports.RECORDING_OPTION_IOS_AUDIO_QUALITY_HIGH = RECORDING_OPTION_IOS_AUDIO_QUALITY_HIGH;\n  var RECORDING_OPTION_IOS_AUDIO_QUALITY_MAX = 0x7f;\n  exports.RECORDING_OPTION_IOS_AUDIO_QUALITY_MAX = RECORDING_OPTION_IOS_AUDIO_QUALITY_MAX;\n  var RECORDING_OPTION_IOS_BIT_RATE_STRATEGY_CONSTANT = 0;\n  exports.RECORDING_OPTION_IOS_BIT_RATE_STRATEGY_CONSTANT = RECORDING_OPTION_IOS_BIT_RATE_STRATEGY_CONSTANT;\n  var RECORDING_OPTION_IOS_BIT_RATE_STRATEGY_LONG_TERM_AVERAGE = 1;\n  exports.RECORDING_OPTION_IOS_BIT_RATE_STRATEGY_LONG_TERM_AVERAGE = RECORDING_OPTION_IOS_BIT_RATE_STRATEGY_LONG_TERM_AVERAGE;\n  var RECORDING_OPTION_IOS_BIT_RATE_STRATEGY_VARIABLE_CONSTRAINED = 2;\n  exports.RECORDING_OPTION_IOS_BIT_RATE_STRATEGY_VARIABLE_CONSTRAINED = RECORDING_OPTION_IOS_BIT_RATE_STRATEGY_VARIABLE_CONSTRAINED;\n  var RECORDING_OPTION_IOS_BIT_RATE_STRATEGY_VARIABLE = 3;\n  exports.RECORDING_OPTION_IOS_BIT_RATE_STRATEGY_VARIABLE = RECORDING_OPTION_IOS_BIT_RATE_STRATEGY_VARIABLE;\n  var RECORDING_OPTIONS_PRESET_HIGH_QUALITY = {\n    android: {\n      extension: '.m4a',\n      outputFormat: RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_MPEG_4,\n      audioEncoder: RECORDING_OPTION_ANDROID_AUDIO_ENCODER_AAC,\n      sampleRate: 44100,\n      numberOfChannels: 2,\n      bitRate: 128000\n    },\n    ios: {\n      extension: '.caf',\n      audioQuality: RECORDING_OPTION_IOS_AUDIO_QUALITY_MAX,\n      sampleRate: 44100,\n      numberOfChannels: 2,\n      bitRate: 128000,\n      linearPCMBitDepth: 16,\n      linearPCMIsBigEndian: false,\n      linearPCMIsFloat: false\n    }\n  };\n  exports.RECORDING_OPTIONS_PRESET_HIGH_QUALITY = RECORDING_OPTIONS_PRESET_HIGH_QUALITY;\n  var RECORDING_OPTIONS_PRESET_LOW_QUALITY = {\n    android: {\n      extension: '.3gp',\n      outputFormat: RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_THREE_GPP,\n      audioEncoder: RECORDING_OPTION_ANDROID_AUDIO_ENCODER_AMR_NB,\n      sampleRate: 44100,\n      numberOfChannels: 2,\n      bitRate: 128000\n    },\n    ios: {\n      extension: '.caf',\n      audioQuality: RECORDING_OPTION_IOS_AUDIO_QUALITY_MIN,\n      sampleRate: 44100,\n      numberOfChannels: 2,\n      bitRate: 128000,\n      linearPCMBitDepth: 16,\n      linearPCMIsBigEndian: false,\n      linearPCMIsFloat: false\n    }\n  };\n  exports.RECORDING_OPTIONS_PRESET_LOW_QUALITY = RECORDING_OPTIONS_PRESET_LOW_QUALITY;\n  var _recorderExists = false;\n\n  var Recording = function () {\n    function Recording() {\n      var _this = this;\n\n      (0, _classCallCheck2.default)(this, Recording);\n      this._canRecord = false;\n      this._isDoneRecording = false;\n      this._finalDurationMillis = 0;\n      this._uri = null;\n      this._onRecordingStatusUpdate = null;\n      this._progressUpdateTimeoutVariable = null;\n      this._progressUpdateIntervalMillis = _AV._DEFAULT_PROGRESS_UPDATE_INTERVAL_MILLIS;\n      this._options = null;\n\n      this._cleanupForUnloadedRecorder = function _callee(finalStatus) {\n        return _regenerator.default.async(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _this._canRecord = false;\n                _this._isDoneRecording = true;\n                _this._finalDurationMillis = finalStatus.durationMillis;\n                _recorderExists = false;\n\n                if (_reactNative.NativeModules.ExponentAV.setUnloadedCallbackForAndroidRecording) {\n                  _reactNative.NativeModules.ExponentAV.setUnloadedCallbackForAndroidRecording(null);\n                }\n\n                _this._disablePolling();\n\n                _context.next = 8;\n                return _regenerator.default.awrap(_this.getStatusAsync());\n\n              case 8:\n                return _context.abrupt(\"return\", _context.sent);\n\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, null, this);\n      };\n\n      this._pollingLoop = function _callee2() {\n        return _regenerator.default.async(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!((0, _AudioAvailability.isAudioEnabled)() && _this._canRecord && _this._onRecordingStatusUpdate != null)) {\n                  _context2.next = 10;\n                  break;\n                }\n\n                _this._progressUpdateTimeoutVariable = setTimeout(_this._pollingLoop, _this._progressUpdateIntervalMillis);\n                _context2.prev = 2;\n                _context2.next = 5;\n                return _regenerator.default.awrap(_this.getStatusAsync());\n\n              case 5:\n                _context2.next = 10;\n                break;\n\n              case 7:\n                _context2.prev = 7;\n                _context2.t0 = _context2[\"catch\"](2);\n\n                _this._disablePolling();\n\n              case 10:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, null, this, [[2, 7]]);\n      };\n\n      this.getStatusAsync = function _callee3() {\n        var status;\n        return _regenerator.default.async(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (!_this._canRecord) {\n                  _context3.next = 2;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\", _this._performOperationAndHandleStatusAsync(function () {\n                  return _reactNative.NativeModules.ExponentAV.getAudioRecordingStatus();\n                }));\n\n              case 2:\n                status = {\n                  canRecord: false,\n                  isRecording: false,\n                  isDoneRecording: _this._isDoneRecording,\n                  durationMillis: _this._finalDurationMillis\n                };\n\n                _this._callOnRecordingStatusUpdateForNewStatus(status);\n\n                return _context3.abrupt(\"return\", status);\n\n              case 5:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, null, this);\n      };\n    }\n\n    (0, _createClass2.default)(Recording, [{\n      key: \"_disablePolling\",\n      value: function _disablePolling() {\n        if (this._progressUpdateTimeoutVariable != null) {\n          clearTimeout(this._progressUpdateTimeoutVariable);\n          this._progressUpdateTimeoutVariable = null;\n        }\n      }\n    }, {\n      key: \"_enablePollingIfNecessaryAndPossible\",\n      value: function _enablePollingIfNecessaryAndPossible() {\n        if ((0, _AudioAvailability.isAudioEnabled)() && this._canRecord && this._onRecordingStatusUpdate != null) {\n          this._disablePolling();\n\n          this._pollingLoop();\n        }\n      }\n    }, {\n      key: \"_callOnRecordingStatusUpdateForNewStatus\",\n      value: function _callOnRecordingStatusUpdateForNewStatus(status) {\n        if (this._onRecordingStatusUpdate != null) {\n          this._onRecordingStatusUpdate(status);\n        }\n      }\n    }, {\n      key: \"_performOperationAndHandleStatusAsync\",\n      value: function _performOperationAndHandleStatusAsync(operation) {\n        var status;\n        return _regenerator.default.async(function _performOperationAndHandleStatusAsync$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                (0, _AudioAvailability.throwIfAudioIsDisabled)();\n\n                if (!this._canRecord) {\n                  _context4.next = 9;\n                  break;\n                }\n\n                _context4.next = 4;\n                return _regenerator.default.awrap(operation());\n\n              case 4:\n                status = _context4.sent;\n\n                this._callOnRecordingStatusUpdateForNewStatus(status);\n\n                return _context4.abrupt(\"return\", status);\n\n              case 9:\n                throw new Error('Cannot complete operation because this recorder is not ready to record.');\n\n              case 10:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, null, this);\n      }\n    }, {\n      key: \"setOnRecordingStatusUpdate\",\n      value: function setOnRecordingStatusUpdate(onRecordingStatusUpdate) {\n        this._onRecordingStatusUpdate = onRecordingStatusUpdate;\n\n        if (onRecordingStatusUpdate == null) {\n          this._disablePolling();\n        } else {\n          this._enablePollingIfNecessaryAndPossible();\n        }\n\n        this.getStatusAsync();\n      }\n    }, {\n      key: \"setProgressUpdateInterval\",\n      value: function setProgressUpdateInterval(progressUpdateIntervalMillis) {\n        this._progressUpdateIntervalMillis = progressUpdateIntervalMillis;\n        this.getStatusAsync();\n      }\n    }, {\n      key: \"prepareToRecordAsync\",\n      value: function prepareToRecordAsync() {\n        var options,\n            extensionRegex,\n            _ref,\n            uri,\n            status,\n            currentStatus,\n            _args5 = arguments;\n\n        return _regenerator.default.async(function prepareToRecordAsync$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                options = _args5.length > 0 && _args5[0] !== undefined ? _args5[0] : RECORDING_OPTIONS_PRESET_LOW_QUALITY;\n                (0, _AudioAvailability.throwIfAudioIsDisabled)();\n\n                if (!_recorderExists) {\n                  _context5.next = 4;\n                  break;\n                }\n\n                throw new Error('Only one Recording object can be prepared at a given time.');\n\n              case 4:\n                if (!this._isDoneRecording) {\n                  _context5.next = 6;\n                  break;\n                }\n\n                throw new Error('This Recording object is done recording; you must make a new one.');\n\n              case 6:\n                if (!(!options || !options.android || !options.ios)) {\n                  _context5.next = 8;\n                  break;\n                }\n\n                throw new Error('You must provide recording options for android and ios in order to prepare to record.');\n\n              case 8:\n                extensionRegex = /^\\.\\w+$/;\n\n                if (!(!options.android.extension || !options.ios.extension || !extensionRegex.test(options.android.extension) || !extensionRegex.test(options.ios.extension))) {\n                  _context5.next = 11;\n                  break;\n                }\n\n                throw new Error(\"Your file extensions must match \" + extensionRegex.toString() + \".\");\n\n              case 11:\n                if (this._canRecord) {\n                  _context5.next = 28;\n                  break;\n                }\n\n                if (_reactNative.NativeModules.ExponentAV.setUnloadedCallbackForAndroidRecording) {\n                  _reactNative.NativeModules.ExponentAV.setUnloadedCallbackForAndroidRecording(this._cleanupForUnloadedRecorder);\n                }\n\n                _context5.next = 15;\n                return _regenerator.default.awrap(_reactNative.NativeModules.ExponentAV.prepareAudioRecorder(options));\n\n              case 15:\n                _ref = _context5.sent;\n                uri = _ref.uri;\n                status = _ref.status;\n                _recorderExists = true;\n                this._uri = uri;\n                this._options = options;\n                this._canRecord = true;\n                currentStatus = (0, _objectSpread2.default)({}, status, {\n                  canRecord: true\n                });\n\n                this._callOnRecordingStatusUpdateForNewStatus(currentStatus);\n\n                this._enablePollingIfNecessaryAndPossible();\n\n                return _context5.abrupt(\"return\", currentStatus);\n\n              case 28:\n                throw new Error('This Recording object is already prepared to record.');\n\n              case 29:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, null, this);\n      }\n    }, {\n      key: \"startAsync\",\n      value: function startAsync() {\n        return _regenerator.default.async(function startAsync$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                return _context6.abrupt(\"return\", this._performOperationAndHandleStatusAsync(function () {\n                  return _reactNative.NativeModules.ExponentAV.startAudioRecording();\n                }));\n\n              case 1:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, null, this);\n      }\n    }, {\n      key: \"pauseAsync\",\n      value: function pauseAsync() {\n        return _regenerator.default.async(function pauseAsync$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                return _context7.abrupt(\"return\", this._performOperationAndHandleStatusAsync(function () {\n                  return _reactNative.NativeModules.ExponentAV.pauseAudioRecording();\n                }));\n\n              case 1:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, null, this);\n      }\n    }, {\n      key: \"stopAndUnloadAsync\",\n      value: function stopAndUnloadAsync() {\n        var finalStatus;\n        return _regenerator.default.async(function stopAndUnloadAsync$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                if (this._canRecord) {\n                  _context8.next = 6;\n                  break;\n                }\n\n                if (!this._isDoneRecording) {\n                  _context8.next = 5;\n                  break;\n                }\n\n                throw new Error('Cannot unload a Recording that has already been unloaded.');\n\n              case 5:\n                throw new Error('Cannot unload a Recording that has not been prepared.');\n\n              case 6:\n                _context8.next = 8;\n                return _regenerator.default.awrap(_reactNative.NativeModules.ExponentAV.stopAudioRecording());\n\n              case 8:\n                finalStatus = _context8.sent;\n                _context8.next = 11;\n                return _regenerator.default.awrap(_reactNative.NativeModules.ExponentAV.unloadAudioRecorder());\n\n              case 11:\n                return _context8.abrupt(\"return\", this._cleanupForUnloadedRecorder(finalStatus));\n\n              case 12:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, null, this);\n      }\n    }, {\n      key: \"getURI\",\n      value: function getURI() {\n        return this._uri;\n      }\n    }, {\n      key: \"createNewLoadedSound\",\n      value: function createNewLoadedSound() {\n        var initialStatus,\n            onPlaybackStatusUpdate,\n            _args9 = arguments;\n        return _regenerator.default.async(function createNewLoadedSound$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                initialStatus = _args9.length > 0 && _args9[0] !== undefined ? _args9[0] : {};\n                onPlaybackStatusUpdate = _args9.length > 1 && _args9[1] !== undefined ? _args9[1] : null;\n                console.warn(\"createNewLoadedSound is deprecated in favor of createNewLoadedSoundAsync, which has the same API aside from the method name\");\n                return _context9.abrupt(\"return\", this.createNewLoadedSoundAsync(initialStatus, onPlaybackStatusUpdate));\n\n              case 4:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, null, this);\n      }\n    }, {\n      key: \"createNewLoadedSoundAsync\",\n      value: function createNewLoadedSoundAsync() {\n        var initialStatus,\n            onPlaybackStatusUpdate,\n            _args10 = arguments;\n        return _regenerator.default.async(function createNewLoadedSoundAsync$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                initialStatus = _args10.length > 0 && _args10[0] !== undefined ? _args10[0] : {};\n                onPlaybackStatusUpdate = _args10.length > 1 && _args10[1] !== undefined ? _args10[1] : null;\n\n                if (!(this._uri == null || !this._isDoneRecording)) {\n                  _context10.next = 4;\n                  break;\n                }\n\n                throw new Error('Cannot create sound when the Recording has not finished!');\n\n              case 4:\n                return _context10.abrupt(\"return\", _Sound.Sound.createAsync({\n                  uri: this._uri\n                }, initialStatus, onPlaybackStatusUpdate, false));\n\n              case 5:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, null, this);\n      }\n    }]);\n    return Recording;\n  }();\n\n  exports.Recording = Recording;\n});","map":[[17,0,1,0],[19,0,2,0],[21,0,3,0],[23,0,4,0],[25,0,6,7],[25,6,6,13,"RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_DEFAULT"],[25,52,6,59],[25,55,6,62],[25,56,6,7],[27,0,7,7],[27,6,7,13,"RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_THREE_GPP"],[27,54,7,61],[27,57,7,64],[27,58,7,7],[29,0,8,7],[29,6,8,13,"RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_MPEG_4"],[29,51,8,58],[29,54,8,61],[29,55,8,7],[31,0,9,7],[31,6,9,13,"RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_AMR_NB"],[31,51,9,58],[31,54,9,61],[31,55,9,7],[33,0,10,7],[33,6,10,13,"RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_AMR_WB"],[33,51,10,58],[33,54,10,61],[33,55,10,7],[35,0,11,7],[35,6,11,13,"RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_AAC_ADIF"],[35,53,11,60],[35,56,11,63],[35,57,11,7],[37,0,12,7],[37,6,12,13,"RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_AAC_ADTS"],[37,53,12,60],[37,56,12,63],[37,57,12,7],[39,0,13,7],[39,6,13,13,"RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_RTP_AVP"],[39,52,13,59],[39,55,13,62],[39,56,13,7],[41,0,14,7],[41,6,14,13,"RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_MPEG2TS"],[41,52,14,59],[41,55,14,62],[41,56,14,7],[43,0,15,7],[43,6,15,13,"RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_WEBM"],[43,49,15,56],[43,52,15,59],[43,53,15,7],[45,0,16,7],[45,6,16,13,"RECORDING_OPTION_ANDROID_AUDIO_ENCODER_DEFAULT"],[45,52,16,59],[45,55,16,62],[45,56,16,7],[47,0,17,7],[47,6,17,13,"RECORDING_OPTION_ANDROID_AUDIO_ENCODER_AMR_NB"],[47,51,17,58],[47,54,17,61],[47,55,17,7],[49,0,18,7],[49,6,18,13,"RECORDING_OPTION_ANDROID_AUDIO_ENCODER_AMR_WB"],[49,51,18,58],[49,54,18,61],[49,55,18,7],[51,0,19,7],[51,6,19,13,"RECORDING_OPTION_ANDROID_AUDIO_ENCODER_AAC"],[51,48,19,55],[51,51,19,58],[51,52,19,7],[53,0,20,7],[53,6,20,13,"RECORDING_OPTION_ANDROID_AUDIO_ENCODER_HE_AAC"],[53,51,20,58],[53,54,20,61],[53,55,20,7],[55,0,21,7],[55,6,21,13,"RECORDING_OPTION_ANDROID_AUDIO_ENCODER_AAC_ELD"],[55,52,21,59],[55,55,21,62],[55,56,21,7],[57,0,22,7],[57,6,22,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_LINEARPCM"],[57,50,22,57],[57,53,22,60],[57,59,22,7],[59,0,23,7],[59,6,23,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_AC3"],[59,44,23,51],[59,47,23,54],[59,53,23,7],[61,0,24,7],[61,6,24,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_60958AC3"],[61,49,24,56],[61,52,24,59],[61,58,24,7],[63,0,25,7],[63,6,25,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_APPLEIMA4"],[63,50,25,57],[63,53,25,60],[63,59,25,7],[65,0,26,7],[65,6,26,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC"],[65,49,26,56],[65,52,26,59],[65,58,26,7],[67,0,27,7],[67,6,27,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4CELP"],[67,50,27,57],[67,53,27,60],[67,59,27,7],[69,0,28,7],[69,6,28,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4HVXC"],[69,50,28,57],[69,53,28,60],[69,59,28,7],[71,0,29,7],[71,6,29,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4TWINVQ"],[71,52,29,59],[71,55,29,62],[71,61,29,7],[73,0,30,7],[73,6,30,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_MACE3"],[73,46,30,53],[73,49,30,56],[73,55,30,7],[75,0,31,7],[75,6,31,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_MACE6"],[75,46,31,53],[75,49,31,56],[75,55,31,7],[77,0,32,7],[77,6,32,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_ULAW"],[77,45,32,52],[77,48,32,55],[77,54,32,7],[79,0,33,7],[79,6,33,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_ALAW"],[79,45,33,52],[79,48,33,55],[79,54,33,7],[81,0,34,7],[81,6,34,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_QDESIGN"],[81,48,34,55],[81,51,34,58],[81,57,34,7],[83,0,35,7],[83,6,35,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_QDESIGN2"],[83,49,35,56],[83,52,35,59],[83,58,35,7],[85,0,36,7],[85,6,36,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_QUALCOMM"],[85,49,36,56],[85,52,36,59],[85,58,36,7],[87,0,37,7],[87,6,37,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEGLAYER1"],[87,51,37,58],[87,54,37,61],[87,60,37,7],[89,0,38,7],[89,6,38,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEGLAYER2"],[89,51,38,58],[89,54,38,61],[89,60,38,7],[91,0,39,7],[91,6,39,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEGLAYER3"],[91,51,39,58],[91,54,39,61],[91,60,39,7],[93,0,40,7],[93,6,40,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_APPLELOSSLESS"],[93,54,40,61],[93,57,40,64],[93,63,40,7],[95,0,41,7],[95,6,41,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_HE"],[95,52,41,59],[95,55,41,62],[95,61,41,7],[97,0,42,7],[97,6,42,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_LD"],[97,52,42,59],[97,55,42,62],[97,61,42,7],[99,0,43,7],[99,6,43,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_ELD"],[99,53,43,60],[99,56,43,63],[99,62,43,7],[101,0,44,7],[101,6,44,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_ELD_SBR"],[101,57,44,64],[101,60,44,67],[101,66,44,7],[103,0,45,7],[103,6,45,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_ELD_V2"],[103,56,45,63],[103,59,45,66],[103,65,45,7],[105,0,46,7],[105,6,46,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_HE_V2"],[105,55,46,62],[105,58,46,65],[105,64,46,7],[107,0,47,7],[107,6,47,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_SPATIAL"],[107,57,47,64],[107,60,47,67],[107,66,47,7],[109,0,48,7],[109,6,48,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_AMR"],[109,44,48,51],[109,47,48,54],[109,53,48,7],[111,0,49,7],[111,6,49,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_AMR_WB"],[111,47,49,54],[111,50,49,57],[111,56,49,7],[113,0,50,7],[113,6,50,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_AUDIBLE"],[113,48,50,55],[113,51,50,58],[113,57,50,7],[115,0,51,7],[115,6,51,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_ILBC"],[115,45,51,52],[115,48,51,55],[115,54,51,7],[117,0,52,7],[117,6,52,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_DVIINTELIMA"],[117,52,52,59],[117,55,52,62],[117,65,52,7],[119,0,53,7],[119,6,53,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_MICROSOFTGSM"],[119,53,53,60],[119,56,53,63],[119,66,53,7],[121,0,54,7],[121,6,54,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_AES3"],[121,45,54,52],[121,48,54,55],[121,54,54,7],[123,0,55,7],[123,6,55,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_ENHANCEDAC3"],[123,52,55,59],[123,55,55,62],[123,61,55,7],[125,0,56,7],[125,6,56,13,"RECORDING_OPTION_IOS_AUDIO_QUALITY_MIN"],[125,44,56,51],[125,47,56,54],[125,48,56,7],[127,0,57,7],[127,6,57,13,"RECORDING_OPTION_IOS_AUDIO_QUALITY_LOW"],[127,44,57,51],[127,47,57,54],[127,51,57,7],[129,0,58,7],[129,6,58,13,"RECORDING_OPTION_IOS_AUDIO_QUALITY_MEDIUM"],[129,47,58,54],[129,50,58,57],[129,54,58,7],[131,0,59,7],[131,6,59,13,"RECORDING_OPTION_IOS_AUDIO_QUALITY_HIGH"],[131,45,59,52],[131,48,59,55],[131,52,59,7],[133,0,60,7],[133,6,60,13,"RECORDING_OPTION_IOS_AUDIO_QUALITY_MAX"],[133,44,60,51],[133,47,60,54],[133,51,60,7],[135,0,61,7],[135,6,61,13,"RECORDING_OPTION_IOS_BIT_RATE_STRATEGY_CONSTANT"],[135,53,61,60],[135,56,61,63],[135,57,61,7],[137,0,62,7],[137,6,62,13,"RECORDING_OPTION_IOS_BIT_RATE_STRATEGY_LONG_TERM_AVERAGE"],[137,62,62,69],[137,65,62,72],[137,66,62,7],[139,0,63,7],[139,6,63,13,"RECORDING_OPTION_IOS_BIT_RATE_STRATEGY_VARIABLE_CONSTRAINED"],[139,65,63,72],[139,68,63,75],[139,69,63,7],[141,0,64,7],[141,6,64,13,"RECORDING_OPTION_IOS_BIT_RATE_STRATEGY_VARIABLE"],[141,53,64,60],[141,56,64,63],[141,57,64,7],[143,0,66,7],[143,6,66,13,"RECORDING_OPTIONS_PRESET_HIGH_QUALITY"],[143,43,66,50],[143,46,66,53],[144,0,67,4,"android"],[144,4,67,4,"android"],[144,11,67,11],[144,13,67,13],[145,0,68,8,"extension"],[145,6,68,8,"extension"],[145,15,68,17],[145,17,68,19],[145,23,67,13],[146,0,69,8,"outputFormat"],[146,6,69,8,"outputFormat"],[146,18,69,20],[146,20,69,22,"RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_MPEG_4"],[146,65,67,13],[147,0,70,8,"audioEncoder"],[147,6,70,8,"audioEncoder"],[147,18,70,20],[147,20,70,22,"RECORDING_OPTION_ANDROID_AUDIO_ENCODER_AAC"],[147,62,67,13],[148,0,71,8,"sampleRate"],[148,6,71,8,"sampleRate"],[148,16,71,18],[148,18,71,20],[148,23,67,13],[149,0,72,8,"numberOfChannels"],[149,6,72,8,"numberOfChannels"],[149,22,72,24],[149,24,72,26],[149,25,67,13],[150,0,73,8,"bitRate"],[150,6,73,8,"bitRate"],[150,13,73,15],[150,15,73,17],[151,0,67,13],[151,5,66,53],[152,0,75,4,"ios"],[152,4,75,4,"ios"],[152,7,75,7],[152,9,75,9],[153,0,76,8,"extension"],[153,6,76,8,"extension"],[153,15,76,17],[153,17,76,19],[153,23,75,9],[154,0,77,8,"audioQuality"],[154,6,77,8,"audioQuality"],[154,18,77,20],[154,20,77,22,"RECORDING_OPTION_IOS_AUDIO_QUALITY_MAX"],[154,58,75,9],[155,0,78,8,"sampleRate"],[155,6,78,8,"sampleRate"],[155,16,78,18],[155,18,78,20],[155,23,75,9],[156,0,79,8,"numberOfChannels"],[156,6,79,8,"numberOfChannels"],[156,22,79,24],[156,24,79,26],[156,25,75,9],[157,0,80,8,"bitRate"],[157,6,80,8,"bitRate"],[157,13,80,15],[157,15,80,17],[157,21,75,9],[158,0,81,8,"linearPCMBitDepth"],[158,6,81,8,"linearPCMBitDepth"],[158,23,81,25],[158,25,81,27],[158,27,75,9],[159,0,82,8,"linearPCMIsBigEndian"],[159,6,82,8,"linearPCMIsBigEndian"],[159,26,82,28],[159,28,82,30],[159,33,75,9],[160,0,83,8,"linearPCMIsFloat"],[160,6,83,8,"linearPCMIsFloat"],[160,22,83,24],[160,24,83,26],[161,0,75,9],[162,0,66,53],[162,3,66,7],[164,0,86,7],[164,6,86,13,"RECORDING_OPTIONS_PRESET_LOW_QUALITY"],[164,42,86,49],[164,45,86,52],[165,0,87,4,"android"],[165,4,87,4,"android"],[165,11,87,11],[165,13,87,13],[166,0,88,8,"extension"],[166,6,88,8,"extension"],[166,15,88,17],[166,17,88,19],[166,23,87,13],[167,0,89,8,"outputFormat"],[167,6,89,8,"outputFormat"],[167,18,89,20],[167,20,89,22,"RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_THREE_GPP"],[167,68,87,13],[168,0,90,8,"audioEncoder"],[168,6,90,8,"audioEncoder"],[168,18,90,20],[168,20,90,22,"RECORDING_OPTION_ANDROID_AUDIO_ENCODER_AMR_NB"],[168,65,87,13],[169,0,91,8,"sampleRate"],[169,6,91,8,"sampleRate"],[169,16,91,18],[169,18,91,20],[169,23,87,13],[170,0,92,8,"numberOfChannels"],[170,6,92,8,"numberOfChannels"],[170,22,92,24],[170,24,92,26],[170,25,87,13],[171,0,93,8,"bitRate"],[171,6,93,8,"bitRate"],[171,13,93,15],[171,15,93,17],[172,0,87,13],[172,5,86,52],[173,0,95,4,"ios"],[173,4,95,4,"ios"],[173,7,95,7],[173,9,95,9],[174,0,96,8,"extension"],[174,6,96,8,"extension"],[174,15,96,17],[174,17,96,19],[174,23,95,9],[175,0,97,8,"audioQuality"],[175,6,97,8,"audioQuality"],[175,18,97,20],[175,20,97,22,"RECORDING_OPTION_IOS_AUDIO_QUALITY_MIN"],[175,58,95,9],[176,0,98,8,"sampleRate"],[176,6,98,8,"sampleRate"],[176,16,98,18],[176,18,98,20],[176,23,95,9],[177,0,99,8,"numberOfChannels"],[177,6,99,8,"numberOfChannels"],[177,22,99,24],[177,24,99,26],[177,25,95,9],[178,0,100,8,"bitRate"],[178,6,100,8,"bitRate"],[178,13,100,15],[178,15,100,17],[178,21,95,9],[179,0,101,8,"linearPCMBitDepth"],[179,6,101,8,"linearPCMBitDepth"],[179,23,101,25],[179,25,101,27],[179,27,95,9],[180,0,102,8,"linearPCMIsBigEndian"],[180,6,102,8,"linearPCMIsBigEndian"],[180,26,102,28],[180,28,102,30],[180,33,95,9],[181,0,103,8,"linearPCMIsFloat"],[181,6,103,8,"linearPCMIsFloat"],[181,22,103,24],[181,24,103,26],[182,0,95,9],[183,0,86,52],[183,3,86,7],[185,0,106,0],[185,6,106,4,"_recorderExists"],[185,21,106,19],[185,24,106,22],[185,29,106,0],[187,6,107,13,"Recording"],[187,15],[188,0,108,4],[188,25,108,18],[189,0,108,18],[191,0,108,18],[192,0,109,8],[192,11,109,13,"_canRecord"],[192,21,109,8],[192,24,109,26],[192,29,109,8],[193,0,110,8],[193,11,110,13,"_isDoneRecording"],[193,27,110,8],[193,30,110,32],[193,35,110,8],[194,0,111,8],[194,11,111,13,"_finalDurationMillis"],[194,31,111,8],[194,34,111,36],[194,35,111,8],[195,0,112,8],[195,11,112,13,"_uri"],[195,15,112,8],[195,18,112,20],[195,22,112,8],[196,0,113,8],[196,11,113,13,"_onRecordingStatusUpdate"],[196,35,113,8],[196,38,113,40],[196,42,113,8],[197,0,114,8],[197,11,114,13,"_progressUpdateTimeoutVariable"],[197,41,114,8],[197,44,114,46],[197,48,114,8],[198,0,115,8],[198,11,115,13,"_progressUpdateIntervalMillis"],[198,40,115,8],[198,43,115,45,"_DEFAULT_PROGRESS_UPDATE_INTERVAL_MILLIS"],[198,87,115,8],[199,0,116,8],[199,11,116,13,"_options"],[199,19,116,8],[199,22,116,24],[199,26,116,8],[201,0,118,8],[201,11,118,13,"_cleanupForUnloadedRecorder"],[201,38,118,8],[201,41,118,43],[201,58,118,50,"finalStatus"],[201,69,118,43],[202,0,118,43],[203,0,118,43],[204,0,118,43],[205,0,118,43],[206,0,119,12],[206,16,119,12],[206,21,119,16],[206,22,119,17,"_canRecord"],[206,32,119,12],[206,35,119,30],[206,40,119,12],[207,0,120,12],[207,16,120,12],[207,21,120,16],[207,22,120,17,"_isDoneRecording"],[207,38,120,12],[207,41,120,36],[207,45,120,12],[208,0,122,12],[208,16,122,12],[208,21,122,16],[208,22,122,17,"_finalDurationMillis"],[208,42,122,12],[208,45,122,40,"finalStatus"],[208,56,122,51],[208,57,122,52,"durationMillis"],[208,71,122,12],[209,0,123,12,"_recorderExists"],[209,16,123,12,"_recorderExists"],[209,31,123,27],[209,34,123,30],[209,39,123,12],[211,0,124,12],[211,20,124,16,"NativeModules"],[211,47,124,30,"ExponentAV"],[211,57,124,16],[211,58,124,41,"setUnloadedCallbackForAndroidRecording"],[211,96,124,12],[211,98,124,81],[212,0,125,16,"NativeModules"],[212,45,125,30,"ExponentAV"],[212,55,125,16],[212,56,125,41,"setUnloadedCallbackForAndroidRecording"],[212,94,125,16],[212,95,125,80],[212,99,125,16],[213,0,126,13],[215,0,127,12],[215,16,127,12],[215,21,127,16],[215,22,127,17,"_disablePolling"],[215,37,127,12],[217,0,118,43],[218,0,118,43],[218,50,128,25],[218,55,128,29],[218,56,128,30,"getStatusAsync"],[218,70,128,25],[218,72,118,43],[220,0,118,43],[221,0,118,43],[223,0,118,43],[224,0,118,43],[225,0,118,43],[226,0,118,43],[227,0,118,43],[228,0,118,43],[229,0,118,43],[229,7,118,8],[231,0,130,8],[231,11,130,13,"_pollingLoop"],[231,23,130,8],[231,26,130,28],[232,0,130,28],[233,0,130,28],[234,0,130,28],[235,0,130,28],[236,0,130,28],[236,22,131,16],[236,66,131,36],[236,71,131,40],[236,72,131,41,"_canRecord"],[236,82,131,16],[236,86,131,55],[236,91,131,59],[236,92,131,60,"_onRecordingStatusUpdate"],[236,116,131,55],[236,120,131,88],[236,124,130,28],[237,0,130,28],[238,0,130,28],[239,0,130,28],[241,0,132,16],[241,16,132,16],[241,21,132,20],[241,22,132,21,"_progressUpdateTimeoutVariable"],[241,52,132,16],[241,55,132,54,"setTimeout"],[241,65,132,64],[241,66,132,65],[241,71,132,69],[241,72,132,70,"_pollingLoop"],[241,84,132,64],[241,86,132,84],[241,91,132,88],[241,92,132,89,"_progressUpdateIntervalMillis"],[241,121,132,64],[241,122,132,16],[242,0,130,28],[243,0,130,28],[244,0,130,28],[244,50,134,26],[244,55,134,30],[244,56,134,31,"getStatusAsync"],[244,70,134,26],[244,72,130,28],[246,0,130,28],[247,0,130,28],[248,0,130,28],[250,0,130,28],[251,0,130,28],[252,0,130,28],[254,0,137,20],[254,16,137,20],[254,21,137,24],[254,22,137,25,"_disablePolling"],[254,37,137,20],[256,0,130,28],[257,0,130,28],[258,0,130,28],[259,0,130,28],[260,0,130,28],[261,0,130,28],[262,0,130,28],[262,7,130,8],[264,0,143,8],[264,11,143,13,"getStatusAsync"],[264,25,143,8],[264,28,143,30],[265,0,143,30],[266,0,143,30],[267,0,143,30],[268,0,143,30],[269,0,143,30],[270,0,143,30],[270,21,145,16],[270,26,145,20],[270,27,145,21,"_canRecord"],[270,37,143,30],[271,0,143,30],[272,0,143,30],[273,0,143,30],[275,0,143,30],[275,50,146,23],[275,55,146,27],[275,56,146,28,"_performOperationAndHandleStatusAsync"],[275,93,146,23],[275,94,146,66],[276,0,146,66],[276,25,146,72,"NativeModules"],[276,52,146,86,"ExponentAV"],[276,62,146,72],[276,63,146,97,"getAudioRecordingStatus"],[276,86,146,72],[276,88,146,66],[277,0,146,66],[277,17,146,23],[277,18,143,30],[279,0,143,30],[280,0,148,18,"status"],[280,16,148,18,"status"],[280,22,143,30],[280,25,148,27],[281,0,149,16,"canRecord"],[281,18,149,16,"canRecord"],[281,27,149,25],[281,29,149,27],[281,34,148,27],[282,0,150,16,"isRecording"],[282,18,150,16,"isRecording"],[282,29,150,27],[282,31,150,29],[282,36,148,27],[283,0,151,16,"isDoneRecording"],[283,18,151,16,"isDoneRecording"],[283,33,151,31],[283,35,151,33],[283,40,151,37],[283,41,151,38,"_isDoneRecording"],[283,57,148,27],[284,0,152,16,"durationMillis"],[284,18,152,16,"durationMillis"],[284,32,152,30],[284,34,152,32],[284,39,152,36],[284,40,152,37,"_finalDurationMillis"],[285,0,148,27],[285,17,143,30],[287,0,154,12],[287,16,154,12],[287,21,154,16],[287,22,154,17,"_callOnRecordingStatusUpdateForNewStatus"],[287,62,154,12],[287,63,154,58,"status"],[287,69,154,12],[289,0,143,30],[289,50,155,19,"status"],[289,56,143,30],[291,0,143,30],[292,0,143,30],[293,0,143,30],[294,0,143,30],[295,0,143,30],[296,0,143,30],[297,0,143,30],[297,7,143,8],[298,0,157,5],[302,40,158,22],[303,0,159,8],[303,12,159,12],[303,17,159,17,"_progressUpdateTimeoutVariable"],[303,47,159,12],[303,51,159,51],[303,55,159,8],[303,57,159,57],[304,0,160,12,"clearTimeout"],[304,10,160,12,"clearTimeout"],[304,22,160,24],[304,23,160,25],[304,28,160,30,"_progressUpdateTimeoutVariable"],[304,58,160,24],[304,59,160,12],[305,0,161,12],[305,15,161,17,"_progressUpdateTimeoutVariable"],[305,45,161,12],[305,48,161,50],[305,52,161,12],[306,0,162,9],[307,0,163,5],[310,61,164,43],[311,0,165,8],[311,12,165,12],[311,56,165,32],[311,61,165,37,"_canRecord"],[311,71,165,12],[311,75,165,51],[311,80,165,56,"_onRecordingStatusUpdate"],[311,104,165,51],[311,108,165,84],[311,112,165,8],[311,114,165,90],[312,0,166,12],[312,15,166,17,"_disablePolling"],[312,30,166,12],[314,0,167,12],[314,15,167,17,"_pollingLoop"],[314,27,167,12],[315,0,168,9],[316,0,169,5],[319,63,170,45,"status"],[319,69],[319,71,170,53],[320,0,171,8],[320,12,171,12],[320,17,171,17,"_onRecordingStatusUpdate"],[320,41,171,12],[320,45,171,45],[320,49,171,8],[320,51,171,51],[321,0,172,12],[321,15,172,17,"_onRecordingStatusUpdate"],[321,39,172,12],[321,40,172,42,"status"],[321,46,172,12],[322,0,173,9],[323,0,174,5],[326,60,175,48,"operation"],[326,69],[332,0,176,8],[334,21,177,12],[334,26,177,17,"_canRecord"],[334,36],[340,50,178,33,"operation"],[340,59,178,42],[340,61],[343,0,178,18,"status"],[343,16,178,18,"status"],[343,22],[345,0,179,12],[345,21,179,17,"_callOnRecordingStatusUpdateForNewStatus"],[345,61,179,12],[345,62,179,58,"status"],[345,68,179,12],[347,50,180,19,"status"],[347,56],[350,22,183,18],[350,26,183,22,"Error"],[350,31,183,18],[350,32,183,28],[350,105,183,18],[350,106],[361,49,186,31,"onRecordingStatusUpdate"],[361,72],[361,74,186,56],[362,0,187,8],[362,13,187,13,"_onRecordingStatusUpdate"],[362,37,187,8],[362,40,187,40,"onRecordingStatusUpdate"],[362,63,187,8],[364,0,188,8],[364,12,188,12,"onRecordingStatusUpdate"],[364,35,188,35],[364,39,188,39],[364,43,188,8],[364,45,188,45],[365,0,189,12],[365,15,189,17,"_disablePolling"],[365,30,189,12],[366,0,190,9],[366,9,188,8],[366,15,191,13],[367,0,192,12],[367,15,192,17,"_enablePollingIfNecessaryAndPossible"],[367,51,192,12],[368,0,193,9],[370,0,194,8],[370,13,194,13,"getStatusAsync"],[370,27,194,8],[371,0,195,5],[374,48,196,30,"progressUpdateIntervalMillis"],[374,76],[374,78,196,60],[375,0,197,8],[375,13,197,13,"_progressUpdateIntervalMillis"],[375,42,197,8],[375,45,197,45,"progressUpdateIntervalMillis"],[375,73,197,8],[376,0,198,8],[376,13,198,13,"getStatusAsync"],[376,27,198,8],[377,0,199,5],[393,0,201,31,"options"],[393,16,201,31,"options"],[393,23],[393,85,201,41,"RECORDING_OPTIONS_PRESET_LOW_QUALITY"],[393,121],[394,0,202,8],[396,21,203,12,"_recorderExists"],[396,36],[401,22,204,18],[401,26,204,22,"Error"],[401,31,204,18],[401,32,204,28],[401,92,204,18],[401,93],[404,21,206,12],[404,26,206,17,"_isDoneRecording"],[404,42],[409,22,207,18],[409,26,207,22,"Error"],[409,31,207,18],[409,32,207,28],[409,99,207,18],[409,100],[412,22,209,12],[412,23,209,13,"options"],[412,30,209,12],[412,34,209,24],[412,35,209,25,"options"],[412,42,209,32],[412,43,209,33,"android"],[412,50,209,12],[412,54,209,44],[412,55,209,45,"options"],[412,62,209,52],[412,63,209,53,"ios"],[412,66],[417,22,210,18],[417,26,210,22,"Error"],[417,31,210,18],[417,32,210,28],[417,119,210,18],[417,120],[420,0,212,14,"extensionRegex"],[420,16,212,14,"extensionRegex"],[420,30],[420,33,212,31],[420,42],[422,22,213,12],[422,23,213,13,"options"],[422,30,213,20],[422,31,213,21,"android"],[422,38,213,13],[422,39,213,29,"extension"],[422,48,213,12],[422,52,214,12],[422,53,214,13,"options"],[422,60,214,20],[422,61,214,21,"ios"],[422,64,214,13],[422,65,214,25,"extension"],[422,74,213,12],[422,78,215,12],[422,79,215,13,"extensionRegex"],[422,93,215,27],[422,94,215,28,"test"],[422,98,215,13],[422,99,215,33,"options"],[422,106,215,40],[422,107,215,41,"android"],[422,114,215,33],[422,115,215,49,"extension"],[422,124,215,13],[422,125,213,12],[422,129,216,12],[422,130,216,13,"extensionRegex"],[422,144,216,27],[422,145,216,28,"test"],[422,149,216,13],[422,150,216,33,"options"],[422,157,216,40],[422,158,216,41,"ios"],[422,161,216,33],[422,162,216,45,"extension"],[422,171,216,13],[422,172],[427,22,217,18],[427,26,217,22,"Error"],[427,31,217,18],[427,69,217,63,"extensionRegex"],[427,83,217,77],[427,84,217,78,"toString"],[427,92,217,63],[427,94,217,18],[427,101],[430,20,219,13],[430,25,219,18,"_canRecord"],[430,35],[435,0,220,12],[435,20,220,16,"NativeModules"],[435,47,220,30,"ExponentAV"],[435,57,220,16],[435,58,220,41,"setUnloadedCallbackForAndroidRecording"],[435,96,220,12],[435,98,220,81],[436,0,221,16,"NativeModules"],[436,45,221,30,"ExponentAV"],[436,55,221,16],[436,56,221,41,"setUnloadedCallbackForAndroidRecording"],[436,94,221,16],[436,95,221,80],[436,100,221,85,"_cleanupForUnloadedRecorder"],[436,127,221,16],[437,0,222,13],[440,50,223,43,"NativeModules"],[440,77,223,57,"ExponentAV"],[440,87,223,43],[440,88,223,68,"prepareAudioRecorder"],[440,108,223,43],[440,109,223,89,"options"],[440,116,223,43],[440,117],[444,0,223,20,"uri"],[444,16,223,20,"uri"],[444,19],[444,27,223,20,"uri"],[444,30],[445,0,223,25,"status"],[445,16,223,25,"status"],[445,22],[445,30,223,25,"status"],[445,36],[446,0,224,12,"_recorderExists"],[446,16,224,12,"_recorderExists"],[446,31,224,27],[446,34,224,30],[446,38,224,12],[447,0,225,12],[447,21,225,17,"_uri"],[447,25,225,12],[447,28,225,24,"uri"],[447,31,225,12],[448,0,226,12],[448,21,226,17,"_options"],[448,29,226,12],[448,32,226,28,"options"],[448,39,226,12],[449,0,227,12],[449,21,227,17,"_canRecord"],[449,31,227,12],[449,34,227,30],[449,38,227,12],[450,0,228,18,"currentStatus"],[450,16,228,18,"currentStatus"],[450,29],[450,64,228,39,"status"],[450,70],[451,0,228,47,"canRecord"],[451,18,228,47,"canRecord"],[451,27,228,56],[451,29,228,58],[454,0,229,12],[454,21,229,17,"_callOnRecordingStatusUpdateForNewStatus"],[454,61,229,12],[454,62,229,58,"currentStatus"],[454,75,229,12],[456,0,230,12],[456,21,230,17,"_enablePollingIfNecessaryAndPossible"],[456,57,230,12],[458,50,231,19,"currentStatus"],[458,63],[461,22,234,18],[461,26,234,22,"Error"],[461,31,234,18],[461,32,234,28],[461,86,234,18],[461,87],[477,50,238,15],[477,55,238,20,"_performOperationAndHandleStatusAsync"],[477,92,238,15],[477,93,238,58],[478,0,238,58],[478,25,238,64,"NativeModules"],[478,52,238,78,"ExponentAV"],[478,62,238,64],[478,63,238,89,"startAudioRecording"],[478,82,238,64],[478,84,238,58],[479,0,238,58],[479,17,238,15],[479,18],[495,50,241,15],[495,55,241,20,"_performOperationAndHandleStatusAsync"],[495,92,241,15],[495,93,241,58],[496,0,241,58],[496,25,241,64,"NativeModules"],[496,52,241,78,"ExponentAV"],[496,62,241,64],[496,63,241,89,"pauseAudioRecording"],[496,82,241,64],[496,84,241,58],[497,0,241,58],[497,17,241,15],[497,18],[514,20,244,13],[514,25,244,18,"_canRecord"],[514,35],[519,21,245,16],[519,26,245,21,"_isDoneRecording"],[519,42],[524,22,246,22],[524,26,246,26,"Error"],[524,31,246,22],[524,32,246,32],[524,91,246,22],[524,92],[527,22,249,22],[527,26,249,26,"Error"],[527,31,249,22],[527,32,249,32],[527,87,249,22],[527,88],[531,50,254,34,"NativeModules"],[531,77,254,48,"ExponentAV"],[531,87,254,34],[531,88,254,59,"stopAudioRecording"],[531,106,254,34],[531,108],[534,0,254,14,"finalStatus"],[534,16,254,14,"finalStatus"],[534,27],[536,50,255,14,"NativeModules"],[536,77,255,28,"ExponentAV"],[536,87,255,14],[536,88,255,39,"unloadAudioRecorder"],[536,107,255,14],[536,109],[539,50,256,15],[539,55,256,20,"_cleanupForUnloadedRecorder"],[539,82,256,15],[539,83,256,48,"finalStatus"],[539,94,256,15],[539,95],[550,31,259,13],[551,0,260,8],[551,15,260,15],[551,20,260,20,"_uri"],[551,24,260,8],[552,0,261,5],[563,0,262,31,"initialStatus"],[563,16,262,31,"initialStatus"],[563,29],[563,91,262,47],[563,93],[564,0,262,51,"onPlaybackStatusUpdate"],[564,16,262,51,"onPlaybackStatusUpdate"],[564,38],[564,100,262,76],[564,104],[565,0,263,8,"console"],[565,16,263,8,"console"],[565,23,263,15],[565,24,263,16,"warn"],[565,28,263,8],[566,50,264,15],[566,55,264,20,"createNewLoadedSoundAsync"],[566,80,264,15],[566,81,264,46,"initialStatus"],[566,94,264,15],[566,96,264,61,"onPlaybackStatusUpdate"],[566,118,264,15],[566,119],[585,0,266,36,"initialStatus"],[585,16,266,36,"initialStatus"],[585,29],[585,94,266,52],[585,96],[586,0,266,56,"onPlaybackStatusUpdate"],[586,16,266,56,"onPlaybackStatusUpdate"],[586,38],[586,103,266,81],[586,107],[588,22,267,12],[588,27,267,17,"_uri"],[588,31,267,12],[588,35,267,25],[588,39,267,12],[588,43,267,33],[588,44,267,34],[588,49,267,39,"_isDoneRecording"],[588,65],[593,22,268,18],[593,26,268,22,"Error"],[593,31,268,18],[593,32,268,28],[593,90,268,18],[593,91],[596,51,270,15,"Sound"],[596,64,270,21,"createAsync"],[596,75,270,15],[596,76,272,8],[597,0,272,10,"uri"],[597,18,272,10,"uri"],[597,21,272,13],[597,23,272,15],[597,28,272,20,"_uri"],[598,0,272,8],[598,17,270,15],[598,19,272,28,"initialStatus"],[598,32,270,15],[598,34,272,43,"onPlaybackStatusUpdate"],[598,56,270,15],[598,58,272,67],[598,63,270,15],[598,64]]},"type":"js/module"}]}