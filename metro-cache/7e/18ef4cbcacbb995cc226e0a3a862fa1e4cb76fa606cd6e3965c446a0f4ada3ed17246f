{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/objectSpread","data":{"isAsync":false}},{"name":"@babel/runtime/regenerator","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/extends","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/inherits","data":{"isAsync":false}},{"name":"react","data":{"isAsync":false}},{"name":"./../../react-transform-hmr/lib/index.js","data":{"isAsync":false}},{"name":"prop-types","data":{"isAsync":false}},{"name":"lodash.mapvalues","data":{"isAsync":false}},{"name":"expo-core","data":{"isAsync":false}},{"name":"react-native","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.Constants = exports.default = void 0;\n\n  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/objectSpread\"));\n\n  var _regenerator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/regenerator\"));\n\n  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/extends\"));\n\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/classCallCheck\"));\n\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/createClass\"));\n\n  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n\n  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"@babel/runtime/helpers/getPrototypeOf\"));\n\n  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8], \"@babel/runtime/helpers/inherits\"));\n\n  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9], \"react\"));\n\n  var _index = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10], \"./../../react-transform-hmr/lib/index.js\"));\n\n  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11], \"prop-types\"));\n\n  var _lodash = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12], \"lodash.mapvalues\"));\n\n  var _expoCore = _$$_REQUIRE(_dependencyMap[13], \"expo-core\");\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[14], \"react-native\");\n\n  var _class,\n      _temp,\n      _jsxFileName = \"/home/raphael/projetos/condominio/nocdo_react_native/node_modules/expo-barcode-scanner/src/BarCodeScanner.js\";\n\n  var _components = {\n    BarCodeScanner: {\n      displayName: \"BarCodeScanner\"\n    }\n  };\n\n  var _reactTransformHmrLibIndexJs2 = (0, _index.default)({\n    filename: \"/home/raphael/projetos/condominio/nocdo_react_native/node_modules/expo-barcode-scanner/src/BarCodeScanner.js\",\n    components: _components,\n    locals: [module],\n    imports: [_react.default]\n  });\n\n  function _wrapComponent(id) {\n    return function (Component) {\n      return _reactTransformHmrLibIndexJs2(Component, id);\n    };\n  }\n\n  var ExpoBarCodeScannerModule = _expoCore.NativeModulesProxy.ExpoBarCodeScannerModule;\n  var EVENT_THROTTLE_MS = 500;\n\n  var BarCodeScanner = _wrapComponent(\"BarCodeScanner\")((_temp = _class = function (_React$Component) {\n    (0, _inherits2.default)(BarCodeScanner, _React$Component);\n\n    function BarCodeScanner(props) {\n      var _this;\n\n      (0, _classCallCheck2.default)(this, BarCodeScanner);\n      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(BarCodeScanner).call(this, props));\n\n      _this.setReference = function (ref) {\n        if (ref) {\n          _this.barCodeScannerRef = ref;\n          _this.barCodeScannerHandle = (0, _reactNative.findNodeHandle)(ref);\n        } else {\n          _this.barCodeScannerRef = null;\n          _this.barCodeScannerHandle = null;\n        }\n      };\n\n      _this.onObjectDetected = function (callback) {\n        return function (_ref) {\n          var nativeEvent = _ref.nativeEvent;\n          var type = nativeEvent.type;\n\n          if (_this.lastEvents[type] && _this.lastEventsTimes[type] && JSON.stringify(nativeEvent) === _this.lastEvents[type] && new Date() - _this.lastEventsTimes[type] < EVENT_THROTTLE_MS) {\n            return;\n          }\n\n          if (callback) {\n            callback(nativeEvent);\n            _this.lastEventsTimes[type] = new Date();\n            _this.lastEvents[type] = JSON.stringify(nativeEvent);\n          }\n        };\n      };\n\n      _this.lastEvents = {};\n      _this.lastEventsTimes = {};\n      return _this;\n    }\n\n    (0, _createClass2.default)(BarCodeScanner, [{\n      key: \"render\",\n      value: function render() {\n        var nativeProps = this.convertNativeProps(this.props);\n        var _this$props = this.props,\n            onBarCodeScanned = _this$props.onBarCodeScanned,\n            onBarCodeRead = _this$props.onBarCodeRead;\n        return _react.default.createElement(ExpoBarCodeScannerView, (0, _extends2.default)({}, nativeProps, {\n          ref: this.setReference,\n          onBarCodeScanned: this.onObjectDetected(onBarCodeScanned || onBarCodeRead),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          }\n        }));\n      }\n    }, {\n      key: \"convertNativeProps\",\n      value: function convertNativeProps(props) {\n        var newProps = (0, _lodash.default)(props, this.convertProp);\n        return newProps;\n      }\n    }, {\n      key: \"convertProp\",\n      value: function convertProp(value, key) {\n        if (typeof value === 'string' && BarCodeScanner.ConversionTables[key]) {\n          return BarCodeScanner.ConversionTables[key][value];\n        }\n\n        return value;\n      }\n    }], [{\n      key: \"scanFromURLAsync\",\n      value: function scanFromURLAsync(url, barCodeTypes) {\n        var effectiveBarCodeTypes;\n        return _regenerator.default.async(function scanFromURLAsync$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!(Array.isArray(barCodeTypes) && barCodeTypes.length === 0)) {\n                  _context.next = 2;\n                  break;\n                }\n\n                throw new Error('No barCodeTypes requested, provide at least one barCodeType for scanner');\n\n              case 2:\n                if (!(_reactNative.Platform.OS === 'ios')) {\n                  _context.next = 6;\n                  break;\n                }\n\n                if (!(Array.isArray(barCodeTypes) && !barCodeTypes.includes(BarCodeScanner.Constants.BarCodeType.qr))) {\n                  _context.next = 5;\n                  break;\n                }\n\n                throw new Error('Only QR type is supported by scanFromURLAsync() on iOS');\n\n              case 5:\n                return _context.abrupt(\"return\", ExpoBarCodeScannerModule.scanFromURLAsync(url, [BarCodeScanner.Constants.BarCodeType.qr]));\n\n              case 6:\n                effectiveBarCodeTypes = barCodeTypes || Object.values(ExpoBarCodeScannerModule.BarCodeType);\n                return _context.abrupt(\"return\", ExpoBarCodeScannerModule.scanFromURLAsync(url, effectiveBarCodeTypes));\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, null, this);\n      }\n    }]);\n    return BarCodeScanner;\n  }(_react.default.Component), _class.Constants = {\n    BarCodeType: ExpoBarCodeScannerModule.BarCodeType,\n    Type: ExpoBarCodeScannerModule.Type\n  }, _class.ConversionTables = {\n    type: ExpoBarCodeScannerModule.Type\n  }, _class.propTypes = (0, _objectSpread2.default)({}, _reactNative.ViewPropTypes, {\n    onBarCodeScanned: _propTypes.default.func,\n    barCodeTypes: _propTypes.default.array,\n    type: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number])\n  }), _class.defaultProps = {\n    type: ExpoBarCodeScannerModule.Type.back,\n    barCodeTypes: Object.values(ExpoBarCodeScannerModule.BarCodeType)\n  }, _temp));\n\n  var _default2 = BarCodeScanner;\n  exports.default = _default2;\n  var Constants = BarCodeScanner.Constants;\n  exports.Constants = Constants;\n  var ExpoBarCodeScannerView = (0, _expoCore.requireNativeViewManager)('ExpoBarCodeScannerView', BarCodeScanner);\n});","map":[[25,0,2,0],[29,0,3,0],[31,0,4,0],[33,0,5,0],[35,0,6,0],[60,6,18,8,"ExpoBarCodeScannerModule"],[60,30],[60,33,18,37,"NativeModulesProxy"],[60,61],[60,62,18,8,"ExpoBarCodeScannerModule"],[60,86],[61,0,20,0],[61,6,20,6,"EVENT_THROTTLE_MS"],[61,23,20,23],[61,26,20,26],[61,29,20,0],[66,0,49,2],[66,28,49,14,"props"],[66,33,49,2],[66,35,49,28],[67,0,49,28],[69,0,49,28],[70,0,50,4],[70,118,50,10,"props"],[70,123,50,4],[72,0,49,28],[72,12,86,2,"setReference"],[72,24,49,28],[72,27,86,17],[72,37,86,18,"ref"],[72,40,86,17],[72,42,86,35],[73,0,87,4],[73,12,87,8,"ref"],[73,15,87,4],[73,17,87,13],[74,0,88,6],[74,16,88,11,"barCodeScannerRef"],[74,33,88,6],[74,36,88,31,"ref"],[74,39,88,6],[75,0,89,6],[75,16,89,11,"barCodeScannerHandle"],[75,36,89,6],[75,39,89,34],[75,72,89,49,"ref"],[75,75,89,34],[75,76,89,6],[76,0,90,5],[76,9,87,4],[76,15,90,11],[77,0,91,6],[77,16,91,11,"barCodeScannerRef"],[77,33,91,6],[77,36,91,31],[77,40,91,6],[78,0,92,6],[78,16,92,11,"barCodeScannerHandle"],[78,36,92,6],[78,39,92,34],[78,43,92,6],[79,0,93,5],[80,0,94,3],[80,7,49,28],[82,0,49,28],[82,12,96,2,"onObjectDetected"],[82,28,49,28],[82,31,96,21],[82,41,96,22,"callback"],[82,49,96,21],[83,0,96,21],[83,15,96,46],[83,31,96,95],[84,0,96,95],[84,14,96,49,"nativeEvent"],[84,25,96,95],[84,33,96,49,"nativeEvent"],[84,44,96,95],[85,0,96,95],[85,14,97,12,"type"],[85,18,96,95],[85,21,97,21,"nativeEvent"],[85,32,96,95],[85,33,97,12,"type"],[85,37,96,95],[87,0,98,4],[87,14,98,8],[87,20,98,13,"lastEvents"],[87,30,98,8],[87,31,98,24,"type"],[87,35,98,8],[87,40,99,6],[87,46,99,11,"lastEventsTimes"],[87,61,99,6],[87,62,99,27,"type"],[87,66,99,6],[87,67,98,8],[87,71,100,6,"JSON"],[87,75,100,10],[87,76,100,11,"stringify"],[87,85,100,6],[87,86,100,21,"nativeEvent"],[87,97,100,6],[87,103,100,38],[87,109,100,43,"lastEvents"],[87,119,100,38],[87,120,100,54,"type"],[87,124,100,38],[87,125,98,8],[87,129,101,6],[87,133,101,10,"Date"],[87,137,101,6],[87,142,101,19],[87,148,101,24,"lastEventsTimes"],[87,163,101,19],[87,164,101,40,"type"],[87,168,101,19],[87,169,101,6],[87,172,101,48,"EVENT_THROTTLE_MS"],[87,189,98,4],[87,191,102,6],[88,0,103,6],[89,0,104,5],[91,0,106,4],[91,14,106,8,"callback"],[91,22,106,4],[91,24,106,18],[92,0,107,6,"callback"],[92,12,107,6,"callback"],[92,20,107,14],[92,21,107,15,"nativeEvent"],[92,32,107,14],[92,33,107,6],[93,0,108,6],[93,18,108,11,"lastEventsTimes"],[93,33,108,6],[93,34,108,27,"type"],[93,38,108,6],[93,42,108,35],[93,46,108,39,"Date"],[93,50,108,35],[93,52,108,6],[94,0,109,6],[94,18,109,11,"lastEvents"],[94,28,109,6],[94,29,109,22,"type"],[94,33,109,6],[94,37,109,30,"JSON"],[94,41,109,34],[94,42,109,35,"stringify"],[94,51,109,30],[94,52,109,45,"nativeEvent"],[94,63,109,30],[94,64,109,6],[95,0,110,5],[96,0,111,3],[96,9,96,21],[97,0,96,21],[97,7,49,28],[99,0,51,4],[99,12,51,9,"lastEvents"],[99,22,51,4],[99,25,51,22],[99,27,51,4],[100,0,52,4],[100,12,52,9,"lastEventsTimes"],[100,27,52,4],[100,30,52,27],[100,32,52,4],[101,0,49,28],[102,0,53,3],[106,31,74,11],[107,0,75,4],[107,12,75,10,"nativeProps"],[107,23,75,21],[107,26,75,24],[107,31,75,29,"convertNativeProps"],[107,49,75,24],[107,50,75,48],[107,55,75,53,"props"],[107,60,75,24],[107,61,75,4],[108,0,74,11],[108,26,76,48],[108,31,76,53,"props"],[108,36,74,11],[109,0,74,11],[109,12,76,12,"onBarCodeScanned"],[109,28,74,11],[109,43,76,12,"onBarCodeScanned"],[109,59,74,11],[110,0,74,11],[110,12,76,30,"onBarCodeRead"],[110,25,74,11],[110,40,76,30,"onBarCodeRead"],[110,53,74,11],[111,0,77,4],[111,15,78,6],[111,44,78,7],[111,66,78,6],[111,95,79,12,"nativeProps"],[111,106,78,6],[112,0,80,8],[112,10,80,8],[112,13,80,11],[112,15,80,13],[112,20,80,18,"setReference"],[112,32,78,6],[113,0,81,8],[113,10,81,8],[113,26,81,24],[113,28,81,26],[113,33,81,31,"onObjectDetected"],[113,49,81,26],[113,50,81,48,"onBarCodeScanned"],[113,66,81,64],[113,70,81,68,"onBarCodeRead"],[113,83,81,26],[113,84,78,6],[114,0,78,6],[115,0,78,6],[116,0,78,6],[117,0,78,6],[118,0,78,6],[118,11,77,4],[119,0,84,3],[122,41,113,21,"props"],[122,46],[122,48,113,35],[123,0,114,4],[123,12,114,10,"newProps"],[123,20,114,18],[123,23,114,21],[123,44,114,31,"props"],[123,49,114,21],[123,51,114,38],[123,56,114,43,"convertProp"],[123,67,114,21],[123,68,114,4],[124,0,115,4],[124,15,115,11,"newProps"],[124,23,115,4],[125,0,116,3],[128,34,118,14,"value"],[128,39],[128,41,118,24,"key"],[128,44],[128,46,118,40],[129,0,119,4],[129,12,119,8],[129,19,119,15,"value"],[129,24,119,8],[129,29,119,25],[129,37,119,8],[129,41,119,37,"BarCodeScanner"],[129,55,119,51],[129,56,119,52,"ConversionTables"],[129,72,119,37],[129,73,119,69,"key"],[129,76,119,37],[129,77,119,4],[129,79,119,75],[130,0,120,6],[130,17,120,13,"BarCodeScanner"],[130,31,120,27],[130,32,120,28,"ConversionTables"],[130,48,120,13],[130,49,120,45,"key"],[130,52,120,13],[130,54,120,50,"value"],[130,59,120,13],[130,60,120,6],[131,0,121,5],[133,0,122,4],[133,15,122,11,"value"],[133,20,122,4],[134,0,123,3],[137,39,55,32,"url"],[137,42],[137,44,55,45,"barCodeTypes"],[137,56],[143,22,56,8,"Array"],[143,27,56,13],[143,28,56,14,"isArray"],[143,35,56,8],[143,36,56,22,"barCodeTypes"],[143,48,56,8],[143,53,56,39,"barCodeTypes"],[143,65,56,51],[143,66,56,52,"length"],[143,72,56,39],[143,77,56,63],[143,78],[148,22,57,12],[148,26,57,16,"Error"],[148,31,57,12],[148,32,57,22],[148,105,57,12],[148,106],[151,22,60,8,"Platform"],[151,44,60,17,"OS"],[151,46,60,8],[151,51,60,24],[151,56],[156,22,61,10,"Array"],[156,27,61,15],[156,28,61,16,"isArray"],[156,35,61,10],[156,36,61,24,"barCodeTypes"],[156,48,61,10],[156,53,61,41],[156,54,61,42,"barCodeTypes"],[156,66,61,54],[156,67,61,55,"includes"],[156,75,61,42],[156,76,61,64,"BarCodeScanner"],[156,90,61,78],[156,91,61,79,"Constants"],[156,100,61,64],[156,101,61,89,"BarCodeType"],[156,112,61,64],[156,113,61,101,"qr"],[156,115,61,42],[156,116],[161,22,63,14],[161,26,63,18,"Error"],[161,31,63,14],[161,32,63,24],[161,88,63,14],[161,89],[164,49,66,13,"ExpoBarCodeScannerModule"],[164,73,66,37],[164,74,66,38,"scanFromURLAsync"],[164,90,66,13],[164,91,66,55,"url"],[164,94,66,13],[164,96,66,60],[164,97,66,61,"BarCodeScanner"],[164,111,66,75],[164,112,66,76,"Constants"],[164,121,66,61],[164,122,66,86,"BarCodeType"],[164,133,66,61],[164,134,66,98,"qr"],[164,136,66,60],[164,137,66,13],[164,138],[167,0,70,10,"effectiveBarCodeTypes"],[167,16,70,10,"effectiveBarCodeTypes"],[167,37],[167,40,70,34,"barCodeTypes"],[167,52,70,46],[167,56,70,50,"Object"],[167,62,70,56],[167,63,70,57,"values"],[167,69,70,50],[167,70,70,64,"ExpoBarCodeScannerModule"],[167,94,70,88],[167,95,70,89,"BarCodeType"],[167,106,70,50],[167,107],[168,49,71,11,"ExpoBarCodeScannerModule"],[168,73,71,35],[168,74,71,36,"scanFromURLAsync"],[168,90,71,11],[168,91,71,53,"url"],[168,94,71,11],[168,96,71,58,"effectiveBarCodeTypes"],[168,117,71,11],[168,118],[179,4,22,44,"React"],[179,19,22,50,"Component"],[179,28],[179,38,28,9,"Constants"],[179,47],[179,50,28,21],[180,0,29,4,"BarCodeType"],[180,4,29,4,"BarCodeType"],[180,15,29,15],[180,17,29,17,"ExpoBarCodeScannerModule"],[180,41,29,41],[180,42,29,42,"BarCodeType"],[180,53,28,21],[181,0,30,4,"Type"],[181,4,30,4,"Type"],[181,8,30,8],[181,10,30,10,"ExpoBarCodeScannerModule"],[181,34,30,34],[181,35,30,35,"Type"],[182,0,28,21],[182,3],[182,12,33,9,"ConversionTables"],[182,28],[182,31,33,28],[183,0,34,4,"type"],[183,4,34,4,"type"],[183,8,34,8],[183,10,34,10,"ExpoBarCodeScannerModule"],[183,34,34,34],[183,35,34,35,"Type"],[184,0,33,28],[184,3],[184,12,37,9,"propTypes"],[184,21],[184,56,38,7,"ViewPropTypes"],[184,82],[185,0,39,4,"onBarCodeScanned"],[185,4,39,4,"onBarCodeScanned"],[185,20,39,20],[185,22,39,22,"PropTypes"],[185,41,39,32,"func"],[185,45],[186,0,40,4,"barCodeTypes"],[186,4,40,4,"barCodeTypes"],[186,16,40,16],[186,18,40,18,"PropTypes"],[186,37,40,28,"array"],[186,42],[187,0,41,4,"type"],[187,4,41,4,"type"],[187,8,41,8],[187,10,41,10,"PropTypes"],[187,29,41,20,"oneOfType"],[187,38,41,10],[187,39,41,30],[187,40,41,31,"PropTypes"],[187,59,41,41,"string"],[187,65,41,30],[187,67,41,49,"PropTypes"],[187,86,41,59,"number"],[187,92,41,30],[187,93,41,10],[188,13,44,9,"defaultProps"],[188,25],[188,28,44,24],[189,0,45,4,"type"],[189,4,45,4,"type"],[189,8,45,8],[189,10,45,10,"ExpoBarCodeScannerModule"],[189,34,45,34],[189,35,45,35,"Type"],[189,39,45,10],[189,40,45,40,"back"],[189,44,44,24],[190,0,46,4,"barCodeTypes"],[190,4,46,4,"barCodeTypes"],[190,16,46,16],[190,18,46,18,"Object"],[190,24,46,24],[190,25,46,25,"values"],[190,31,46,18],[190,32,46,32,"ExpoBarCodeScannerModule"],[190,56,46,56],[190,57,46,57,"BarCodeType"],[190,68,46,18],[191,0,44,24],[191,3],[195,0,126,7],[195,6,126,13,"Constants"],[195,15,126,22],[195,18,126,25,"BarCodeScanner"],[195,32,126,39],[195,33,126,40,"Constants"],[195,42,126,7],[197,0,128,0],[197,6,128,6,"ExpoBarCodeScannerView"],[197,28,128,28],[197,31,128,31],[197,71,128,56],[197,95,128,31],[197,97,128,82,"BarCodeScanner"],[197,111,128,31],[197,112,128,0]]},"type":"js/module"}]}