{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/extends","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/assertThisInitialized","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/inherits","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/objectSpread","data":{"isAsync":false}},{"name":"react","data":{"isAsync":false}},{"name":"./../../../react-transform-hmr/lib/index.js","data":{"isAsync":false}},{"name":"../Components/View/ReactNativeViewAttributes","data":{"isAsync":false}},{"name":"./TextAncestor","data":{"isAsync":false}},{"name":"./TextPropTypes","data":{"isAsync":false}},{"name":"../Components/Touchable/Touchable","data":{"isAsync":false}},{"name":"../ReactNative/UIManager","data":{"isAsync":false}},{"name":"../Renderer/shims/createReactNativeComponentClass","data":{"isAsync":false}},{"name":"fbjs/lib/nullthrows","data":{"isAsync":false}},{"name":"../StyleSheet/processColor","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  var _extends = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/extends\");\n\n  var _classCallCheck = _$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/classCallCheck\");\n\n  var _createClass = _$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/createClass\");\n\n  var _possibleConstructorReturn = _$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/possibleConstructorReturn\");\n\n  var _getPrototypeOf = _$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/getPrototypeOf\");\n\n  var _assertThisInitialized = _$$_REQUIRE(_dependencyMap[6], \"@babel/runtime/helpers/assertThisInitialized\");\n\n  var _inherits = _$$_REQUIRE(_dependencyMap[7], \"@babel/runtime/helpers/inherits\");\n\n  var _objectSpread = _$$_REQUIRE(_dependencyMap[8], \"@babel/runtime/helpers/objectSpread\");\n\n  var _default = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9], \"react\")).default;\n\n  var _reactTransformHmrLibIndexJs = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10], \"./../../../react-transform-hmr/lib/index.js\")).default;\n\n  var _jsxFileName = \"/home/raphael/projetos/condominio/nocdo_react_native/node_modules/react-native/Libraries/Text/Text.js\";\n  var _components = {\n    TouchableText: {\n      displayName: \"TouchableText\"\n    }\n  };\n\n  var _reactTransformHmrLibIndexJs2 = _reactTransformHmrLibIndexJs({\n    filename: \"/home/raphael/projetos/condominio/nocdo_react_native/node_modules/react-native/Libraries/Text/Text.js\",\n    components: _components,\n    locals: [module],\n    imports: [_default]\n  });\n\n  function _wrapComponent(id) {\n    return function (Component) {\n      return _reactTransformHmrLibIndexJs2(Component, id);\n    };\n  }\n\n  var React = _$$_REQUIRE(_dependencyMap[9], \"react\");\n\n  var ReactNativeViewAttributes = _$$_REQUIRE(_dependencyMap[11], \"../Components/View/ReactNativeViewAttributes\");\n\n  var TextAncestor = _$$_REQUIRE(_dependencyMap[12], \"./TextAncestor\");\n\n  var TextPropTypes = _$$_REQUIRE(_dependencyMap[13], \"./TextPropTypes\");\n\n  var Touchable = _$$_REQUIRE(_dependencyMap[14], \"../Components/Touchable/Touchable\");\n\n  var UIManager = _$$_REQUIRE(_dependencyMap[15], \"../ReactNative/UIManager\");\n\n  var createReactNativeComponentClass = _$$_REQUIRE(_dependencyMap[16], \"../Renderer/shims/createReactNativeComponentClass\");\n\n  var nullthrows = _$$_REQUIRE(_dependencyMap[17], \"fbjs/lib/nullthrows\");\n\n  var processColor = _$$_REQUIRE(_dependencyMap[18], \"../StyleSheet/processColor\");\n\n  var PRESS_RECT_OFFSET = {\n    top: 20,\n    left: 20,\n    right: 20,\n    bottom: 30\n  };\n  var viewConfig = {\n    validAttributes: _objectSpread({}, ReactNativeViewAttributes.UIView, {\n      isHighlighted: true,\n      numberOfLines: true,\n      ellipsizeMode: true,\n      allowFontScaling: true,\n      disabled: true,\n      selectable: true,\n      selectionColor: true,\n      adjustsFontSizeToFit: true,\n      minimumFontScale: true,\n      textBreakStrategy: true\n    }),\n    uiViewClassName: 'RCTText'\n  };\n\n  var TouchableText = function (_React$Component) {\n    _inherits(TouchableText, _React$Component);\n\n    function TouchableText() {\n      var _getPrototypeOf2;\n\n      var _this;\n\n      _classCallCheck(this, TouchableText);\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(TouchableText)).call.apply(_getPrototypeOf2, [this].concat(args)));\n      _this.state = _objectSpread({}, Touchable.Mixin.touchableGetInitialState(), {\n        isHighlighted: false,\n        createResponderHandlers: _this._createResponseHandlers.bind(_assertThisInitialized(_this)),\n        responseHandlers: null\n      });\n      return _this;\n    }\n\n    _createClass(TouchableText, [{\n      key: \"render\",\n      value: function render() {\n        var props = this.props;\n\n        if (isTouchable(props)) {\n          props = _objectSpread({}, props, this.state.responseHandlers, {\n            isHighlighted: this.state.isHighlighted\n          });\n        }\n\n        if (props.selectionColor != null) {\n          props = _objectSpread({}, props, {\n            selectionColor: processColor(props.selectionColor)\n          });\n        }\n\n        if (__DEV__) {\n          if (Touchable.TOUCH_TARGET_DEBUG && props.onPress != null) {\n            props = _objectSpread({}, props, {\n              style: [props.style, {\n                color: 'magenta'\n              }]\n            });\n          }\n        }\n\n        return React.createElement(TextAncestor.Consumer, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139\n          }\n        }, function (hasTextAncestor) {\n          return hasTextAncestor ? React.createElement(RCTVirtualText, _extends({}, props, {\n            ref: props.forwardedRef,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 142\n            }\n          })) : React.createElement(TextAncestor.Provider, {\n            value: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 144\n            }\n          }, React.createElement(RCTText, _extends({}, props, {\n            ref: props.forwardedRef,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 145\n            }\n          })));\n        });\n      }\n    }, {\n      key: \"_createResponseHandlers\",\n      value: function _createResponseHandlers() {\n        var _this2 = this;\n\n        return {\n          onStartShouldSetResponder: function onStartShouldSetResponder() {\n            var onStartShouldSetResponder = _this2.props.onStartShouldSetResponder;\n            var shouldSetResponder = (onStartShouldSetResponder == null ? false : onStartShouldSetResponder()) || isTouchable(_this2.props);\n\n            if (shouldSetResponder) {\n              _this2._attachTouchHandlers();\n            }\n\n            return shouldSetResponder;\n          },\n          onResponderGrant: function onResponderGrant(event, dispatchID) {\n            nullthrows(_this2.touchableHandleResponderGrant)(event, dispatchID);\n\n            if (_this2.props.onResponderGrant != null) {\n              _this2.props.onResponderGrant.call(_this2, event, dispatchID);\n            }\n          },\n          onResponderMove: function onResponderMove(event) {\n            nullthrows(_this2.touchableHandleResponderMove)(event);\n\n            if (_this2.props.onResponderMove != null) {\n              _this2.props.onResponderMove.call(_this2, event);\n            }\n          },\n          onResponderRelease: function onResponderRelease(event) {\n            nullthrows(_this2.touchableHandleResponderRelease)(event);\n\n            if (_this2.props.onResponderRelease != null) {\n              _this2.props.onResponderRelease.call(_this2, event);\n            }\n          },\n          onResponderTerminate: function onResponderTerminate(event) {\n            nullthrows(_this2.touchableHandleResponderTerminate)(event);\n\n            if (_this2.props.onResponderTerminate != null) {\n              _this2.props.onResponderTerminate.call(_this2, event);\n            }\n          },\n          onResponderTerminationRequest: function onResponderTerminationRequest() {\n            var onResponderTerminationRequest = _this2.props.onResponderTerminationRequest;\n\n            if (!nullthrows(_this2.touchableHandleResponderTerminationRequest)()) {\n              return false;\n            }\n\n            if (onResponderTerminationRequest == null) {\n              return true;\n            }\n\n            return onResponderTerminationRequest();\n          }\n        };\n      }\n    }, {\n      key: \"_attachTouchHandlers\",\n      value: function _attachTouchHandlers() {\n        var _this3 = this;\n\n        if (this.touchableGetPressRectOffset != null) {\n          return;\n        }\n\n        for (var key in Touchable.Mixin) {\n          if (typeof Touchable.Mixin[key] === 'function') {\n            this[key] = Touchable.Mixin[key].bind(this);\n          }\n        }\n\n        this.touchableHandleActivePressIn = function () {\n          if (!_this3.props.suppressHighlighting && isTouchable(_this3.props)) {\n            _this3.setState({\n              isHighlighted: true\n            });\n          }\n        };\n\n        this.touchableHandleActivePressOut = function () {\n          if (!_this3.props.suppressHighlighting && isTouchable(_this3.props)) {\n            _this3.setState({\n              isHighlighted: false\n            });\n          }\n        };\n\n        this.touchableHandlePress = function (event) {\n          if (_this3.props.onPress != null) {\n            _this3.props.onPress(event);\n          }\n        };\n\n        this.touchableHandleLongPress = function (event) {\n          if (_this3.props.onLongPress != null) {\n            _this3.props.onLongPress(event);\n          }\n        };\n\n        this.touchableGetPressRectOffset = function () {\n          return _this3.props.pressRetentionOffset == null ? PRESS_RECT_OFFSET : _this3.props.pressRetentionOffset;\n        };\n      }\n    }], [{\n      key: \"getDerivedStateFromProps\",\n      value: function getDerivedStateFromProps(nextProps, prevState) {\n        return prevState.responseHandlers == null && isTouchable(nextProps) ? _objectSpread({}, prevState, {\n          responseHandlers: prevState.createResponderHandlers()\n        }) : null;\n      }\n    }]);\n\n    return TouchableText;\n  }(React.Component);\n\n  TouchableText.defaultProps = {\n    accessible: true,\n    allowFontScaling: true,\n    ellipsizeMode: 'tail'\n  };\n  TouchableText.viewConfig = viewConfig;\n  TouchableText = _wrapComponent(\"TouchableText\")(TouchableText);\n\n  var isTouchable = function isTouchable(props) {\n    return props.onPress != null || props.onLongPress != null || props.onStartShouldSetResponder != null;\n  };\n\n  var RCTText = createReactNativeComponentClass(viewConfig.uiViewClassName, function () {\n    return viewConfig;\n  });\n  var RCTVirtualText = UIManager.RCTVirtualText == null ? RCTText : createReactNativeComponentClass('RCTVirtualText', function () {\n    return {\n      validAttributes: _objectSpread({}, ReactNativeViewAttributes.UIView, {\n        isHighlighted: true\n      }),\n      uiViewClassName: 'RCTVirtualText'\n    };\n  });\n\n  var Text = function Text(props, forwardedRef) {\n    return React.createElement(TouchableText, _extends({}, props, {\n      forwardedRef: forwardedRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      }\n    }));\n  };\n\n  var TextToExport = React.forwardRef(Text);\n  TextToExport.propTypes = TextPropTypes;\n  module.exports = TextToExport;\n});","map":[[2,0,11,0],[46,0,13,0],[46,6,13,6,"React"],[46,11,13,11],[46,14,13,14,"require"],[46,25,13,21],[46,53,13,0],[48,0,14,0],[48,6,14,6,"ReactNativeViewAttributes"],[48,31,14,31],[48,34,14,34,"require"],[48,45,14,41],[48,113,14,0],[50,0,15,0],[50,6,15,6,"TextAncestor"],[50,18,15,18],[50,21,15,21,"require"],[50,32,15,28],[50,70,15,0],[52,0,16,0],[52,6,16,6,"TextPropTypes"],[52,19,16,19],[52,22,16,22,"require"],[52,33,16,29],[52,72,16,0],[54,0,17,0],[54,6,17,6,"Touchable"],[54,15,17,15],[54,18,17,18,"require"],[54,29,17,25],[54,86,17,0],[56,0,18,0],[56,6,18,6,"UIManager"],[56,15,18,15],[56,18,18,18,"require"],[56,29,18,25],[56,77,18,0],[58,0,20,0],[58,6,20,6,"createReactNativeComponentClass"],[58,37,20,37],[58,40,20,40,"require"],[58,51,20,47],[58,124,20,0],[60,0,21,0],[60,6,21,6,"nullthrows"],[60,16,21,16],[60,19,21,19,"require"],[60,30,21,26],[60,73,21,0],[62,0,22,0],[62,6,22,6,"processColor"],[62,18,22,18],[62,21,22,21,"require"],[62,32,22,28],[62,82,22,0],[64,0,52,0],[64,6,52,6,"PRESS_RECT_OFFSET"],[64,23,52,23],[64,26,52,26],[65,0,52,27,"top"],[65,4,52,27,"top"],[65,7,52,30],[65,9,52,32],[65,11,52,26],[66,0,52,36,"left"],[66,4,52,36,"left"],[66,8,52,40],[66,10,52,42],[66,12,52,26],[67,0,52,46,"right"],[67,4,52,46,"right"],[67,9,52,51],[67,11,52,53],[67,13,52,26],[68,0,52,57,"bottom"],[68,4,52,57,"bottom"],[68,10,52,63],[68,12,52,65],[69,0,52,26],[69,3,52,0],[70,0,54,0],[70,6,54,6,"viewConfig"],[70,16,54,16],[70,19,54,19],[71,0,55,2,"validAttributes"],[71,4,55,2,"validAttributes"],[71,19,55,17],[71,39,56,7,"ReactNativeViewAttributes"],[71,64,56,32],[71,65,56,33,"UIView"],[71,71,55,17],[72,0,57,4,"isHighlighted"],[72,6,57,4,"isHighlighted"],[72,19,57,17],[72,21,57,19],[72,25,55,17],[73,0,58,4,"numberOfLines"],[73,6,58,4,"numberOfLines"],[73,19,58,17],[73,21,58,19],[73,25,55,17],[74,0,59,4,"ellipsizeMode"],[74,6,59,4,"ellipsizeMode"],[74,19,59,17],[74,21,59,19],[74,25,55,17],[75,0,60,4,"allowFontScaling"],[75,6,60,4,"allowFontScaling"],[75,22,60,20],[75,24,60,22],[75,28,55,17],[76,0,61,4,"disabled"],[76,6,61,4,"disabled"],[76,14,61,12],[76,16,61,14],[76,20,55,17],[77,0,62,4,"selectable"],[77,6,62,4,"selectable"],[77,16,62,14],[77,18,62,16],[77,22,55,17],[78,0,63,4,"selectionColor"],[78,6,63,4,"selectionColor"],[78,20,63,18],[78,22,63,20],[78,26,55,17],[79,0,64,4,"adjustsFontSizeToFit"],[79,6,64,4,"adjustsFontSizeToFit"],[79,26,64,24],[79,28,64,26],[79,32,55,17],[80,0,65,4,"minimumFontScale"],[80,6,65,4,"minimumFontScale"],[80,22,65,20],[80,24,65,22],[80,28,55,17],[81,0,66,4,"textBreakStrategy"],[81,6,66,4,"textBreakStrategy"],[81,23,66,21],[81,25,66,23],[82,0,55,17],[82,6,54,19],[83,0,68,2,"uiViewClassName"],[83,4,68,2,"uiViewClassName"],[83,19,68,17],[83,21,68,19],[84,0,54,19],[84,3,54,0],[86,6,76,6,"TouchableText"],[86,19],[101,12,97,2,"state"],[101,17],[101,38,98,7,"Touchable"],[101,47,98,16],[101,48,98,17,"Mixin"],[101,53,98,7],[101,54,98,23,"touchableGetInitialState"],[101,78,98,7],[101,80],[102,0,99,4,"isHighlighted"],[102,8,99,4,"isHighlighted"],[102,21,99,17],[102,23,99,19],[102,28],[103,0,100,4,"createResponderHandlers"],[103,8,100,4,"createResponderHandlers"],[103,31,100,27],[103,33,100,29],[103,39,100,34,"_createResponseHandlers"],[103,62,100,29],[103,63,100,58,"bind"],[103,67,100,29],[103,98],[104,0,101,4,"responseHandlers"],[104,8,101,4,"responseHandlers"],[104,24,101,20],[104,26,101,22],[111,31,115,23],[112,0,116,4],[112,12,116,8,"props"],[112,17,116,13],[112,20,116,16],[112,25,116,21,"props"],[112,30,116,4],[114,0,117,4],[114,12,117,8,"isTouchable"],[114,23,117,19],[114,24,117,20,"props"],[114,29,117,19],[114,30,117,4],[114,32,117,28],[115,0,118,6,"props"],[115,10,118,6,"props"],[115,15,118,11],[115,36,119,11,"props"],[115,41,118,11],[115,43,120,11],[115,48,120,16,"state"],[115,53,120,11],[115,54,120,22,"responseHandlers"],[115,70,118,11],[116,0,121,8,"isHighlighted"],[116,12,121,8,"isHighlighted"],[116,25,121,21],[116,27,121,23],[116,32,121,28,"state"],[116,37,121,23],[116,38,121,34,"isHighlighted"],[117,0,118,11],[117,12,118,6],[118,0,123,5],[120,0,124,4],[120,12,124,8,"props"],[120,17,124,13],[120,18,124,14,"selectionColor"],[120,32,124,8],[120,36,124,32],[120,40,124,4],[120,42,124,38],[121,0,125,6,"props"],[121,10,125,6,"props"],[121,15,125,11],[121,36,126,11,"props"],[121,41,125,11],[122,0,127,8,"selectionColor"],[122,12,127,8,"selectionColor"],[122,26,127,22],[122,28,127,24,"processColor"],[122,40,127,36],[122,41,127,37,"props"],[122,46,127,42],[122,47,127,43,"selectionColor"],[122,61,127,36],[123,0,125,11],[123,12,125,6],[124,0,129,5],[126,0,130,4],[126,12,130,8,"__DEV__"],[126,19,130,4],[126,21,130,17],[127,0,131,6],[127,14,131,10,"Touchable"],[127,23,131,19],[127,24,131,20,"TOUCH_TARGET_DEBUG"],[127,42,131,10],[127,46,131,42,"props"],[127,51,131,47],[127,52,131,48,"onPress"],[127,59,131,42],[127,63,131,59],[127,67,131,6],[127,69,131,65],[128,0,132,8,"props"],[128,12,132,8,"props"],[128,17,132,13],[128,38,133,13,"props"],[128,43,132,13],[129,0,134,10,"style"],[129,14,134,10,"style"],[129,19,134,15],[129,21,134,17],[129,22,134,18,"props"],[129,27,134,23],[129,28,134,24,"style"],[129,33,134,17],[129,35,134,31],[130,0,134,32,"color"],[130,16,134,32,"color"],[130,21,134,37],[130,23,134,39],[131,0,134,31],[131,15,134,17],[132,0,132,13],[132,14,132,8],[133,0,136,7],[134,0,137,5],[136,0,138,4],[136,15,139,6],[136,35,139,7],[136,47,139,6],[136,48,139,20],[136,56,139,6],[137,0,139,6],[138,0,139,6],[139,0,139,6],[140,0,139,6],[141,0,139,6],[141,11,140,9],[141,21,140,9,"hasTextAncestor"],[141,36,140,24],[142,0,140,24],[142,17,141,10,"hasTextAncestor"],[142,32,141,25],[142,35,142,12],[142,55,142,13],[142,69,142,12],[142,84,142,32,"props"],[142,89,142,12],[143,0,142,39],[143,12,142,39],[143,15,142,42],[143,17,142,44,"props"],[143,22,142,49],[143,23,142,50,"forwardedRef"],[143,35,142,12],[144,0,142,12],[145,0,142,12],[146,0,142,12],[147,0,142,12],[148,0,142,12],[148,13,141,25],[148,16,144,12],[148,36,144,13],[148,48,144,12],[148,49,144,26],[148,57,144,12],[149,0,144,35],[149,12,144,35],[149,17,144,40],[149,19,144,42],[149,23,144,12],[150,0,144,12],[151,0,144,12],[152,0,144,12],[153,0,144,12],[154,0,144,12],[154,13,145,14],[154,33,145,15],[154,40,145,14],[154,55,145,27,"props"],[154,60,145,14],[155,0,145,34],[155,12,145,34],[155,15,145,37],[155,17,145,39,"props"],[155,22,145,44],[155,23,145,45,"forwardedRef"],[155,35,145,14],[156,0,145,14],[157,0,145,14],[158,0,145,14],[159,0,145,14],[160,0,145,14],[160,13,144,12],[160,14,140,24],[161,0,140,24],[161,9,139,6],[161,10,138,4],[162,0,151,3],[165,48,153,46],[166,0,153,46],[168,0,154,4],[168,15,154,11],[169,0,155,6,"onStartShouldSetResponder"],[169,10,155,6,"onStartShouldSetResponder"],[169,35,155,31],[169,37,155,33],[169,74,155,48],[170,0,155,48],[170,16,156,15,"onStartShouldSetResponder"],[170,41,155,48],[170,44,156,44],[170,50,156,48],[170,51,156,49,"props"],[170,56,155,48],[170,57,156,15,"onStartShouldSetResponder"],[170,82,155,48],[171,0,157,8],[171,16,157,14,"shouldSetResponder"],[171,34,157,32],[171,37,158,10],[171,38,158,11,"onStartShouldSetResponder"],[171,63,158,36],[171,67,158,40],[171,71,158,11],[171,74,159,14],[171,79,158,11],[171,82,160,14,"onStartShouldSetResponder"],[171,107,160,39],[171,109,158,10],[171,114,160,46,"isTouchable"],[171,125,160,57],[171,126,160,58],[171,132,160,62],[171,133,160,63,"props"],[171,138,160,57],[171,139,157,8],[173,0,162,8],[173,16,162,12,"shouldSetResponder"],[173,34,162,8],[173,36,162,32],[174,0,163,10],[174,14,163,10],[174,20,163,14],[174,21,163,15,"_attachTouchHandlers"],[174,41,163,10],[175,0,164,9],[177,0,165,8],[177,19,165,15,"shouldSetResponder"],[177,37,165,8],[178,0,166,7],[178,11,154,11],[179,0,167,6,"onResponderGrant"],[179,10,167,6,"onResponderGrant"],[179,26,167,22],[179,28,167,24],[179,54,167,25,"event"],[179,59,167,24],[179,61,167,50,"dispatchID"],[179,71,167,24],[179,73,167,79],[180,0,168,8,"nullthrows"],[180,12,168,8,"nullthrows"],[180,22,168,18],[180,23,168,19],[180,29,168,23],[180,30,168,24,"touchableHandleResponderGrant"],[180,59,168,18],[180,60,168,8],[180,61,168,55,"event"],[180,66,168,8],[180,68,168,62,"dispatchID"],[180,78,168,8],[182,0,169,8],[182,16,169,12],[182,22,169,16],[182,23,169,17,"props"],[182,28,169,12],[182,29,169,23,"onResponderGrant"],[182,45,169,12],[182,49,169,43],[182,53,169,8],[182,55,169,49],[183,0,170,10],[183,14,170,10],[183,20,170,14],[183,21,170,15,"props"],[183,26,170,10],[183,27,170,21,"onResponderGrant"],[183,43,170,10],[183,44,170,38,"call"],[183,48,170,10],[183,49,170,43],[183,55,170,10],[183,57,170,49,"event"],[183,62,170,10],[183,64,170,56,"dispatchID"],[183,74,170,10],[184,0,171,9],[185,0,172,7],[185,11,154,11],[186,0,173,6,"onResponderMove"],[186,10,173,6,"onResponderMove"],[186,25,173,21],[186,27,173,23],[186,52,173,24,"event"],[186,57,173,23],[186,59,173,58],[187,0,174,8,"nullthrows"],[187,12,174,8,"nullthrows"],[187,22,174,18],[187,23,174,19],[187,29,174,23],[187,30,174,24,"touchableHandleResponderMove"],[187,58,174,18],[187,59,174,8],[187,60,174,54,"event"],[187,65,174,8],[189,0,175,8],[189,16,175,12],[189,22,175,16],[189,23,175,17,"props"],[189,28,175,12],[189,29,175,23,"onResponderMove"],[189,44,175,12],[189,48,175,42],[189,52,175,8],[189,54,175,48],[190,0,176,10],[190,14,176,10],[190,20,176,14],[190,21,176,15,"props"],[190,26,176,10],[190,27,176,21,"onResponderMove"],[190,42,176,10],[190,43,176,37,"call"],[190,47,176,10],[190,48,176,42],[190,54,176,10],[190,56,176,48,"event"],[190,61,176,10],[191,0,177,9],[192,0,178,7],[192,11,154,11],[193,0,179,6,"onResponderRelease"],[193,10,179,6,"onResponderRelease"],[193,28,179,24],[193,30,179,26],[193,58,179,27,"event"],[193,63,179,26],[193,65,179,61],[194,0,180,8,"nullthrows"],[194,12,180,8,"nullthrows"],[194,22,180,18],[194,23,180,19],[194,29,180,23],[194,30,180,24,"touchableHandleResponderRelease"],[194,61,180,18],[194,62,180,8],[194,63,180,57,"event"],[194,68,180,8],[196,0,181,8],[196,16,181,12],[196,22,181,16],[196,23,181,17,"props"],[196,28,181,12],[196,29,181,23,"onResponderRelease"],[196,47,181,12],[196,51,181,45],[196,55,181,8],[196,57,181,51],[197,0,182,10],[197,14,182,10],[197,20,182,14],[197,21,182,15,"props"],[197,26,182,10],[197,27,182,21,"onResponderRelease"],[197,45,182,10],[197,46,182,40,"call"],[197,50,182,10],[197,51,182,45],[197,57,182,10],[197,59,182,51,"event"],[197,64,182,10],[198,0,183,9],[199,0,184,7],[199,11,154,11],[200,0,185,6,"onResponderTerminate"],[200,10,185,6,"onResponderTerminate"],[200,30,185,26],[200,32,185,28],[200,62,185,29,"event"],[200,67,185,28],[200,69,185,63],[201,0,186,8,"nullthrows"],[201,12,186,8,"nullthrows"],[201,22,186,18],[201,23,186,19],[201,29,186,23],[201,30,186,24,"touchableHandleResponderTerminate"],[201,63,186,18],[201,64,186,8],[201,65,186,59,"event"],[201,70,186,8],[203,0,187,8],[203,16,187,12],[203,22,187,16],[203,23,187,17,"props"],[203,28,187,12],[203,29,187,23,"onResponderTerminate"],[203,49,187,12],[203,53,187,47],[203,57,187,8],[203,59,187,53],[204,0,188,10],[204,14,188,10],[204,20,188,14],[204,21,188,15,"props"],[204,26,188,10],[204,27,188,21,"onResponderTerminate"],[204,47,188,10],[204,48,188,42,"call"],[204,52,188,10],[204,53,188,47],[204,59,188,10],[204,61,188,53,"event"],[204,66,188,10],[205,0,189,9],[206,0,190,7],[206,11,154,11],[207,0,191,6,"onResponderTerminationRequest"],[207,10,191,6,"onResponderTerminationRequest"],[207,39,191,35],[207,41,191,37],[207,82,191,52],[208,0,191,52],[208,16,192,15,"onResponderTerminationRequest"],[208,45,191,52],[208,48,192,48],[208,54,192,52],[208,55,192,53,"props"],[208,60,191,52],[208,61,192,15,"onResponderTerminationRequest"],[208,90,191,52],[210,0,193,8],[210,16,193,12],[210,17,193,13,"nullthrows"],[210,27,193,23],[210,28,193,24],[210,34,193,28],[210,35,193,29,"touchableHandleResponderTerminationRequest"],[210,77,193,23],[210,78,193,13],[210,80,193,8],[210,82,193,76],[211,0,194,10],[211,21,194,17],[211,26,194,10],[212,0,195,9],[214,0,196,8],[214,16,196,12,"onResponderTerminationRequest"],[214,45,196,41],[214,49,196,45],[214,53,196,8],[214,55,196,51],[215,0,197,10],[215,21,197,17],[215,25,197,10],[216,0,198,9],[218,0,199,8],[218,19,199,15,"onResponderTerminationRequest"],[218,48,199,44],[218,50,199,8],[219,0,200,7],[220,0,154,11],[220,9,154,4],[221,0,202,3],[224,45,207,31],[225,0,207,31],[227,0,208,4],[227,12,208,8],[227,17,208,13,"touchableGetPressRectOffset"],[227,44,208,8],[227,48,208,44],[227,52,208,4],[227,54,208,50],[228,0,209,6],[229,0,210,5],[231,0,211,4],[231,13,211,9],[231,17,211,15,"key"],[231,20,211,4],[231,24,211,22,"Touchable"],[231,33,211,31],[231,34,211,32,"Mixin"],[231,39,211,4],[231,41,211,39],[232,0,212,6],[232,14,212,10],[232,21,212,17,"Touchable"],[232,30,212,26],[232,31,212,27,"Mixin"],[232,36,212,17],[232,37,212,33,"key"],[232,40,212,17],[232,41,212,10],[232,46,212,42],[232,56,212,6],[232,58,212,54],[233,0,213,9],[233,16,213,8],[233,17,213,20,"key"],[233,20,213,8],[233,24,213,27,"Touchable"],[233,33,213,36],[233,34,213,37,"Mixin"],[233,39,213,27],[233,40,213,43,"key"],[233,43,213,27],[233,45,213,48,"bind"],[233,49,213,27],[233,50,213,53],[233,54,213,27],[233,55,213,8],[234,0,214,7],[235,0,215,5],[237,0,216,4],[237,13,216,9,"touchableHandleActivePressIn"],[237,41,216,4],[237,44,216,40],[237,56,216,52],[238,0,217,6],[238,14,217,10],[238,15,217,11],[238,21,217,15],[238,22,217,16,"props"],[238,27,217,11],[238,28,217,22,"suppressHighlighting"],[238,48,217,10],[238,52,217,46,"isTouchable"],[238,63,217,57],[238,64,217,58],[238,70,217,62],[238,71,217,63,"props"],[238,76,217,57],[238,77,217,6],[238,79,217,71],[239,0,218,8],[239,12,218,8],[239,18,218,12],[239,19,218,13,"setState"],[239,27,218,8],[239,28,218,22],[240,0,218,23,"isHighlighted"],[240,14,218,23,"isHighlighted"],[240,27,218,36],[240,29,218,38],[241,0,218,22],[241,13,218,8],[242,0,219,7],[243,0,220,5],[243,9,216,4],[245,0,221,4],[245,13,221,9,"touchableHandleActivePressOut"],[245,42,221,4],[245,45,221,41],[245,57,221,53],[246,0,222,6],[246,14,222,10],[246,15,222,11],[246,21,222,15],[246,22,222,16,"props"],[246,27,222,11],[246,28,222,22,"suppressHighlighting"],[246,48,222,10],[246,52,222,46,"isTouchable"],[246,63,222,57],[246,64,222,58],[246,70,222,62],[246,71,222,63,"props"],[246,76,222,57],[246,77,222,6],[246,79,222,71],[247,0,223,8],[247,12,223,8],[247,18,223,12],[247,19,223,13,"setState"],[247,27,223,8],[247,28,223,22],[248,0,223,23,"isHighlighted"],[248,14,223,23,"isHighlighted"],[248,27,223,36],[248,29,223,38],[249,0,223,22],[249,13,223,8],[250,0,224,7],[251,0,225,5],[251,9,221,4],[253,0,226,4],[253,13,226,9,"touchableHandlePress"],[253,33,226,4],[253,36,226,32],[253,46,226,33,"event"],[253,51,226,32],[253,53,226,61],[254,0,227,6],[254,14,227,10],[254,20,227,14],[254,21,227,15,"props"],[254,26,227,10],[254,27,227,21,"onPress"],[254,34,227,10],[254,38,227,32],[254,42,227,6],[254,44,227,38],[255,0,228,8],[255,12,228,8],[255,18,228,12],[255,19,228,13,"props"],[255,24,228,8],[255,25,228,19,"onPress"],[255,32,228,8],[255,33,228,27,"event"],[255,38,228,8],[256,0,229,7],[257,0,230,5],[257,9,226,4],[259,0,231,4],[259,13,231,9,"touchableHandleLongPress"],[259,37,231,4],[259,40,231,36],[259,50,231,37,"event"],[259,55,231,36],[259,57,231,65],[260,0,232,6],[260,14,232,10],[260,20,232,14],[260,21,232,15,"props"],[260,26,232,10],[260,27,232,21,"onLongPress"],[260,38,232,10],[260,42,232,36],[260,46,232,6],[260,48,232,42],[261,0,233,8],[261,12,233,8],[261,18,233,12],[261,19,233,13,"props"],[261,24,233,8],[261,25,233,19,"onLongPress"],[261,36,233,8],[261,37,233,31,"event"],[261,42,233,8],[262,0,234,7],[263,0,235,5],[263,9,231,4],[265,0,236,4],[265,13,236,9,"touchableGetPressRectOffset"],[265,40,236,4],[265,43,236,39],[266,0,236,39],[266,17,237,6],[266,23,237,10],[266,24,237,11,"props"],[266,29,237,6],[266,30,237,17,"pressRetentionOffset"],[266,50,237,6],[266,54,237,41],[266,58,237,6],[266,61,238,10,"PRESS_RECT_OFFSET"],[266,78,237,6],[266,81,239,10],[266,87,239,14],[266,88,239,15,"props"],[266,93,239,10],[266,94,239,21,"pressRetentionOffset"],[266,114,236,39],[267,0,236,39],[267,9,236,4],[268,0,240,3],[271,47,104,34,"nextProps"],[271,56],[271,58,104,52,"prevState"],[271,67],[271,69,104,78],[272,0,105,4],[272,15,105,11,"prevState"],[272,24,105,20],[272,25,105,21,"responseHandlers"],[272,41,105,11],[272,45,105,41],[272,49,105,11],[272,53,105,49,"isTouchable"],[272,64,105,60],[272,65,105,61,"nextProps"],[272,74,105,60],[272,75,105,11],[272,96,107,13,"prevState"],[272,105,105,11],[273,0,108,10,"responseHandlers"],[273,10,108,10,"responseHandlers"],[273,26,108,26],[273,28,108,28,"prevState"],[273,37,108,37],[273,38,108,38,"createResponderHandlers"],[273,61,108,28],[274,0,105,11],[274,13,110,8],[274,17,105,4],[275,0,111,3],[279,4,76,28,"React"],[279,9,76,33],[279,10,76,34,"Component"],[279,19],[281,0,76,6,"TouchableText"],[281,2,76,6,"TouchableText"],[281,15],[281,16,77,9,"defaultProps"],[281,28],[281,31,77,24],[282,0,78,4,"accessible"],[282,4,78,4,"accessible"],[282,14,78,14],[282,16,78,16],[282,20,77,24],[283,0,79,4,"allowFontScaling"],[283,4,79,4,"allowFontScaling"],[283,20,79,20],[283,22,79,22],[283,26,77,24],[284,0,80,4,"ellipsizeMode"],[284,4,80,4,"ellipsizeMode"],[284,17,80,17],[284,19,80,19],[285,0,77,24],[285,3],[286,0,76,6,"TouchableText"],[286,2,76,6,"TouchableText"],[286,15],[286,16,113,9,"viewConfig"],[286,26],[286,29,113,22,"viewConfig"],[286,39],[289,0,243,0],[289,6,243,6,"isTouchable"],[289,17,243,17],[289,20,243,20],[289,29,243,6,"isTouchable"],[289,40,243,20],[289,41,243,21,"props"],[289,46,243,20],[290,0,243,20],[290,11,244,2,"props"],[290,16,244,7],[290,17,244,8,"onPress"],[290,24,244,2],[290,28,244,19],[290,32,244,2],[290,36,245,2,"props"],[290,41,245,7],[290,42,245,8,"onLongPress"],[290,53,245,2],[290,57,245,23],[290,61,244,2],[290,65,246,2,"props"],[290,70,246,7],[290,71,246,8,"onStartShouldSetResponder"],[290,96,246,2],[290,100,246,37],[290,104,243,20],[291,0,243,20],[291,3,243,0],[293,0,248,0],[293,6,248,6,"RCTText"],[293,13,248,13],[293,16,248,16,"createReactNativeComponentClass"],[293,47,248,47],[293,48,249,2,"viewConfig"],[293,58,249,12],[293,59,249,13,"uiViewClassName"],[293,74,248,47],[293,76,250,2],[294,0,250,2],[294,11,250,8,"viewConfig"],[294,21,250,2],[295,0,250,2],[295,3,248,47],[295,4,248,0],[296,0,253,0],[296,6,253,6,"RCTVirtualText"],[296,20,253,20],[296,23,254,2,"UIManager"],[296,32,254,11],[296,33,254,12,"RCTVirtualText"],[296,47,254,2],[296,51,254,30],[296,55,254,2],[296,58,255,6,"RCTText"],[296,65,254,2],[296,68,256,6,"createReactNativeComponentClass"],[296,99,256,37],[296,100,256,38],[296,116,256,37],[296,118,256,56],[297,0,256,56],[297,11,256,63],[298,0,257,8,"validAttributes"],[298,6,257,8,"validAttributes"],[298,21,257,23],[298,41,258,13,"ReactNativeViewAttributes"],[298,66,258,38],[298,67,258,39,"UIView"],[298,73,257,23],[299,0,259,10,"isHighlighted"],[299,8,259,10,"isHighlighted"],[299,21,259,23],[299,23,259,25],[300,0,257,23],[300,8,256,63],[301,0,261,8,"uiViewClassName"],[301,6,261,8,"uiViewClassName"],[301,21,261,23],[301,23,261,25],[302,0,256,63],[302,5,256,56],[303,0,256,56],[303,3,256,37],[303,4,253,0],[305,0,264,0],[305,6,264,6,"Text"],[305,10,264,10],[305,13,264,13],[305,22,264,6,"Text"],[305,26,264,13],[305,27,265,2,"props"],[305,32,264,13],[305,34,266,2,"forwardedRef"],[305,46,264,13],[305,48,267,5],[306,0,268,2],[306,11,268,9],[306,31,268,10],[306,44,268,9],[306,59,268,28,"props"],[306,64,268,9],[307,0,268,35],[307,6,268,35],[307,18,268,47],[307,20,268,49,"forwardedRef"],[307,32,268,9],[308,0,268,9],[309,0,268,9],[310,0,268,9],[311,0,268,9],[312,0,268,9],[312,7,268,2],[313,0,269,1],[313,3,264,0],[315,0,271,0],[315,6,271,6,"TextToExport"],[315,18,271,18],[315,21,271,21,"React"],[315,26,271,26],[315,27,271,27,"forwardRef"],[315,37,271,21],[315,38,271,38,"Text"],[315,42,271,21],[315,43,271,0],[316,0,274,0,"TextToExport"],[316,2,274,0,"TextToExport"],[316,14,274,12],[316,15,274,13,"propTypes"],[316,24,274,0],[316,27,274,25,"TextPropTypes"],[316,40,274,0],[317,0,276,0,"module"],[317,2,276,0,"module"],[317,8,276,6],[317,9,276,7,"exports"],[317,16,276,0],[317,19,276,18,"TextToExport"],[317,31,276,0]]},"type":"js/module"}]}