{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"../base","data":{"isAsync":false}},{"name":"fbjs/lib/invariant","data":{"isAsync":false}},{"name":"../core/AnimatedNode","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = interpolate;\n  exports.Extrapolate = void 0;\n\n  var _base = _$$_REQUIRE(_dependencyMap[1], \"../base\");\n\n  var _invariant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"fbjs/lib/invariant\"));\n\n  var _AnimatedNode = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"../core/AnimatedNode\"));\n\n  function interpolateInternalSingle(value, inputRange, outputRange, offset) {\n    var inS = inputRange[offset];\n    var inE = inputRange[offset + 1];\n    var outS = outputRange[offset];\n    var outE = outputRange[offset + 1];\n    var progress = (0, _base.divide)((0, _base.sub)(value, inS), (0, _base.sub)(inE, inS));\n    return (0, _base.add)(outS, (0, _base.multiply)(progress, (0, _base.sub)(outE, outS)));\n  }\n\n  function interpolateInternal(value, inputRange, outputRange) {\n    var offset = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n\n    if (inputRange.length - offset === 2) {\n      return interpolateInternalSingle(value, inputRange, outputRange, offset);\n    }\n\n    return (0, _base.cond)((0, _base.lessThan)(value, inputRange[offset + 1]), interpolateInternalSingle(value, inputRange, outputRange, offset), interpolateInternal(value, inputRange, outputRange, offset + 1));\n  }\n\n  var Extrapolate = {\n    EXTEND: 'extend',\n    CLAMP: 'clamp',\n    IDENTITY: 'identity'\n  };\n  exports.Extrapolate = Extrapolate;\n\n  function checkNonDecreasing(name, arr) {\n    for (var i = 1; i < arr.length; ++i) {\n      if (arr[i] instanceof _AnimatedNode.default || arr[i - 1] instanceof _AnimatedNode.default) continue;\n      (0, _invariant.default)(arr[i] >= arr[i - 1], '%s must be monotonically non-decreasing. (%s)', name, arr);\n    }\n  }\n\n  function checkMinElements(name, arr) {\n    (0, _invariant.default)(arr.length >= 2, '%s must have at least 2 elements. (%s)', name, arr);\n  }\n\n  function checkValidNumbers(name, arr) {\n    for (var i = 0; i < arr.length; i++) {\n      if (arr[i] instanceof _AnimatedNode.default) continue;\n      (0, _invariant.default)(Number.isFinite(arr[i]), '%s cannot include %s. (%s)', name, arr[i], arr);\n    }\n  }\n\n  function interpolate(value, config) {\n    var inputRange = config.inputRange,\n        outputRange = config.outputRange,\n        _config$extrapolate = config.extrapolate,\n        extrapolate = _config$extrapolate === void 0 ? Extrapolate.EXTEND : _config$extrapolate,\n        extrapolateLeft = config.extrapolateLeft,\n        extrapolateRight = config.extrapolateRight;\n    checkMinElements('inputRange', inputRange);\n    checkValidNumbers('inputRange', inputRange);\n    checkMinElements('outputRange', outputRange);\n    checkValidNumbers('outputRange', outputRange);\n    checkNonDecreasing('inputRange', inputRange);\n    (0, _invariant.default)(inputRange.length === outputRange.length, 'inputRange and outputRange must be the same length.');\n    var left = extrapolateLeft || extrapolate;\n    var right = extrapolateRight || extrapolate;\n    var output = interpolateInternal(value, inputRange, outputRange);\n\n    if (left === Extrapolate.EXTEND) {} else if (left === Extrapolate.CLAMP) {\n      output = (0, _base.cond)((0, _base.lessThan)(value, inputRange[0]), outputRange[0], output);\n    } else if (left === Extrapolate.IDENTITY) {\n      output = (0, _base.cond)((0, _base.lessThan)(value, inputRange[0]), value, output);\n    }\n\n    if (right === Extrapolate.EXTEND) {} else if (right === Extrapolate.CLAMP) {\n      output = (0, _base.cond)((0, _base.greaterThan)(value, inputRange[inputRange.length - 1]), outputRange[outputRange.length - 1], output);\n    } else if (right === Extrapolate.IDENTITY) {\n      output = (0, _base.cond)((0, _base.greaterThan)(value, inputRange[inputRange.length - 1]), value, output);\n    }\n\n    return output;\n  }\n});","map":[[10,0,1,0],[12,0,10,0],[14,0,11,0],[16,0,13,0],[16,11,13,9,"interpolateInternalSingle"],[16,36,13,0],[16,37,13,35,"value"],[16,42,13,0],[16,44,13,42,"inputRange"],[16,54,13,0],[16,56,13,54,"outputRange"],[16,67,13,0],[16,69,13,67,"offset"],[16,75,13,0],[16,77,13,75],[17,0,14,2],[17,8,14,8,"inS"],[17,11,14,11],[17,14,14,14,"inputRange"],[17,24,14,24],[17,25,14,25,"offset"],[17,31,14,24],[17,32,14,2],[18,0,15,2],[18,8,15,8,"inE"],[18,11,15,11],[18,14,15,14,"inputRange"],[18,24,15,24],[18,25,15,25,"offset"],[18,31,15,31],[18,34,15,34],[18,35,15,24],[18,36,15,2],[19,0,16,2],[19,8,16,8,"outS"],[19,12,16,12],[19,15,16,15,"outputRange"],[19,26,16,26],[19,27,16,27,"offset"],[19,33,16,26],[19,34,16,2],[20,0,17,2],[20,8,17,8,"outE"],[20,12,17,12],[20,15,17,15,"outputRange"],[20,26,17,26],[20,27,17,27,"offset"],[20,33,17,33],[20,36,17,36],[20,37,17,26],[20,38,17,2],[21,0,18,2],[21,8,18,8,"progress"],[21,16,18,16],[21,19,18,19],[21,37,18,26],[21,52,18,30,"value"],[21,57,18,26],[21,59,18,37,"inS"],[21,62,18,26],[21,63,18,19],[21,65,18,43],[21,80,18,47,"inE"],[21,83,18,43],[21,85,18,52,"inS"],[21,88,18,43],[21,89,18,19],[21,90,18,2],[22,0,19,2],[22,11,19,9],[22,26,19,13,"outS"],[22,30,19,9],[22,32,19,19],[22,52,19,28,"progress"],[22,60,19,19],[22,62,19,38],[22,77,19,42,"outE"],[22,81,19,38],[22,83,19,48,"outS"],[22,87,19,38],[22,88,19,19],[22,89,19,9],[22,90,19,2],[23,0,20,1],[25,0,22,0],[25,11,22,9,"interpolateInternal"],[25,30,22,0],[25,31,22,29,"value"],[25,36,22,0],[25,38,22,36,"inputRange"],[25,48,22,0],[25,50,22,48,"outputRange"],[25,61,22,0],[25,63,22,73],[26,0,22,73],[26,8,22,61,"offset"],[26,14,22,73],[26,85,22,70],[26,86,22,73],[28,0,23,2],[28,8,23,6,"inputRange"],[28,18,23,16],[28,19,23,17,"length"],[28,25,23,6],[28,28,23,26,"offset"],[28,34,23,6],[28,39,23,37],[28,40,23,2],[28,42,23,40],[29,0,24,4],[29,13,24,11,"interpolateInternalSingle"],[29,38,24,36],[29,39,24,37,"value"],[29,44,24,36],[29,46,24,44,"inputRange"],[29,56,24,36],[29,58,24,56,"outputRange"],[29,69,24,36],[29,71,24,69,"offset"],[29,77,24,36],[29,78,24,4],[30,0,25,3],[32,0,26,2],[32,11,26,9],[32,27,27,4],[32,47,27,13,"value"],[32,52,27,4],[32,54,27,20,"inputRange"],[32,64,27,30],[32,65,27,31,"offset"],[32,71,27,37],[32,74,27,40],[32,75,27,30],[32,76,27,4],[32,77,26,9],[32,79,28,4,"interpolateInternalSingle"],[32,104,28,29],[32,105,28,30,"value"],[32,110,28,29],[32,112,28,37,"inputRange"],[32,122,28,29],[32,124,28,49,"outputRange"],[32,135,28,29],[32,137,28,62,"offset"],[32,143,28,29],[32,144,26,9],[32,146,29,4,"interpolateInternal"],[32,165,29,23],[32,166,29,24,"value"],[32,171,29,23],[32,173,29,31,"inputRange"],[32,183,29,23],[32,185,29,43,"outputRange"],[32,196,29,23],[32,198,29,56,"offset"],[32,204,29,62],[32,207,29,65],[32,208,29,23],[32,209,26,9],[32,210,26,2],[33,0,31,1],[35,0,33,7],[35,6,33,13,"Extrapolate"],[35,17,33,24],[35,20,33,27],[36,0,34,2,"EXTEND"],[36,4,34,2,"EXTEND"],[36,10,34,8],[36,12,34,10],[36,20,33,27],[37,0,35,2,"CLAMP"],[37,4,35,2,"CLAMP"],[37,9,35,7],[37,11,35,9],[37,18,33,27],[38,0,36,2,"IDENTITY"],[38,4,36,2,"IDENTITY"],[38,12,36,10],[38,14,36,12],[39,0,33,27],[39,3,33,7],[42,0,39,0],[42,11,39,9,"checkNonDecreasing"],[42,29,39,0],[42,30,39,28,"name"],[42,34,39,0],[42,36,39,34,"arr"],[42,39,39,0],[42,41,39,39],[43,0,40,2],[43,9,40,7],[43,13,40,11,"i"],[43,14,40,12],[43,17,40,15],[43,18,40,2],[43,20,40,18,"i"],[43,21,40,19],[43,24,40,22,"arr"],[43,27,40,25],[43,28,40,26,"length"],[43,34,40,2],[43,36,40,34],[43,38,40,36,"i"],[43,39,40,2],[43,41,40,39],[44,0,42,4],[44,10,42,8,"arr"],[44,13,42,11],[44,14,42,12,"i"],[44,15,42,11],[44,16,42,8],[44,28,42,26,"AnimatedNode"],[44,49,42,8],[44,53,42,42,"arr"],[44,56,42,45],[44,57,42,46,"i"],[44,58,42,47],[44,61,42,50],[44,62,42,45],[44,63,42,42],[44,75,42,64,"AnimatedNode"],[44,96,42,4],[44,98,43,6],[45,0,44,4],[45,30,45,6,"arr"],[45,33,45,9],[45,34,45,10,"i"],[45,35,45,9],[45,36,45,6],[45,40,45,16,"arr"],[45,43,45,19],[45,44,45,20,"i"],[45,45,45,21],[45,48,45,24],[45,49,45,19],[45,50,44,4],[45,52,46,6],[45,99,44,4],[45,101,47,6,"name"],[45,105,44,4],[45,107,48,6,"arr"],[45,110,44,4],[46,0,50,3],[47,0,51,1],[49,0,53,0],[49,11,53,9,"checkMinElements"],[49,27,53,0],[49,28,53,26,"name"],[49,32,53,0],[49,34,53,32,"arr"],[49,37,53,0],[49,39,53,37],[50,0,54,2],[50,28,55,4,"arr"],[50,31,55,7],[50,32,55,8,"length"],[50,38,55,4],[50,42,55,18],[50,43,54,2],[50,45,56,4],[50,85,54,2],[50,87,57,4,"name"],[50,91,54,2],[50,93,58,4,"arr"],[50,96,54,2],[51,0,60,1],[53,0,62,0],[53,11,62,9,"checkValidNumbers"],[53,28,62,0],[53,29,62,27,"name"],[53,33,62,0],[53,35,62,33,"arr"],[53,38,62,0],[53,40,62,38],[54,0,63,2],[54,9,63,7],[54,13,63,11,"i"],[54,14,63,12],[54,17,63,15],[54,18,63,2],[54,20,63,18,"i"],[54,21,63,19],[54,24,63,22,"arr"],[54,27,63,25],[54,28,63,26,"length"],[54,34,63,2],[54,36,63,34,"i"],[54,37,63,35],[54,39,63,2],[54,41,63,39],[55,0,65,4],[55,10,65,8,"arr"],[55,13,65,11],[55,14,65,12,"i"],[55,15,65,11],[55,16,65,8],[55,28,65,26,"AnimatedNode"],[55,49,65,4],[55,51,65,40],[56,0,66,4],[56,30,67,6,"Number"],[56,36,67,12],[56,37,67,13,"isFinite"],[56,45,67,6],[56,46,67,22,"arr"],[56,49,67,25],[56,50,67,26,"i"],[56,51,67,25],[56,52,67,6],[56,53,66,4],[56,55,68,6],[56,83,66,4],[56,85,69,6,"name"],[56,89,66,4],[56,91,70,6,"arr"],[56,94,70,9],[56,95,70,10,"i"],[56,96,70,9],[56,97,66,4],[56,99,71,6,"arr"],[56,102,66,4],[57,0,73,3],[58,0,74,1],[60,0,76,15],[60,11,76,24,"interpolate"],[60,22,76,15],[60,23,76,36,"value"],[60,28,76,15],[60,30,76,43,"config"],[60,36,76,15],[60,38,76,51],[61,0,76,51],[61,8,78,4,"inputRange"],[61,18,76,51],[61,21,83,6,"config"],[61,27,76,51],[61,28,78,4,"inputRange"],[61,38,76,51],[62,0,76,51],[62,8,79,4,"outputRange"],[62,19,76,51],[62,22,83,6,"config"],[62,28,76,51],[62,29,79,4,"outputRange"],[62,40,76,51],[63,0,76,51],[63,30,83,6,"config"],[63,36,76,51],[63,37,80,4,"extrapolate"],[63,48,76,51],[64,0,76,51],[64,8,80,4,"extrapolate"],[64,19,76,51],[64,55,80,18,"Extrapolate"],[64,66,80,29],[64,67,80,30,"EXTEND"],[64,73,76,51],[65,0,76,51],[65,8,81,4,"extrapolateLeft"],[65,23,76,51],[65,26,83,6,"config"],[65,32,76,51],[65,33,81,4,"extrapolateLeft"],[65,48,76,51],[66,0,76,51],[66,8,82,4,"extrapolateRight"],[66,24,76,51],[66,27,83,6,"config"],[66,33,76,51],[66,34,82,4,"extrapolateRight"],[66,50,76,51],[67,0,84,2,"checkMinElements"],[67,4,84,2,"checkMinElements"],[67,20,84,18],[67,21,84,19],[67,33,84,18],[67,35,84,33,"inputRange"],[67,45,84,18],[67,46,84,2],[68,0,85,2,"checkValidNumbers"],[68,4,85,2,"checkValidNumbers"],[68,21,85,19],[68,22,85,20],[68,34,85,19],[68,36,85,34,"inputRange"],[68,46,85,19],[68,47,85,2],[69,0,86,2,"checkMinElements"],[69,4,86,2,"checkMinElements"],[69,20,86,18],[69,21,86,19],[69,34,86,18],[69,36,86,34,"outputRange"],[69,47,86,18],[69,48,86,2],[70,0,87,2,"checkValidNumbers"],[70,4,87,2,"checkValidNumbers"],[70,21,87,19],[70,22,87,20],[70,35,87,19],[70,37,87,35,"outputRange"],[70,48,87,19],[70,49,87,2],[71,0,88,2,"checkNonDecreasing"],[71,4,88,2,"checkNonDecreasing"],[71,22,88,20],[71,23,88,21],[71,35,88,20],[71,37,88,35,"inputRange"],[71,47,88,20],[71,48,88,2],[72,0,89,2],[72,28,90,4,"inputRange"],[72,38,90,14],[72,39,90,15,"length"],[72,45,90,4],[72,50,90,26,"outputRange"],[72,61,90,37],[72,62,90,38,"length"],[72,68,89,2],[72,70,91,4],[72,123,89,2],[73,0,94,2],[73,8,94,8,"left"],[73,12,94,12],[73,15,94,15,"extrapolateLeft"],[73,30,94,30],[73,34,94,34,"extrapolate"],[73,45,94,2],[74,0,95,2],[74,8,95,8,"right"],[74,13,95,13],[74,16,95,16,"extrapolateRight"],[74,32,95,32],[74,36,95,36,"extrapolate"],[74,47,95,2],[75,0,96,2],[75,8,96,6,"output"],[75,14,96,12],[75,17,96,15,"interpolateInternal"],[75,36,96,34],[75,37,96,35,"value"],[75,42,96,34],[75,44,96,42,"inputRange"],[75,54,96,34],[75,56,96,54,"outputRange"],[75,67,96,34],[75,68,96,2],[77,0,98,2],[77,8,98,6,"left"],[77,12,98,10],[77,17,98,15,"Extrapolate"],[77,28,98,26],[77,29,98,27,"EXTEND"],[77,35,98,2],[77,37,98,35],[77,38,99,3],[77,39,98,2],[77,45,99,9],[77,49,99,13,"left"],[77,53,99,17],[77,58,99,22,"Extrapolate"],[77,69,99,33],[77,70,99,34,"CLAMP"],[77,75,99,9],[77,77,99,41],[78,0,100,4,"output"],[78,6,100,4,"output"],[78,12,100,10],[78,15,100,13],[78,31,100,18],[78,51,100,27,"value"],[78,56,100,18],[78,58,100,34,"inputRange"],[78,68,100,44],[78,69,100,45],[78,70,100,44],[78,71,100,18],[78,72,100,13],[78,74,100,50,"outputRange"],[78,85,100,61],[78,86,100,62],[78,87,100,61],[78,88,100,13],[78,90,100,66,"output"],[78,96,100,13],[78,97,100,4],[79,0,101,3],[79,5,99,9],[79,11,101,9],[79,15,101,13,"left"],[79,19,101,17],[79,24,101,22,"Extrapolate"],[79,35,101,33],[79,36,101,34,"IDENTITY"],[79,44,101,9],[79,46,101,44],[80,0,102,4,"output"],[80,6,102,4,"output"],[80,12,102,10],[80,15,102,13],[80,31,102,18],[80,51,102,27,"value"],[80,56,102,18],[80,58,102,34,"inputRange"],[80,68,102,44],[80,69,102,45],[80,70,102,44],[80,71,102,18],[80,72,102,13],[80,74,102,50,"value"],[80,79,102,13],[80,81,102,57,"output"],[80,87,102,13],[80,88,102,4],[81,0,103,3],[83,0,105,2],[83,8,105,6,"right"],[83,13,105,11],[83,18,105,16,"Extrapolate"],[83,29,105,27],[83,30,105,28,"EXTEND"],[83,36,105,2],[83,38,105,36],[83,39,106,3],[83,40,105,2],[83,46,106,9],[83,50,106,13,"right"],[83,55,106,18],[83,60,106,23,"Extrapolate"],[83,71,106,34],[83,72,106,35,"CLAMP"],[83,77,106,9],[83,79,106,42],[84,0,107,4,"output"],[84,6,107,4,"output"],[84,12,107,10],[84,15,107,13],[84,31,108,6],[84,54,108,18,"value"],[84,59,108,6],[84,61,108,25,"inputRange"],[84,71,108,35],[84,72,108,36,"inputRange"],[84,82,108,46],[84,83,108,47,"length"],[84,89,108,36],[84,92,108,56],[84,93,108,35],[84,94,108,6],[84,95,107,13],[84,97,109,6,"outputRange"],[84,108,109,17],[84,109,109,18,"outputRange"],[84,120,109,29],[84,121,109,30,"length"],[84,127,109,18],[84,130,109,39],[84,131,109,17],[84,132,107,13],[84,134,110,6,"output"],[84,140,107,13],[84,141,107,4],[85,0,112,3],[85,5,106,9],[85,11,112,9],[85,15,112,13,"right"],[85,20,112,18],[85,25,112,23,"Extrapolate"],[85,36,112,34],[85,37,112,35,"IDENTITY"],[85,45,112,9],[85,47,112,45],[86,0,113,4,"output"],[86,6,113,4,"output"],[86,12,113,10],[86,15,113,13],[86,31,114,6],[86,54,114,18,"value"],[86,59,114,6],[86,61,114,25,"inputRange"],[86,71,114,35],[86,72,114,36,"inputRange"],[86,82,114,46],[86,83,114,47,"length"],[86,89,114,36],[86,92,114,56],[86,93,114,35],[86,94,114,6],[86,95,113,13],[86,97,115,6,"value"],[86,102,113,13],[86,104,116,6,"output"],[86,110,113,13],[86,111,113,4],[87,0,118,3],[89,0,120,2],[89,11,120,9,"output"],[89,17,120,2],[90,0,121,1]]},"type":"js/module"}]}