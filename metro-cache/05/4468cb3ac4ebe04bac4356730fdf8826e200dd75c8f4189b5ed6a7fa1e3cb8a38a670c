{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/inherits","data":{"isAsync":false}},{"name":"./AnimatedNode","data":{"isAsync":false}},{"name":"../utils","data":{"isAsync":false}},{"name":"fbjs/lib/invariant","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/classCallCheck\"));\n\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/createClass\"));\n\n  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n\n  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/getPrototypeOf\"));\n\n  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/inherits\"));\n\n  var _AnimatedNode2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"./AnimatedNode\"));\n\n  var _utils = _$$_REQUIRE(_dependencyMap[7], \"../utils\");\n\n  var _invariant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8], \"fbjs/lib/invariant\"));\n\n  function reduce(fn) {\n    return function (input) {\n      return input.reduce(function (a, b) {\n        return fn((0, _utils.val)(a), (0, _utils.val)(b));\n      });\n    };\n  }\n\n  function reduceFrom(fn, initialValue) {\n    return function (input) {\n      return input.reduce(function (a, b) {\n        return fn((0, _utils.val)(a), (0, _utils.val)(b));\n      }, initialValue);\n    };\n  }\n\n  function infix(fn) {\n    return function (input) {\n      return fn((0, _utils.val)(input[0]), (0, _utils.val)(input[1]));\n    };\n  }\n\n  function single(fn) {\n    return function (input) {\n      return fn((0, _utils.val)(input[0]));\n    };\n  }\n\n  var OPERATIONS = {\n    add: reduce(function (a, b) {\n      return a + b;\n    }),\n    sub: reduce(function (a, b) {\n      return a - b;\n    }),\n    multiply: reduce(function (a, b) {\n      return a * b;\n    }),\n    divide: reduce(function (a, b) {\n      return a / b;\n    }),\n    pow: reduce(function (a, b) {\n      return Math.pow(a, b);\n    }),\n    modulo: reduce(function (a, b) {\n      return (a % b + b) % b;\n    }),\n    sqrt: single(function (a) {\n      return Math.sqrt(a);\n    }),\n    sin: single(function (a) {\n      return Math.sin(a);\n    }),\n    cos: single(function (a) {\n      return Math.cos(a);\n    }),\n    exp: single(function (a) {\n      return Math.exp(a);\n    }),\n    and: reduceFrom(function (a, b) {\n      return a && b;\n    }, true),\n    or: reduceFrom(function (a, b) {\n      return a || b;\n    }, false),\n    not: single(function (a) {\n      return !a;\n    }),\n    defined: single(function (a) {\n      return a !== null && a !== undefined && !isNaN(a);\n    }),\n    lessThan: infix(function (a, b) {\n      return a < b;\n    }),\n    eq: infix(function (a, b) {\n      return a == b;\n    }),\n    greaterThan: infix(function (a, b) {\n      return a > b;\n    }),\n    lessOrEq: infix(function (a, b) {\n      return a <= b;\n    }),\n    greaterOrEq: infix(function (a, b) {\n      return a >= b;\n    }),\n    neq: infix(function (a, b) {\n      return a != b;\n    })\n  };\n\n  var AnimatedOperator = function (_AnimatedNode) {\n    (0, _inherits2.default)(AnimatedOperator, _AnimatedNode);\n\n    function AnimatedOperator(operator, input) {\n      var _this;\n\n      (0, _classCallCheck2.default)(this, AnimatedOperator);\n      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(AnimatedOperator).call(this, {\n        type: 'op',\n        op: operator,\n        input: input.map(function (n) {\n          return n.__nodeID;\n        })\n      }, input));\n      _this._op = operator;\n      _this._input = input;\n      return _this;\n    }\n\n    (0, _createClass2.default)(AnimatedOperator, [{\n      key: \"__onEvaluate\",\n      value: function __onEvaluate() {\n        if (!this._operation) {\n          this._operation = OPERATIONS[this._op];\n          (0, _invariant.default)(this._operation, \"Illegal operator '%s'\", this._op);\n        }\n\n        return this._operation(this._input);\n      }\n    }]);\n    return AnimatedOperator;\n  }(_AnimatedNode2.default);\n\n  exports.default = AnimatedOperator;\n});","map":[[19,0,1,0],[21,0,2,0],[23,0,4,0],[25,0,6,0],[25,11,6,9,"reduce"],[25,17,6,0],[25,18,6,16,"fn"],[25,20,6,0],[25,22,6,20],[26,0,7,2],[26,11,7,9],[26,21,7,9,"input"],[26,26,7,14],[27,0,7,14],[27,13,7,18,"input"],[27,18,7,23],[27,19,7,24,"reduce"],[27,25,7,18],[27,26,7,31],[27,36,7,32,"a"],[27,37,7,31],[27,39,7,35,"b"],[27,40,7,31],[28,0,7,31],[28,15,7,41,"fn"],[28,17,7,43],[28,18,7,44],[28,34,7,48,"a"],[28,35,7,44],[28,36,7,43],[28,38,7,52],[28,54,7,56,"b"],[28,55,7,52],[28,56,7,43],[28,57,7,31],[29,0,7,31],[29,7,7,18],[29,8,7,14],[30,0,7,14],[30,5,7,2],[31,0,8,1],[33,0,10,0],[33,11,10,9,"reduceFrom"],[33,21,10,0],[33,22,10,20,"fn"],[33,24,10,0],[33,26,10,24,"initialValue"],[33,38,10,0],[33,40,10,38],[34,0,11,2],[34,11,11,9],[34,21,11,9,"input"],[34,26,11,14],[35,0,11,14],[35,13,11,18,"input"],[35,18,11,23],[35,19,11,24,"reduce"],[35,25,11,18],[35,26,11,31],[35,36,11,32,"a"],[35,37,11,31],[35,39,11,35,"b"],[35,40,11,31],[36,0,11,31],[36,15,11,41,"fn"],[36,17,11,43],[36,18,11,44],[36,34,11,48,"a"],[36,35,11,44],[36,36,11,43],[36,38,11,52],[36,54,11,56,"b"],[36,55,11,52],[36,56,11,43],[36,57,11,31],[37,0,11,31],[37,7,11,18],[37,9,11,61,"initialValue"],[37,21,11,18],[37,22,11,14],[38,0,11,14],[38,5,11,2],[39,0,12,1],[41,0,14,0],[41,11,14,9,"infix"],[41,16,14,0],[41,17,14,15,"fn"],[41,19,14,0],[41,21,14,19],[42,0,15,2],[42,11,15,9],[42,21,15,9,"input"],[42,26,15,14],[43,0,15,14],[43,13,15,18,"fn"],[43,15,15,20],[43,16,15,21],[43,32,15,25,"input"],[43,37,15,30],[43,38,15,31],[43,39,15,30],[43,40,15,21],[43,41,15,20],[43,43,15,36],[43,59,15,40,"input"],[43,64,15,45],[43,65,15,46],[43,66,15,45],[43,67,15,36],[43,68,15,20],[43,69,15,14],[44,0,15,14],[44,5,15,2],[45,0,16,1],[47,0,18,0],[47,11,18,9,"single"],[47,17,18,0],[47,18,18,16,"fn"],[47,20,18,0],[47,22,18,20],[48,0,19,2],[48,11,19,9],[48,21,19,9,"input"],[48,26,19,14],[49,0,19,14],[49,13,19,18,"fn"],[49,15,19,20],[49,16,19,21],[49,32,19,25,"input"],[49,37,19,30],[49,38,19,31],[49,39,19,30],[49,40,19,21],[49,41,19,20],[49,42,19,14],[50,0,19,14],[50,5,19,2],[51,0,20,1],[53,0,22,0],[53,6,22,6,"OPERATIONS"],[53,16,22,16],[53,19,22,19],[54,0,24,2,"add"],[54,4,24,2,"add"],[54,7,24,5],[54,9,24,7,"reduce"],[54,15,24,13],[54,16,24,14],[54,26,24,15,"a"],[54,27,24,14],[54,29,24,18,"b"],[54,30,24,14],[55,0,24,14],[55,13,24,24,"a"],[55,14,24,25],[55,17,24,28,"b"],[55,18,24,14],[56,0,24,14],[56,5,24,13],[56,6,22,19],[57,0,25,2,"sub"],[57,4,25,2,"sub"],[57,7,25,5],[57,9,25,7,"reduce"],[57,15,25,13],[57,16,25,14],[57,26,25,15,"a"],[57,27,25,14],[57,29,25,18,"b"],[57,30,25,14],[58,0,25,14],[58,13,25,24,"a"],[58,14,25,25],[58,17,25,28,"b"],[58,18,25,14],[59,0,25,14],[59,5,25,13],[59,6,22,19],[60,0,26,2,"multiply"],[60,4,26,2,"multiply"],[60,12,26,10],[60,14,26,12,"reduce"],[60,20,26,18],[60,21,26,19],[60,31,26,20,"a"],[60,32,26,19],[60,34,26,23,"b"],[60,35,26,19],[61,0,26,19],[61,13,26,29,"a"],[61,14,26,30],[61,17,26,33,"b"],[61,18,26,19],[62,0,26,19],[62,5,26,18],[62,6,22,19],[63,0,27,2,"divide"],[63,4,27,2,"divide"],[63,10,27,8],[63,12,27,10,"reduce"],[63,18,27,16],[63,19,27,17],[63,29,27,18,"a"],[63,30,27,17],[63,32,27,21,"b"],[63,33,27,17],[64,0,27,17],[64,13,27,27,"a"],[64,14,27,28],[64,17,27,31,"b"],[64,18,27,17],[65,0,27,17],[65,5,27,16],[65,6,22,19],[66,0,28,2,"pow"],[66,4,28,2,"pow"],[66,7,28,5],[66,9,28,7,"reduce"],[66,15,28,13],[66,16,28,14],[66,26,28,15,"a"],[66,27,28,14],[66,29,28,18,"b"],[66,30,28,14],[67,0,28,14],[67,13,28,24,"Math"],[67,17,28,28],[67,18,28,29,"pow"],[67,21,28,24],[67,22,28,33,"a"],[67,23,28,24],[67,25,28,36,"b"],[67,26,28,24],[67,27,28,14],[68,0,28,14],[68,5,28,13],[68,6,22,19],[69,0,29,2,"modulo"],[69,4,29,2,"modulo"],[69,10,29,8],[69,12,29,10,"reduce"],[69,18,29,16],[69,19,29,17],[69,29,29,18,"a"],[69,30,29,17],[69,32,29,21,"b"],[69,33,29,17],[70,0,29,17],[70,13,29,27],[70,14,29,29,"a"],[70,15,29,30],[70,18,29,33,"b"],[70,19,29,28],[70,22,29,38,"b"],[70,23,29,27],[70,27,29,43,"b"],[70,28,29,17],[71,0,29,17],[71,5,29,16],[71,6,22,19],[72,0,30,2,"sqrt"],[72,4,30,2,"sqrt"],[72,8,30,6],[72,10,30,8,"single"],[72,16,30,14],[72,17,30,15],[72,27,30,15,"a"],[72,28,30,16],[73,0,30,16],[73,13,30,20,"Math"],[73,17,30,24],[73,18,30,25,"sqrt"],[73,22,30,20],[73,23,30,30,"a"],[73,24,30,20],[73,25,30,16],[74,0,30,16],[74,5,30,14],[74,6,22,19],[75,0,31,2,"sin"],[75,4,31,2,"sin"],[75,7,31,5],[75,9,31,7,"single"],[75,15,31,13],[75,16,31,14],[75,26,31,14,"a"],[75,27,31,15],[76,0,31,15],[76,13,31,19,"Math"],[76,17,31,23],[76,18,31,24,"sin"],[76,21,31,19],[76,22,31,28,"a"],[76,23,31,19],[76,24,31,15],[77,0,31,15],[77,5,31,13],[77,6,22,19],[78,0,32,2,"cos"],[78,4,32,2,"cos"],[78,7,32,5],[78,9,32,7,"single"],[78,15,32,13],[78,16,32,14],[78,26,32,14,"a"],[78,27,32,15],[79,0,32,15],[79,13,32,19,"Math"],[79,17,32,23],[79,18,32,24,"cos"],[79,21,32,19],[79,22,32,28,"a"],[79,23,32,19],[79,24,32,15],[80,0,32,15],[80,5,32,13],[80,6,22,19],[81,0,33,2,"exp"],[81,4,33,2,"exp"],[81,7,33,5],[81,9,33,7,"single"],[81,15,33,13],[81,16,33,14],[81,26,33,14,"a"],[81,27,33,15],[82,0,33,15],[82,13,33,19,"Math"],[82,17,33,23],[82,18,33,24,"exp"],[82,21,33,19],[82,22,33,28,"a"],[82,23,33,19],[82,24,33,15],[83,0,33,15],[83,5,33,13],[83,6,22,19],[84,0,36,2,"and"],[84,4,36,2,"and"],[84,7,36,5],[84,9,36,7,"reduceFrom"],[84,19,36,17],[84,20,36,18],[84,30,36,19,"a"],[84,31,36,18],[84,33,36,22,"b"],[84,34,36,18],[85,0,36,18],[85,13,36,28,"a"],[85,14,36,29],[85,18,36,33,"b"],[85,19,36,18],[86,0,36,18],[86,5,36,17],[86,7,36,36],[86,11,36,17],[86,12,22,19],[87,0,37,2,"or"],[87,4,37,2,"or"],[87,6,37,4],[87,8,37,6,"reduceFrom"],[87,18,37,16],[87,19,37,17],[87,29,37,18,"a"],[87,30,37,17],[87,32,37,21,"b"],[87,33,37,17],[88,0,37,17],[88,13,37,27,"a"],[88,14,37,28],[88,18,37,32,"b"],[88,19,37,17],[89,0,37,17],[89,5,37,16],[89,7,37,35],[89,12,37,16],[89,13,22,19],[90,0,38,2,"not"],[90,4,38,2,"not"],[90,7,38,5],[90,9,38,7,"single"],[90,15,38,13],[90,16,38,14],[90,26,38,14,"a"],[90,27,38,15],[91,0,38,15],[91,13,38,19],[91,14,38,20,"a"],[91,15,38,15],[92,0,38,15],[92,5,38,13],[92,6,22,19],[93,0,39,2,"defined"],[93,4,39,2,"defined"],[93,11,39,9],[93,13,39,11,"single"],[93,19,39,17],[93,20,39,18],[93,30,39,18,"a"],[93,31,39,19],[94,0,39,19],[94,13,39,23,"a"],[94,14,39,24],[94,19,39,29],[94,23,39,23],[94,27,39,37,"a"],[94,28,39,38],[94,33,39,43,"undefined"],[94,42,39,23],[94,46,39,56],[94,47,39,57,"isNaN"],[94,52,39,62],[94,53,39,63,"a"],[94,54,39,62],[94,55,39,19],[95,0,39,19],[95,5,39,17],[95,6,22,19],[96,0,42,2,"lessThan"],[96,4,42,2,"lessThan"],[96,12,42,10],[96,14,42,12,"infix"],[96,19,42,17],[96,20,42,18],[96,30,42,19,"a"],[96,31,42,18],[96,33,42,22,"b"],[96,34,42,18],[97,0,42,18],[97,13,42,28,"a"],[97,14,42,29],[97,17,42,32,"b"],[97,18,42,18],[98,0,42,18],[98,5,42,17],[98,6,22,19],[99,0,44,2,"eq"],[99,4,44,2,"eq"],[99,6,44,4],[99,8,44,6,"infix"],[99,13,44,11],[99,14,44,12],[99,24,44,13,"a"],[99,25,44,12],[99,27,44,16,"b"],[99,28,44,12],[100,0,44,12],[100,13,44,22,"a"],[100,14,44,23],[100,18,44,27,"b"],[100,19,44,12],[101,0,44,12],[101,5,44,11],[101,6,22,19],[102,0,45,2,"greaterThan"],[102,4,45,2,"greaterThan"],[102,15,45,13],[102,17,45,15,"infix"],[102,22,45,20],[102,23,45,21],[102,33,45,22,"a"],[102,34,45,21],[102,36,45,25,"b"],[102,37,45,21],[103,0,45,21],[103,13,45,31,"a"],[103,14,45,32],[103,17,45,35,"b"],[103,18,45,21],[104,0,45,21],[104,5,45,20],[104,6,22,19],[105,0,46,2,"lessOrEq"],[105,4,46,2,"lessOrEq"],[105,12,46,10],[105,14,46,12,"infix"],[105,19,46,17],[105,20,46,18],[105,30,46,19,"a"],[105,31,46,18],[105,33,46,22,"b"],[105,34,46,18],[106,0,46,18],[106,13,46,28,"a"],[106,14,46,29],[106,18,46,33,"b"],[106,19,46,18],[107,0,46,18],[107,5,46,17],[107,6,22,19],[108,0,47,2,"greaterOrEq"],[108,4,47,2,"greaterOrEq"],[108,15,47,13],[108,17,47,15,"infix"],[108,22,47,20],[108,23,47,21],[108,33,47,22,"a"],[108,34,47,21],[108,36,47,25,"b"],[108,37,47,21],[109,0,47,21],[109,13,47,31,"a"],[109,14,47,32],[109,18,47,36,"b"],[109,19,47,21],[110,0,47,21],[110,5,47,20],[110,6,22,19],[111,0,49,2,"neq"],[111,4,49,2,"neq"],[111,7,49,5],[111,9,49,7,"infix"],[111,14,49,12],[111,15,49,13],[111,25,49,14,"a"],[111,26,49,13],[111,28,49,17,"b"],[111,29,49,13],[112,0,49,13],[112,13,49,23,"a"],[112,14,49,24],[112,18,49,28,"b"],[112,19,49,13],[113,0,49,13],[113,5,49,12],[114,0,22,19],[114,3,22,0],[116,6,52,21,"AnimatedOperator"],[116,22],[119,0,57,2],[119,30,57,14,"operator"],[119,38,57,2],[119,40,57,24,"input"],[119,45,57,2],[119,47,57,31],[120,0,57,31],[122,0,57,31],[123,0,58,4],[123,120,59,6],[124,0,59,8,"type"],[124,8,59,8,"type"],[124,12,59,12],[124,14,59,14],[124,18,59,6],[125,0,59,20,"op"],[125,8,59,20,"op"],[125,10,59,22],[125,12,59,24,"operator"],[125,20,59,6],[126,0,59,34,"input"],[126,8,59,34,"input"],[126,13,59,39],[126,15,59,41,"input"],[126,20,59,46],[126,21,59,47,"map"],[126,24,59,41],[126,25,59,51],[126,35,59,51,"n"],[126,36,59,52],[127,0,59,52],[127,17,59,56,"n"],[127,18,59,57],[127,19,59,58,"__nodeID"],[127,27,59,52],[128,0,59,52],[128,9,59,41],[129,0,59,6],[129,7,58,4],[129,9,60,6,"input"],[129,14,58,4],[130,0,62,4],[130,12,62,9,"_op"],[130,15,62,4],[130,18,62,15,"operator"],[130,26,62,4],[131,0,63,4],[131,12,63,9,"_input"],[131,18,63,4],[131,21,63,18,"input"],[131,26,63,4],[132,0,57,31],[133,0,64,3],[137,37,66,17],[138,0,67,4],[138,12,67,8],[138,13,67,9],[138,18,67,14,"_operation"],[138,28,67,4],[138,30,67,26],[139,0,68,6],[139,15,68,11,"_operation"],[139,25,68,6],[139,28,68,24,"OPERATIONS"],[139,38,68,34],[139,39,68,35],[139,44,68,40,"_op"],[139,47,68,34],[139,48,68,6],[140,0,69,6],[140,34,69,16],[140,39,69,21,"_operation"],[140,49,69,6],[140,76,69,58],[140,81,69,63,"_op"],[140,84,69,6],[141,0,70,5],[143,0,71,4],[143,15,71,11],[143,20,71,16,"_operation"],[143,30,71,11],[143,31,71,27],[143,36,71,32,"_input"],[143,42,71,11],[143,43,71,4],[144,0,72,3],[147,4,52,46,"AnimatedNode"],[147,26]]},"type":"js/module"}]}