{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/objectSpread","data":{"isAsync":false}},{"name":"./RemoteLogging","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n\n  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/objectSpread\"));\n\n  var _RemoteLogging = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"./RemoteLogging\"));\n\n  function createRemoteConsole(originalConsole) {\n    var groupDepth = 0;\n    var enhancedConsole = Object.create(originalConsole);\n\n    _defineConsoleLogMethod('debug', 'info');\n\n    _defineConsoleLogMethod('log', 'info');\n\n    _defineConsoleLogMethod('info', 'info');\n\n    _defineConsoleLogMethod('warn', 'warn');\n\n    _defineConsoleLogMethod('error', 'error');\n\n    enhancedConsole.assert = function assert(condition) {\n      for (var _len = arguments.length, data = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        data[_key - 1] = arguments[_key];\n      }\n\n      if (originalConsole.assert) {\n        originalConsole.assert.apply(originalConsole, [!!condition].concat(data));\n      }\n\n      if (condition) {\n        return;\n      }\n\n      var assertionMessage = 'Assertion failed';\n\n      if (!data.length) {\n        data.push(assertionMessage);\n      } else {\n        if (typeof data[0] !== 'string') {\n          data.unshift(assertionMessage);\n        } else {\n          data[0] = assertionMessage + \": \" + data[0];\n        }\n      }\n\n      _enqueueRemoteLog('error', {}, data);\n    };\n\n    enhancedConsole.group = function group() {\n      for (var _len2 = arguments.length, data = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        data[_key2] = arguments[_key2];\n      }\n\n      if (originalConsole.group) {\n        originalConsole.group.apply(originalConsole, data);\n      }\n\n      _enqueueRemoteLog('info', {}, data);\n\n      groupDepth++;\n    };\n\n    enhancedConsole.groupCollapsed = function groupCollapsed() {\n      for (var _len3 = arguments.length, data = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        data[_key3] = arguments[_key3];\n      }\n\n      if (originalConsole.groupCollapsed) {\n        originalConsole.groupCollapsed.apply(originalConsole, data);\n      }\n\n      _enqueueRemoteLog('info', {\n        groupCollapsed: true\n      }, data);\n\n      groupDepth++;\n    };\n\n    enhancedConsole.groupEnd = function groupEnd() {\n      if (originalConsole.groupEnd) {\n        originalConsole.groupEnd();\n      }\n\n      if (groupDepth > 0) {\n        groupDepth--;\n      }\n\n      _enqueueRemoteLog('info', {\n        shouldHide: true\n      }, []);\n    };\n\n    function _defineConsoleLogMethod(name, level) {\n      enhancedConsole[name] = function __expoConsoleLog() {\n        var originalMethod = originalConsole[name];\n\n        for (var _len4 = arguments.length, data = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n          data[_key4] = arguments[_key4];\n        }\n\n        if (typeof originalMethod === 'function') {\n          originalMethod.apply(originalConsole, data);\n        }\n\n        _enqueueRemoteLog(level, {}, data);\n      };\n    }\n\n    function _enqueueRemoteLog(level, additionalFields, data) {\n      _RemoteLogging.default.enqueueRemoteLogAsync(level, (0, _objectSpread2.default)({\n        groupDepth: groupDepth\n      }, additionalFields), data).catch(function (error) {\n        originalConsole.error(\"There was a problem sending log messages to your development environment\", error);\n      });\n    }\n\n    return enhancedConsole;\n  }\n\n  var _default = {\n    createRemoteConsole: createRemoteConsole\n  };\n  exports.default = _default;\n});","map":[[11,0,1,0],[13,0,6,0],[13,11,6,9,"createRemoteConsole"],[13,30,6,0],[13,31,6,29,"originalConsole"],[13,46,6,0],[13,48,6,46],[14,0,7,4],[14,8,7,8,"groupDepth"],[14,18,7,18],[14,21,7,21],[14,22,7,4],[15,0,8,4],[15,8,8,10,"enhancedConsole"],[15,23,8,25],[15,26,8,28,"Object"],[15,32,8,34],[15,33,8,35,"create"],[15,39,8,28],[15,40,8,42,"originalConsole"],[15,55,8,28],[15,56,8,4],[17,0,12,4,"_defineConsoleLogMethod"],[17,4,12,4,"_defineConsoleLogMethod"],[17,27,12,27],[17,28,12,28],[17,35,12,27],[17,37,12,37],[17,43,12,27],[17,44,12,4],[19,0,14,4,"_defineConsoleLogMethod"],[19,4,14,4,"_defineConsoleLogMethod"],[19,27,14,27],[19,28,14,28],[19,33,14,27],[19,35,14,35],[19,41,14,27],[19,42,14,4],[21,0,16,4,"_defineConsoleLogMethod"],[21,4,16,4,"_defineConsoleLogMethod"],[21,27,16,27],[21,28,16,28],[21,34,16,27],[21,36,16,36],[21,42,16,27],[21,43,16,4],[23,0,18,4,"_defineConsoleLogMethod"],[23,4,18,4,"_defineConsoleLogMethod"],[23,27,18,27],[23,28,18,28],[23,34,18,27],[23,36,18,36],[23,42,18,27],[23,43,18,4],[25,0,20,4,"_defineConsoleLogMethod"],[25,4,20,4,"_defineConsoleLogMethod"],[25,27,20,27],[25,28,20,28],[25,35,20,27],[25,37,20,37],[25,44,20,27],[25,45,20,4],[27,0,22,4,"enhancedConsole"],[27,4,22,4,"enhancedConsole"],[27,19,22,19],[27,20,22,20,"assert"],[27,26,22,4],[27,29,22,29],[27,38,22,38,"assert"],[27,44,22,29],[27,45,22,45,"condition"],[27,54,22,29],[27,56,22,65],[28,0,22,65],[28,40,22,59,"data"],[28,44,22,65],[29,0,22,59,"data"],[29,8,22,59,"data"],[29,12,22,65],[30,0,22,65],[32,0,23,8],[32,10,23,12,"originalConsole"],[32,25,23,27],[32,26,23,28,"assert"],[32,32,23,8],[32,34,23,36],[33,0,25,12,"originalConsole"],[33,8,25,12,"originalConsole"],[33,23,25,27],[33,24,25,28,"assert"],[33,30,25,12],[33,37,25,12,"originalConsole"],[33,52,25,27],[33,55,25,35],[33,56,25,36],[33,57,25,37,"condition"],[33,66,25,27],[33,75,25,51,"data"],[33,79,25,27],[33,81,25,12],[34,0,26,9],[36,0,27,8],[36,10,27,12,"condition"],[36,19,27,8],[36,21,27,23],[37,0,28,12],[38,0,29,9],[40,0,30,8],[40,10,30,14,"assertionMessage"],[40,26,30,30],[40,29,30,33],[40,47,30,8],[42,0,31,8],[42,10,31,12],[42,11,31,13,"data"],[42,15,31,17],[42,16,31,18,"length"],[42,22,31,8],[42,24,31,26],[43,0,32,12,"data"],[43,8,32,12,"data"],[43,12,32,16],[43,13,32,17,"push"],[43,17,32,12],[43,18,32,22,"assertionMessage"],[43,34,32,12],[44,0,33,9],[44,7,31,8],[44,13,34,13],[45,0,35,12],[45,12,35,16],[45,19,35,23,"data"],[45,23,35,27],[45,24,35,28],[45,25,35,27],[45,26,35,16],[45,31,35,35],[45,39,35,12],[45,41,35,45],[46,0,36,16,"data"],[46,10,36,16,"data"],[46,14,36,20],[46,15,36,21,"unshift"],[46,22,36,16],[46,23,36,29,"assertionMessage"],[46,39,36,16],[47,0,37,13],[47,9,35,12],[47,15,38,17],[48,0,39,16,"data"],[48,10,39,16,"data"],[48,14,39,20],[48,15,39,21],[48,16,39,20],[48,17,39,16],[48,20,39,29,"assertionMessage"],[48,36,39,16],[48,46,39,50,"data"],[48,50,39,54],[48,51,39,55],[48,52,39,54],[48,53,39,16],[49,0,40,13],[50,0,41,9],[52,0,42,8,"_enqueueRemoteLog"],[52,6,42,8,"_enqueueRemoteLog"],[52,23,42,25],[52,24,42,26],[52,31,42,25],[52,33,42,35],[52,35,42,25],[52,37,42,39,"data"],[52,41,42,25],[52,42,42,8],[53,0,43,5],[53,5,22,4],[55,0,45,4,"enhancedConsole"],[55,4,45,4,"enhancedConsole"],[55,19,45,19],[55,20,45,20,"group"],[55,25,45,4],[55,28,45,28],[55,37,45,37,"group"],[55,42,45,28],[55,45,45,52],[56,0,45,52],[56,41,45,46,"data"],[56,45,45,52],[57,0,45,46,"data"],[57,8,45,46,"data"],[57,12,45,52],[58,0,45,52],[60,0,46,8],[60,10,46,12,"originalConsole"],[60,25,46,27],[60,26,46,28,"group"],[60,31,46,8],[60,33,46,35],[61,0,48,12,"originalConsole"],[61,8,48,12,"originalConsole"],[61,23,48,27],[61,24,48,28,"group"],[61,29,48,12],[61,36,48,12,"originalConsole"],[61,51,48,27],[61,53,48,37,"data"],[61,57,48,27],[61,58,48,12],[62,0,49,9],[64,0,50,8,"_enqueueRemoteLog"],[64,6,50,8,"_enqueueRemoteLog"],[64,23,50,25],[64,24,50,26],[64,30,50,25],[64,32,50,34],[64,34,50,25],[64,36,50,38,"data"],[64,40,50,25],[64,41,50,8],[66,0,51,8,"groupDepth"],[66,6,51,8,"groupDepth"],[66,16,51,18],[67,0,52,5],[67,5,45,4],[69,0,54,4,"enhancedConsole"],[69,4,54,4,"enhancedConsole"],[69,19,54,19],[69,20,54,20,"groupCollapsed"],[69,34,54,4],[69,37,54,37],[69,46,54,46,"groupCollapsed"],[69,60,54,37],[69,63,54,70],[70,0,54,70],[70,41,54,64,"data"],[70,45,54,70],[71,0,54,64,"data"],[71,8,54,64,"data"],[71,12,54,70],[72,0,54,70],[74,0,55,8],[74,10,55,12,"originalConsole"],[74,25,55,27],[74,26,55,28,"groupCollapsed"],[74,40,55,8],[74,42,55,44],[75,0,57,12,"originalConsole"],[75,8,57,12,"originalConsole"],[75,23,57,27],[75,24,57,28,"groupCollapsed"],[75,38,57,12],[75,45,57,12,"originalConsole"],[75,60,57,27],[75,62,57,46,"data"],[75,66,57,27],[75,67,57,12],[76,0,58,9],[78,0,59,8,"_enqueueRemoteLog"],[78,6,59,8,"_enqueueRemoteLog"],[78,23,59,25],[78,24,59,26],[78,30,59,25],[78,32,59,34],[79,0,59,36,"groupCollapsed"],[79,8,59,36,"groupCollapsed"],[79,22,59,50],[79,24,59,52],[80,0,59,34],[80,7,59,25],[80,9,59,60,"data"],[80,13,59,25],[80,14,59,8],[82,0,60,8,"groupDepth"],[82,6,60,8,"groupDepth"],[82,16,60,18],[83,0,61,5],[83,5,54,4],[85,0,63,4,"enhancedConsole"],[85,4,63,4,"enhancedConsole"],[85,19,63,19],[85,20,63,20,"groupEnd"],[85,28,63,4],[85,31,63,31],[85,40,63,40,"groupEnd"],[85,48,63,31],[85,51,63,51],[86,0,64,8],[86,10,64,12,"originalConsole"],[86,25,64,27],[86,26,64,28,"groupEnd"],[86,34,64,8],[86,36,64,38],[87,0,65,12,"originalConsole"],[87,8,65,12,"originalConsole"],[87,23,65,27],[87,24,65,28,"groupEnd"],[87,32,65,12],[88,0,66,9],[90,0,67,8],[90,10,67,12,"groupDepth"],[90,20,67,22],[90,23,67,25],[90,24,67,8],[90,26,67,28],[91,0,68,12,"groupDepth"],[91,8,68,12,"groupDepth"],[91,18,68,22],[92,0,69,9],[94,0,70,8,"_enqueueRemoteLog"],[94,6,70,8,"_enqueueRemoteLog"],[94,23,70,25],[94,24,70,26],[94,30,70,25],[94,32,70,34],[95,0,70,36,"shouldHide"],[95,8,70,36,"shouldHide"],[95,18,70,46],[95,20,70,48],[96,0,70,34],[96,7,70,25],[96,9,70,56],[96,11,70,25],[96,12,70,8],[97,0,71,5],[97,5,63,4],[99,0,76,4],[99,13,76,13,"_defineConsoleLogMethod"],[99,36,76,4],[99,37,76,37,"name"],[99,41,76,4],[99,43,76,43,"level"],[99,48,76,4],[99,50,76,50],[100,0,77,8,"enhancedConsole"],[100,6,77,8,"enhancedConsole"],[100,21,77,23],[100,22,77,24,"name"],[100,26,77,23],[100,27,77,8],[100,30,77,32],[100,39,77,41,"__expoConsoleLog"],[100,55,77,32],[100,58,77,67],[101,0,78,12],[101,12,78,16,"originalMethod"],[101,26,78,30],[101,29,78,33,"originalConsole"],[101,44,78,48],[101,45,78,49,"name"],[101,49,78,48],[101,50,78,12],[103,0,77,67],[103,43,77,61,"data"],[103,47,77,67],[104,0,77,61,"data"],[104,10,77,61,"data"],[104,14,77,67],[105,0,77,67],[107,0,79,12],[107,12,79,16],[107,19,79,23,"originalMethod"],[107,33,79,16],[107,38,79,42],[107,48,79,12],[107,50,79,54],[108,0,80,16,"originalMethod"],[108,10,80,16,"originalMethod"],[108,24,80,30],[108,25,80,31,"apply"],[108,30,80,16],[108,31,80,37,"originalConsole"],[108,46,80,16],[108,48,80,54,"data"],[108,52,80,16],[109,0,81,13],[111,0,82,12,"_enqueueRemoteLog"],[111,8,82,12,"_enqueueRemoteLog"],[111,25,82,29],[111,26,82,30,"level"],[111,31,82,29],[111,33,82,37],[111,35,82,29],[111,37,82,41,"data"],[111,41,82,29],[111,42,82,12],[112,0,83,9],[112,7,77,8],[113,0,84,5],[115,0,91,4],[115,13,91,13,"_enqueueRemoteLog"],[115,30,91,4],[115,31,91,31,"level"],[115,36,91,4],[115,38,91,38,"additionalFields"],[115,54,91,4],[115,56,91,56,"data"],[115,60,91,4],[115,62,91,62],[116,0,92,8,"RemoteLogging"],[116,29,92,22,"enqueueRemoteLogAsync"],[116,50,92,8],[116,51,92,44,"level"],[116,56,92,8],[117,0,92,53,"groupDepth"],[117,8,92,53,"groupDepth"],[117,18,92,63],[117,20,92,53,"groupDepth"],[118,0,92,8],[118,9,92,68,"additionalFields"],[118,25,92,8],[118,28,92,88,"data"],[118,32,92,8],[118,34,92,94,"catch"],[118,39,92,8],[118,40,92,100],[118,50,92,100,"error"],[118,55,92,105],[118,57,92,109],[119,0,93,12,"originalConsole"],[119,8,93,12,"originalConsole"],[119,23,93,27],[119,24,93,28,"error"],[119,29,93,12],[119,106,93,110,"error"],[119,111,93,12],[120,0,94,9],[120,7,92,8],[121,0,95,5],[123,0,96,4],[123,11,96,11,"enhancedConsole"],[123,26,96,4],[124,0,97,1],[126,17,98,15],[127,0,99,4,"createRemoteConsole"],[127,4,99,4,"createRemoteConsole"],[127,23,99,23],[127,25,99,4,"createRemoteConsole"],[128,0,98,15],[128,3]]},"type":"js/module"}]}