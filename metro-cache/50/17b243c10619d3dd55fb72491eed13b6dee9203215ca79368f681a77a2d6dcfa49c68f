{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/regenerator","data":{"isAsync":false}},{"name":"expo-core","data":{"isAsync":false}},{"name":"invariant","data":{"isAsync":false}},{"name":"./ExpoLocation","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.getProviderStatusAsync = getProviderStatusAsync;\n  exports.getCurrentPositionAsync = getCurrentPositionAsync;\n  exports.getHeadingAsync = getHeadingAsync;\n  exports.watchHeadingAsync = watchHeadingAsync;\n  exports.geocodeAsync = geocodeAsync;\n  exports.reverseGeocodeAsync = reverseGeocodeAsync;\n  exports.setApiKey = setApiKey;\n  exports.watchPositionAsync = watchPositionAsync;\n  exports.requestPermissionsAsync = requestPermissionsAsync;\n  exports.hasServicesEnabledAsync = hasServicesEnabledAsync;\n  exports.startLocationUpdatesAsync = startLocationUpdatesAsync;\n  exports.stopLocationUpdatesAsync = stopLocationUpdatesAsync;\n  exports.hasStartedLocationUpdatesAsync = hasStartedLocationUpdatesAsync;\n  exports.startGeofencingAsync = startGeofencingAsync;\n  exports.stopGeofencingAsync = stopGeofencingAsync;\n  exports.hasStartedGeofencingAsync = hasStartedGeofencingAsync;\n  exports.installWebGeolocationPolyfill = installWebGeolocationPolyfill;\n  exports._getCurrentWatchId = _getCurrentWatchId;\n  exports.EventEmitter = exports.GeofencingRegionState = exports.GeofencingEventType = exports.Accuracy = void 0;\n\n  var _regenerator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/regenerator\"));\n\n  var _expoCore = _$$_REQUIRE(_dependencyMap[2], \"expo-core\");\n\n  var _invariant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"invariant\"));\n\n  var _ExpoLocation = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"./ExpoLocation\"));\n\n  var LocationEventEmitter = new _expoCore.EventEmitter(_ExpoLocation.default);\n  exports.EventEmitter = LocationEventEmitter;\n  ;\n  ;\n  ;\n  ;\n  ;\n  ;\n  ;\n  ;\n  var LocationAccuracy;\n  exports.Accuracy = LocationAccuracy;\n\n  (function (LocationAccuracy) {\n    LocationAccuracy[LocationAccuracy[\"Lowest\"] = 1] = \"Lowest\";\n    LocationAccuracy[LocationAccuracy[\"Low\"] = 2] = \"Low\";\n    LocationAccuracy[LocationAccuracy[\"Balanced\"] = 3] = \"Balanced\";\n    LocationAccuracy[LocationAccuracy[\"High\"] = 4] = \"High\";\n    LocationAccuracy[LocationAccuracy[\"Highest\"] = 5] = \"Highest\";\n    LocationAccuracy[LocationAccuracy[\"BestForNavigation\"] = 6] = \"BestForNavigation\";\n  })(LocationAccuracy || (exports.Accuracy = LocationAccuracy = {}));\n\n  var GeofencingEventType;\n  exports.GeofencingEventType = GeofencingEventType;\n\n  (function (GeofencingEventType) {\n    GeofencingEventType[GeofencingEventType[\"Enter\"] = 1] = \"Enter\";\n    GeofencingEventType[GeofencingEventType[\"Exit\"] = 2] = \"Exit\";\n  })(GeofencingEventType || (exports.GeofencingEventType = GeofencingEventType = {}));\n\n  var GeofencingRegionState;\n  exports.GeofencingRegionState = GeofencingRegionState;\n\n  (function (GeofencingRegionState) {\n    GeofencingRegionState[GeofencingRegionState[\"Unknown\"] = 0] = \"Unknown\";\n    GeofencingRegionState[GeofencingRegionState[\"Inside\"] = 1] = \"Inside\";\n    GeofencingRegionState[GeofencingRegionState[\"Outside\"] = 2] = \"Outside\";\n  })(GeofencingRegionState || (exports.GeofencingRegionState = GeofencingRegionState = {}));\n\n  var nextWatchId = 0;\n  var headingId;\n\n  function _getNextWatchId() {\n    nextWatchId++;\n    return nextWatchId;\n  }\n\n  function _getCurrentWatchId() {\n    return nextWatchId;\n  }\n\n  var watchCallbacks = {};\n  var deviceEventSubscription;\n  var headingEventSub;\n  var googleApiKey;\n  var googleApiUrl = 'https://maps.googleapis.com/maps/api/geocode/json';\n\n  function getProviderStatusAsync() {\n    return _regenerator.default.async(function getProviderStatusAsync$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            return _context.abrupt(\"return\", _ExpoLocation.default.getProviderStatusAsync());\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, this);\n  }\n\n  function getCurrentPositionAsync() {\n    var options,\n        _args2 = arguments;\n    return _regenerator.default.async(function getCurrentPositionAsync$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            options = _args2.length > 0 && _args2[0] !== undefined ? _args2[0] : {};\n            return _context2.abrupt(\"return\", _ExpoLocation.default.getCurrentPositionAsync(options));\n\n          case 2:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, this);\n  }\n\n  function getHeadingAsync() {\n    return _regenerator.default.async(function getHeadingAsync$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            return _context4.abrupt(\"return\", new Promise(function _callee(resolve, reject) {\n              var tries, headingSub, done, subscription, _tries;\n\n              return _regenerator.default.async(function _callee$(_context3) {\n                while (1) {\n                  switch (_context3.prev = _context3.next) {\n                    case 0:\n                      _context3.prev = 0;\n\n                      if (!headingEventSub) {\n                        _context3.next = 6;\n                        break;\n                      }\n\n                      tries = 0;\n                      headingSub = LocationEventEmitter.addListener('Exponent.headingChanged', function (_ref) {\n                        var heading = _ref.heading;\n\n                        if (heading.accuracy > 1 || tries > 5) {\n                          resolve(heading);\n                          LocationEventEmitter.removeSubscription(headingSub);\n                        } else {\n                          tries += 1;\n                        }\n                      });\n                      _context3.next = 12;\n                      break;\n\n                    case 6:\n                      done = false;\n                      _tries = 0;\n                      _context3.next = 10;\n                      return _regenerator.default.awrap(watchHeadingAsync(function (heading) {\n                        if (!done) {\n                          if (heading.accuracy > 1 || _tries > 5) {\n                            subscription.remove();\n                            resolve(heading);\n                            done = true;\n                          } else {\n                            _tries += 1;\n                          }\n                        } else {\n                          subscription.remove();\n                        }\n                      }));\n\n                    case 10:\n                      subscription = _context3.sent;\n\n                      if (done) {\n                        subscription.remove();\n                      }\n\n                    case 12:\n                      _context3.next = 17;\n                      break;\n\n                    case 14:\n                      _context3.prev = 14;\n                      _context3.t0 = _context3[\"catch\"](0);\n                      reject(_context3.t0);\n\n                    case 17:\n                    case \"end\":\n                      return _context3.stop();\n                  }\n                }\n              }, null, this, [[0, 14]]);\n            }));\n\n          case 1:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, this);\n  }\n\n  function watchHeadingAsync(callback) {\n    return _regenerator.default.async(function watchHeadingAsync$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            if (headingEventSub) {\n              _removeHeadingWatcher(headingId);\n            }\n\n            headingEventSub = LocationEventEmitter.addListener('Exponent.headingChanged', function (_ref2) {\n              var watchId = _ref2.watchId,\n                  heading = _ref2.heading;\n              var callback = watchCallbacks[watchId];\n\n              if (callback) {\n                callback(heading);\n              } else {\n                _ExpoLocation.default.removeWatchAsync(watchId);\n              }\n            });\n            headingId = _getNextWatchId();\n            watchCallbacks[headingId] = callback;\n            _context5.next = 6;\n            return _regenerator.default.awrap(_ExpoLocation.default.watchDeviceHeading(headingId));\n\n          case 6:\n            return _context5.abrupt(\"return\", {\n              remove: function remove() {\n                _removeHeadingWatcher(headingId);\n              }\n            });\n\n          case 7:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, null, this);\n  }\n\n  function _removeHeadingWatcher(watchId) {\n    if (!watchCallbacks[watchId]) {\n      return;\n    }\n\n    delete watchCallbacks[watchId];\n\n    _ExpoLocation.default.removeWatchAsync(watchId);\n\n    if (headingEventSub) {\n      LocationEventEmitter.removeSubscription(headingEventSub);\n      headingEventSub = null;\n    }\n  }\n\n  function _maybeInitializeEmitterSubscription() {\n    if (!deviceEventSubscription) {\n      deviceEventSubscription = LocationEventEmitter.addListener('Exponent.locationChanged', function (_ref3) {\n        var watchId = _ref3.watchId,\n            location = _ref3.location;\n        var callback = watchCallbacks[watchId];\n\n        if (callback) {\n          callback(location);\n        } else {\n          _ExpoLocation.default.removeWatchAsync(watchId);\n        }\n      });\n    }\n  }\n\n  function geocodeAsync(address) {\n    return _regenerator.default.async(function geocodeAsync$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            return _context6.abrupt(\"return\", _ExpoLocation.default.geocodeAsync(address).catch(function (error) {\n              var platformUsesGoogleMaps = _expoCore.Platform.OS === 'android' || _expoCore.Platform.OS === 'web';\n\n              if (platformUsesGoogleMaps && error.code === 'E_NO_GEOCODER') {\n                if (!googleApiKey) {\n                  throw new Error(error.message + ' Please set a Google API Key to use geocoding.');\n                }\n\n                return _googleGeocodeAsync(address);\n              }\n\n              throw error;\n            }));\n\n          case 1:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, null, this);\n  }\n\n  function reverseGeocodeAsync(location) {\n    return _regenerator.default.async(function reverseGeocodeAsync$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            if (!(typeof location.latitude !== 'number' || typeof location.longitude !== 'number')) {\n              _context7.next = 2;\n              break;\n            }\n\n            throw new TypeError('Location should be an object with number properties `latitude` and `longitude`.');\n\n          case 2:\n            return _context7.abrupt(\"return\", _ExpoLocation.default.reverseGeocodeAsync(location).catch(function (error) {\n              var platformUsesGoogleMaps = _expoCore.Platform.OS === 'android' || _expoCore.Platform.OS === 'web';\n\n              if (platformUsesGoogleMaps && error.code === 'E_NO_GEOCODER') {\n                if (!googleApiKey) {\n                  throw new Error(error.message + ' Please set a Google API Key to use geocoding.');\n                }\n\n                return _googleReverseGeocodeAsync(location);\n              }\n\n              throw error;\n            }));\n\n          case 3:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, null, this);\n  }\n\n  function setApiKey(apiKey) {\n    googleApiKey = apiKey;\n  }\n\n  function _googleGeocodeAsync(address) {\n    var result, resultObject;\n    return _regenerator.default.async(function _googleGeocodeAsync$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            _context8.next = 2;\n            return _regenerator.default.awrap(fetch(googleApiUrl + \"?key=\" + googleApiKey + \"&address=\" + encodeURI(address)));\n\n          case 2:\n            result = _context8.sent;\n            _context8.next = 5;\n            return _regenerator.default.awrap(result.json());\n\n          case 5:\n            resultObject = _context8.sent;\n\n            if (!(resultObject.status !== 'OK')) {\n              _context8.next = 8;\n              break;\n            }\n\n            throw new Error('An error occurred during geocoding.');\n\n          case 8:\n            return _context8.abrupt(\"return\", resultObject.results.map(function (result) {\n              var location = result.geometry.location;\n              return {\n                latitude: location.lat,\n                longitude: location.lng\n              };\n            }));\n\n          case 9:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, null, this);\n  }\n\n  function _googleReverseGeocodeAsync(options) {\n    var result, resultObject;\n    return _regenerator.default.async(function _googleReverseGeocodeAsync$(_context9) {\n      while (1) {\n        switch (_context9.prev = _context9.next) {\n          case 0:\n            _context9.next = 2;\n            return _regenerator.default.awrap(fetch(googleApiUrl + \"?key=\" + googleApiKey + \"&latlng=\" + options.latitude + \",\" + options.longitude));\n\n          case 2:\n            result = _context9.sent;\n            _context9.next = 5;\n            return _regenerator.default.awrap(result.json());\n\n          case 5:\n            resultObject = _context9.sent;\n\n            if (!(resultObject.status !== 'OK')) {\n              _context9.next = 8;\n              break;\n            }\n\n            throw new Error('An error occurred during geocoding.');\n\n          case 8:\n            return _context9.abrupt(\"return\", resultObject.results.map(function (result) {\n              var address = {};\n              result.address_components.forEach(function (component) {\n                if (component.types.includes('locality')) {\n                  address.city = component.long_name;\n                } else if (component.types.includes('street_address')) {\n                  address.street = component.long_name;\n                } else if (component.types.includes('administrative_area_level_1')) {\n                  address.region = component.long_name;\n                } else if (component.types.includes('country')) {\n                  address.country = component.long_name;\n                } else if (component.types.includes('postal_code')) {\n                  address.postalCode = component.long_name;\n                } else if (component.types.includes('point_of_interest')) {\n                  address.name = component.long_name;\n                }\n              });\n              return address;\n            }));\n\n          case 9:\n          case \"end\":\n            return _context9.stop();\n        }\n      }\n    }, null, this);\n  }\n\n  function watchPosition(success, error, options) {\n    _maybeInitializeEmitterSubscription();\n\n    var watchId = _getNextWatchId();\n\n    watchCallbacks[watchId] = success;\n\n    _ExpoLocation.default.watchPositionImplAsync(watchId, options).catch(function (err) {\n      _removeWatcher(watchId);\n\n      error({\n        watchId: watchId,\n        message: err.message,\n        code: err.code\n      });\n    });\n\n    return watchId;\n  }\n\n  function watchPositionAsync(options, callback) {\n    var watchId;\n    return _regenerator.default.async(function watchPositionAsync$(_context10) {\n      while (1) {\n        switch (_context10.prev = _context10.next) {\n          case 0:\n            _maybeInitializeEmitterSubscription();\n\n            watchId = _getNextWatchId();\n            watchCallbacks[watchId] = callback;\n            _context10.next = 5;\n            return _regenerator.default.awrap(_ExpoLocation.default.watchPositionImplAsync(watchId, options));\n\n          case 5:\n            return _context10.abrupt(\"return\", {\n              remove: function remove() {\n                _removeWatcher(watchId);\n              }\n            });\n\n          case 6:\n          case \"end\":\n            return _context10.stop();\n        }\n      }\n    }, null, this);\n  }\n\n  function clearWatch(watchId) {\n    _removeWatcher(watchId);\n  }\n\n  function _removeWatcher(watchId) {\n    if (!watchCallbacks[watchId]) {\n      return;\n    }\n\n    _ExpoLocation.default.removeWatchAsync(watchId);\n\n    delete watchCallbacks[watchId];\n\n    if (Object.keys(watchCallbacks).length === 0 && deviceEventSubscription) {\n      LocationEventEmitter.removeSubscription(deviceEventSubscription);\n      deviceEventSubscription = null;\n    }\n  }\n\n  function getCurrentPosition(success) {\n    var error = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    (0, _invariant.default)(typeof success === 'function', 'Must provide a valid success callback.');\n    (0, _invariant.default)(typeof options === 'object', 'options must be an object.');\n\n    _getCurrentPositionAsyncWrapper(success, error, options);\n  }\n\n  function _getCurrentPositionAsyncWrapper(success, error, options) {\n    var result;\n    return _regenerator.default.async(function _getCurrentPositionAsyncWrapper$(_context11) {\n      while (1) {\n        switch (_context11.prev = _context11.next) {\n          case 0:\n            _context11.prev = 0;\n            _context11.next = 3;\n            return _regenerator.default.awrap(_ExpoLocation.default.requestPermissionsAsync());\n\n          case 3:\n            _context11.next = 5;\n            return _regenerator.default.awrap(getCurrentPositionAsync(options));\n\n          case 5:\n            result = _context11.sent;\n            success(result);\n            _context11.next = 12;\n            break;\n\n          case 9:\n            _context11.prev = 9;\n            _context11.t0 = _context11[\"catch\"](0);\n            error(_context11.t0);\n\n          case 12:\n          case \"end\":\n            return _context11.stop();\n        }\n      }\n    }, null, this, [[0, 9]]);\n  }\n\n  function requestPermissionsAsync() {\n    return _regenerator.default.async(function requestPermissionsAsync$(_context12) {\n      while (1) {\n        switch (_context12.prev = _context12.next) {\n          case 0:\n            _context12.next = 2;\n            return _regenerator.default.awrap(_ExpoLocation.default.requestPermissionsAsync());\n\n          case 2:\n          case \"end\":\n            return _context12.stop();\n        }\n      }\n    }, null, this);\n  }\n\n  function hasServicesEnabledAsync() {\n    return _regenerator.default.async(function hasServicesEnabledAsync$(_context13) {\n      while (1) {\n        switch (_context13.prev = _context13.next) {\n          case 0:\n            _context13.next = 2;\n            return _regenerator.default.awrap(_ExpoLocation.default.hasServicesEnabledAsync());\n\n          case 2:\n            return _context13.abrupt(\"return\", _context13.sent);\n\n          case 3:\n          case \"end\":\n            return _context13.stop();\n        }\n      }\n    }, null, this);\n  }\n\n  function _validateTaskName(taskName) {\n    (0, _invariant.default)(taskName && typeof taskName === 'string', '`taskName` must be a non-empty string.');\n  }\n\n  function startLocationUpdatesAsync(taskName) {\n    var options,\n        _args14 = arguments;\n    return _regenerator.default.async(function startLocationUpdatesAsync$(_context14) {\n      while (1) {\n        switch (_context14.prev = _context14.next) {\n          case 0:\n            options = _args14.length > 1 && _args14[1] !== undefined ? _args14[1] : {\n              accuracy: LocationAccuracy.Balanced\n            };\n\n            _validateTaskName(taskName);\n\n            _context14.next = 4;\n            return _regenerator.default.awrap(_ExpoLocation.default.startLocationUpdatesAsync(taskName, options));\n\n          case 4:\n          case \"end\":\n            return _context14.stop();\n        }\n      }\n    }, null, this);\n  }\n\n  function stopLocationUpdatesAsync(taskName) {\n    return _regenerator.default.async(function stopLocationUpdatesAsync$(_context15) {\n      while (1) {\n        switch (_context15.prev = _context15.next) {\n          case 0:\n            _validateTaskName(taskName);\n\n            _context15.next = 3;\n            return _regenerator.default.awrap(_ExpoLocation.default.stopLocationUpdatesAsync(taskName));\n\n          case 3:\n          case \"end\":\n            return _context15.stop();\n        }\n      }\n    }, null, this);\n  }\n\n  function hasStartedLocationUpdatesAsync(taskName) {\n    return _regenerator.default.async(function hasStartedLocationUpdatesAsync$(_context16) {\n      while (1) {\n        switch (_context16.prev = _context16.next) {\n          case 0:\n            _validateTaskName(taskName);\n\n            return _context16.abrupt(\"return\", _ExpoLocation.default.hasStartedLocationUpdatesAsync(taskName));\n\n          case 2:\n          case \"end\":\n            return _context16.stop();\n        }\n      }\n    }, null, this);\n  }\n\n  function _validateRegions(regions) {\n    if (!regions || regions.length === 0) {\n      throw new Error('Regions array cannot be empty. Use `stopGeofencingAsync` if you want to stop geofencing all regions');\n    }\n\n    for (var _iterator = regions, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[typeof Symbol === \"function\" ? Symbol.iterator : \"@@iterator\"]();;) {\n      var _ref4;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref4 = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref4 = _i.value;\n      }\n\n      var _region = _ref4;\n\n      if (typeof _region.latitude !== 'number') {\n        throw new TypeError(\"Region's latitude must be a number. Got '\" + _region.latitude + \"' instead.\");\n      }\n\n      if (typeof _region.longitude !== 'number') {\n        throw new TypeError(\"Region's longitude must be a number. Got '\" + _region.longitude + \"' instead.\");\n      }\n\n      if (typeof _region.radius !== 'number') {\n        throw new TypeError(\"Region's radius must be a number. Got '\" + _region.radius + \"' instead.\");\n      }\n    }\n  }\n\n  function startGeofencingAsync(taskName) {\n    var regions,\n        _args17 = arguments;\n    return _regenerator.default.async(function startGeofencingAsync$(_context17) {\n      while (1) {\n        switch (_context17.prev = _context17.next) {\n          case 0:\n            regions = _args17.length > 1 && _args17[1] !== undefined ? _args17[1] : [];\n\n            _validateTaskName(taskName);\n\n            _validateRegions(regions);\n\n            _context17.next = 5;\n            return _regenerator.default.awrap(_ExpoLocation.default.startGeofencingAsync(taskName, {\n              regions: regions\n            }));\n\n          case 5:\n          case \"end\":\n            return _context17.stop();\n        }\n      }\n    }, null, this);\n  }\n\n  function stopGeofencingAsync(taskName) {\n    return _regenerator.default.async(function stopGeofencingAsync$(_context18) {\n      while (1) {\n        switch (_context18.prev = _context18.next) {\n          case 0:\n            _validateTaskName(taskName);\n\n            _context18.next = 3;\n            return _regenerator.default.awrap(_ExpoLocation.default.stopGeofencingAsync(taskName));\n\n          case 3:\n          case \"end\":\n            return _context18.stop();\n        }\n      }\n    }, null, this);\n  }\n\n  function hasStartedGeofencingAsync(taskName) {\n    return _regenerator.default.async(function hasStartedGeofencingAsync$(_context19) {\n      while (1) {\n        switch (_context19.prev = _context19.next) {\n          case 0:\n            _validateTaskName(taskName);\n\n            return _context19.abrupt(\"return\", _ExpoLocation.default.hasStartedGeofencingAsync(taskName));\n\n          case 2:\n          case \"end\":\n            return _context19.stop();\n        }\n      }\n    }, null, this);\n  }\n\n  function installWebGeolocationPolyfill() {\n    if (_expoCore.Platform.OS !== 'web') {\n      window.navigator.geolocation = {\n        getCurrentPosition: getCurrentPosition,\n        watchPosition: watchPosition,\n        clearWatch: clearWatch,\n        stopObserving: function stopObserving() {}\n      };\n    }\n  }\n});","map":[[29,0,1,0],[31,0,2,0],[33,0,3,0],[35,0,4,0],[35,6,4,6,"LocationEventEmitter"],[35,26,4,26],[35,29,4,29],[35,33,4,33,"EventEmitter"],[35,55,4,29],[35,56,4,46,"ExpoLocation"],[35,77,4,29],[35,78,4,0],[37,0,5,0],[38,0,6,0],[39,0,7,0],[40,0,8,0],[41,0,9,0],[42,0,10,0],[43,0,11,0],[44,0,12,0],[45,0,13,0],[45,6,13,4,"LocationAccuracy"],[45,22,13,0],[48,0,14,0],[48,3,14,1],[48,13,14,11,"LocationAccuracy"],[48,29,14,1],[48,31,14,29],[49,0,15,4,"LocationAccuracy"],[49,4,15,4,"LocationAccuracy"],[49,20,15,20],[49,21,15,21,"LocationAccuracy"],[49,37,15,37],[49,38,15,38],[49,46,15,37],[49,47,15,21],[49,50,15,50],[49,51,15,20],[49,52,15,4],[49,55,15,55],[49,63,15,4],[50,0,16,4,"LocationAccuracy"],[50,4,16,4,"LocationAccuracy"],[50,20,16,20],[50,21,16,21,"LocationAccuracy"],[50,37,16,37],[50,38,16,38],[50,43,16,37],[50,44,16,21],[50,47,16,47],[50,48,16,20],[50,49,16,4],[50,52,16,52],[50,57,16,4],[51,0,17,4,"LocationAccuracy"],[51,4,17,4,"LocationAccuracy"],[51,20,17,20],[51,21,17,21,"LocationAccuracy"],[51,37,17,37],[51,38,17,38],[51,48,17,37],[51,49,17,21],[51,52,17,52],[51,53,17,20],[51,54,17,4],[51,57,17,57],[51,67,17,4],[52,0,18,4,"LocationAccuracy"],[52,4,18,4,"LocationAccuracy"],[52,20,18,20],[52,21,18,21,"LocationAccuracy"],[52,37,18,37],[52,38,18,38],[52,44,18,37],[52,45,18,21],[52,48,18,48],[52,49,18,20],[52,50,18,4],[52,53,18,53],[52,59,18,4],[53,0,19,4,"LocationAccuracy"],[53,4,19,4,"LocationAccuracy"],[53,20,19,20],[53,21,19,21,"LocationAccuracy"],[53,37,19,37],[53,38,19,38],[53,47,19,37],[53,48,19,21],[53,51,19,51],[53,52,19,20],[53,53,19,4],[53,56,19,56],[53,65,19,4],[54,0,20,4,"LocationAccuracy"],[54,4,20,4,"LocationAccuracy"],[54,20,20,20],[54,21,20,21,"LocationAccuracy"],[54,37,20,37],[54,38,20,38],[54,57,20,37],[54,58,20,21],[54,61,20,61],[54,62,20,20],[54,63,20,4],[54,66,20,66],[54,85,20,4],[55,0,21,1],[55,3,14,0],[55,5,21,3,"LocationAccuracy"],[55,21,21,19],[55,45,21,24,"LocationAccuracy"],[55,61,21,40],[55,64,21,43],[55,66,21,19],[55,67,14,0],[57,0,23,7],[57,6,23,11,"GeofencingEventType"],[57,25,23,7],[60,0,24,0],[60,3,24,1],[60,13,24,11,"GeofencingEventType"],[60,32,24,1],[60,34,24,32],[61,0,25,4,"GeofencingEventType"],[61,4,25,4,"GeofencingEventType"],[61,23,25,23],[61,24,25,24,"GeofencingEventType"],[61,43,25,43],[61,44,25,44],[61,51,25,43],[61,52,25,24],[61,55,25,55],[61,56,25,23],[61,57,25,4],[61,60,25,60],[61,67,25,4],[62,0,26,4,"GeofencingEventType"],[62,4,26,4,"GeofencingEventType"],[62,23,26,23],[62,24,26,24,"GeofencingEventType"],[62,43,26,43],[62,44,26,44],[62,50,26,43],[62,51,26,24],[62,54,26,54],[62,55,26,23],[62,56,26,4],[62,59,26,59],[62,65,26,4],[63,0,27,1],[63,3,24,0],[63,5,27,3,"GeofencingEventType"],[63,24,27,22],[63,59,27,27,"GeofencingEventType"],[63,78,27,46],[63,81,27,49],[63,83,27,22],[63,84,24,0],[65,0,28,7],[65,6,28,11,"GeofencingRegionState"],[65,27,28,7],[68,0,29,0],[68,3,29,1],[68,13,29,11,"GeofencingRegionState"],[68,34,29,1],[68,36,29,34],[69,0,30,4,"GeofencingRegionState"],[69,4,30,4,"GeofencingRegionState"],[69,25,30,25],[69,26,30,26,"GeofencingRegionState"],[69,47,30,47],[69,48,30,48],[69,57,30,47],[69,58,30,26],[69,61,30,61],[69,62,30,25],[69,63,30,4],[69,66,30,66],[69,75,30,4],[70,0,31,4,"GeofencingRegionState"],[70,4,31,4,"GeofencingRegionState"],[70,25,31,25],[70,26,31,26,"GeofencingRegionState"],[70,47,31,47],[70,48,31,48],[70,56,31,47],[70,57,31,26],[70,60,31,60],[70,61,31,25],[70,62,31,4],[70,65,31,65],[70,73,31,4],[71,0,32,4,"GeofencingRegionState"],[71,4,32,4,"GeofencingRegionState"],[71,25,32,25],[71,26,32,26,"GeofencingRegionState"],[71,47,32,47],[71,48,32,48],[71,57,32,47],[71,58,32,26],[71,61,32,61],[71,62,32,25],[71,63,32,4],[71,66,32,66],[71,75,32,4],[72,0,33,1],[72,3,29,0],[72,5,33,3,"GeofencingRegionState"],[72,26,33,24],[72,63,33,29,"GeofencingRegionState"],[72,84,33,50],[72,87,33,53],[72,89,33,24],[72,90,29,0],[74,0,34,0],[74,6,34,4,"nextWatchId"],[74,17,34,15],[74,20,34,18],[74,21,34,0],[75,0,35,0],[75,6,35,4,"headingId"],[75,15,35,0],[77,0,36,0],[77,11,36,9,"_getNextWatchId"],[77,26,36,0],[77,29,36,27],[78,0,37,4,"nextWatchId"],[78,4,37,4,"nextWatchId"],[78,15,37,15],[79,0,38,4],[79,11,38,11,"nextWatchId"],[79,22,38,4],[80,0,39,1],[82,0,40,0],[82,11,40,9,"_getCurrentWatchId"],[82,29,40,0],[82,32,40,30],[83,0,41,4],[83,11,41,11,"nextWatchId"],[83,22,41,4],[84,0,42,1],[86,0,43,0],[86,6,43,4,"watchCallbacks"],[86,20,43,18],[86,23,43,21],[86,25,43,0],[87,0,44,0],[87,6,44,4,"deviceEventSubscription"],[87,29,44,0],[88,0,45,0],[88,6,45,4,"headingEventSub"],[88,21,45,0],[89,0,46,0],[89,6,46,4,"googleApiKey"],[89,18,46,0],[90,0,47,0],[90,6,47,6,"googleApiUrl"],[90,18,47,18],[90,21,47,21],[90,72,47,0],[92,0,48,7],[92,11,48,22,"getProviderStatusAsync"],[92,33,48,7],[93,0,48,7],[94,0,48,7],[95,0,48,7],[96,0,48,7],[97,0,48,7],[97,45,49,11,"ExpoLocation"],[97,67,49,24,"getProviderStatusAsync"],[97,89,49,11],[97,91,48,7],[99,0,48,7],[100,0,48,7],[101,0,48,7],[102,0,48,7],[103,0,48,7],[104,0,48,7],[105,0,48,7],[107,0,51,7],[107,11,51,22,"getCurrentPositionAsync"],[107,34,51,7],[108,0,51,7],[109,0,51,7],[110,0,51,7],[111,0,51,7],[112,0,51,7],[113,0,51,7],[114,0,51,46,"options"],[114,12,51,46,"options"],[114,19,51,7],[114,81,51,56],[114,83,51,7],[115,0,51,7],[115,46,52,11,"ExpoLocation"],[115,68,52,24,"getCurrentPositionAsync"],[115,91,52,11],[115,92,52,48,"options"],[115,99,52,11],[115,100,51,7],[117,0,51,7],[118,0,51,7],[119,0,51,7],[120,0,51,7],[121,0,51,7],[122,0,51,7],[123,0,51,7],[125,0,57,7],[125,11,57,22,"getHeadingAsync"],[125,26,57,7],[126,0,57,7],[127,0,57,7],[128,0,57,7],[129,0,57,7],[130,0,57,7],[130,46,58,11],[130,50,58,15,"Promise"],[130,57,58,11],[130,58,58,23],[130,75,58,30,"resolve"],[130,82,58,23],[130,84,58,39,"reject"],[130,90,58,23],[131,0,58,23],[133,0,58,23],[134,0,58,23],[135,0,58,23],[136,0,58,23],[137,0,58,23],[139,0,58,23],[139,27,61,16,"headingEventSub"],[139,42,58,23],[140,0,58,23],[141,0,58,23],[142,0,58,23],[144,0,62,20,"tries"],[144,22,62,20,"tries"],[144,27,58,23],[144,30,62,28],[144,31,58,23],[145,0,63,22,"headingSub"],[145,22,63,22,"headingSub"],[145,32,58,23],[145,35,63,35,"LocationEventEmitter"],[145,55,63,55],[145,56,63,56,"addListener"],[145,67,63,35],[145,68,63,68],[145,93,63,35],[145,95,63,95],[145,111,63,112],[146,0,63,112],[146,28,63,98,"heading"],[146,35,63,112],[146,43,63,98,"heading"],[146,50,63,112],[148,0,64,20],[148,28,64,24,"heading"],[148,35,64,31],[148,36,64,32,"accuracy"],[148,44,64,24],[148,47,64,43],[148,48,64,24],[148,52,64,48,"tries"],[148,57,64,53],[148,60,64,56],[148,61,64,20],[148,63,64,59],[149,0,65,24,"resolve"],[149,26,65,24,"resolve"],[149,33,65,31],[149,34,65,32,"heading"],[149,41,65,31],[149,42,65,24],[150,0,66,24,"LocationEventEmitter"],[150,26,66,24,"LocationEventEmitter"],[150,46,66,44],[150,47,66,45,"removeSubscription"],[150,65,66,24],[150,66,66,64,"headingSub"],[150,76,66,24],[151,0,67,21],[151,25,64,20],[151,31,68,25],[152,0,69,24,"tries"],[152,26,69,24,"tries"],[152,31,69,29],[152,35,69,33],[152,36,69,24],[153,0,70,21],[154,0,71,17],[154,23,63,35],[154,24,58,23],[155,0,58,23],[156,0,58,23],[158,0,58,23],[159,0,74,20,"done"],[159,22,74,20,"done"],[159,26,58,23],[159,29,74,27],[159,34,58,23],[160,0,76,20,"tries"],[160,22,76,20,"tries"],[160,28,58,23],[160,31,76,28],[160,32,58,23],[161,0,58,23],[162,0,58,23],[162,56,77,37,"watchHeadingAsync"],[162,73,77,54],[162,74,77,55],[162,84,77,56,"heading"],[162,91,77,55],[162,93,77,68],[163,0,78,20],[163,28,78,24],[163,29,78,25,"done"],[163,33,78,20],[163,35,78,31],[164,0,79,24],[164,30,79,28,"heading"],[164,37,79,35],[164,38,79,36,"accuracy"],[164,46,79,28],[164,49,79,47],[164,50,79,28],[164,54,79,52,"tries"],[164,60,79,57],[164,63,79,60],[164,64,79,24],[164,66,79,63],[165,0,80,28,"subscription"],[165,28,80,28,"subscription"],[165,40,80,40],[165,41,80,41,"remove"],[165,47,80,28],[166,0,81,28,"resolve"],[166,28,81,28,"resolve"],[166,35,81,35],[166,36,81,36,"heading"],[166,43,81,35],[166,44,81,28],[167,0,82,28,"done"],[167,28,82,28,"done"],[167,32,82,32],[167,35,82,35],[167,39,82,28],[168,0,83,25],[168,27,79,24],[168,33,84,29],[169,0,85,28,"tries"],[169,28,85,28,"tries"],[169,34,85,33],[169,38,85,37],[169,39,85,28],[170,0,86,25],[171,0,87,21],[171,25,78,20],[171,31,88,25],[172,0,89,24,"subscription"],[172,26,89,24,"subscription"],[172,38,89,36],[172,39,89,37,"remove"],[172,45,89,24],[173,0,90,21],[174,0,91,17],[174,23,77,54],[174,24,58,23],[176,0,58,23],[177,0,77,16,"subscription"],[177,22,77,16,"subscription"],[177,34,58,23],[179,0,92,16],[179,26,92,20,"done"],[179,30,92,16],[179,32,92,26],[180,0,93,20,"subscription"],[180,24,93,20,"subscription"],[180,36,93,32],[180,37,93,33,"remove"],[180,43,93,20],[181,0,94,17],[183,0,58,23],[184,0,58,23],[185,0,58,23],[187,0,58,23],[188,0,58,23],[189,0,58,23],[190,0,98,12,"reject"],[190,22,98,12,"reject"],[190,28,98,18],[190,42,98,12],[192,0,58,23],[193,0,58,23],[194,0,58,23],[195,0,58,23],[196,0,58,23],[197,0,58,23],[198,0,58,23],[198,13,58,11],[198,14,57,7],[200,0,57,7],[201,0,57,7],[202,0,57,7],[203,0,57,7],[204,0,57,7],[205,0,57,7],[206,0,57,7],[208,0,102,7],[208,11,102,22,"watchHeadingAsync"],[208,28,102,7],[208,29,102,40,"callback"],[208,37,102,7],[209,0,102,7],[210,0,102,7],[211,0,102,7],[212,0,102,7],[213,0,104,4],[213,16,104,8,"headingEventSub"],[213,31,104,4],[213,33,104,25],[214,0,105,8,"_removeHeadingWatcher"],[214,14,105,8,"_removeHeadingWatcher"],[214,35,105,29],[214,36,105,30,"headingId"],[214,45,105,29],[214,46,105,8],[215,0,106,5],[217,0,107,4,"headingEventSub"],[217,12,107,4,"headingEventSub"],[217,27,107,19],[217,30,107,22,"LocationEventEmitter"],[217,50,107,42],[217,51,107,43,"addListener"],[217,62,107,22],[217,63,107,55],[217,88,107,22],[217,90,107,82],[217,107,107,108],[218,0,107,108],[218,18,107,85,"watchId"],[218,25,107,108],[218,34,107,85,"watchId"],[218,41,107,108],[219,0,107,108],[219,18,107,94,"heading"],[219,25,107,108],[219,34,107,94,"heading"],[219,41,107,108],[220,0,108,8],[220,18,108,14,"callback"],[220,26,108,22],[220,29,108,25,"watchCallbacks"],[220,43,108,39],[220,44,108,40,"watchId"],[220,51,108,39],[220,52,108,8],[222,0,109,8],[222,18,109,12,"callback"],[222,26,109,8],[222,28,109,22],[223,0,110,12,"callback"],[223,16,110,12,"callback"],[223,24,110,20],[223,25,110,21,"heading"],[223,32,110,20],[223,33,110,12],[224,0,111,9],[224,15,109,8],[224,21,112,13],[225,0,113,12,"ExpoLocation"],[225,38,113,25,"removeWatchAsync"],[225,54,113,12],[225,55,113,42,"watchId"],[225,62,113,12],[226,0,114,9],[227,0,115,5],[227,13,107,22],[227,14,107,4],[228,0,116,4,"headingId"],[228,12,116,4,"headingId"],[228,21,116,13],[228,24,116,16,"_getNextWatchId"],[228,39,116,31],[228,41,116,4],[229,0,117,4,"watchCallbacks"],[229,12,117,4,"watchCallbacks"],[229,26,117,18],[229,27,117,19,"headingId"],[229,36,117,18],[229,37,117,4],[229,40,117,32,"callback"],[229,48,117,4],[230,0,102,7],[231,0,102,7],[231,46,118,10,"ExpoLocation"],[231,68,118,23,"watchDeviceHeading"],[231,86,118,10],[231,87,118,42,"headingId"],[231,96,118,10],[231,97,102,7],[233,0,102,7],[234,0,102,7],[234,46,119,11],[235,0,120,8,"remove"],[235,14,120,8,"remove"],[235,20,119,11],[235,40,120,17],[236,0,121,12,"_removeHeadingWatcher"],[236,16,121,12,"_removeHeadingWatcher"],[236,37,121,33],[236,38,121,34,"headingId"],[236,47,121,33],[236,48,121,12],[237,0,122,9],[238,0,119,11],[238,13,102,7],[240,0,102,7],[241,0,102,7],[242,0,102,7],[243,0,102,7],[244,0,102,7],[245,0,102,7],[246,0,102,7],[248,0,126,0],[248,11,126,9,"_removeHeadingWatcher"],[248,32,126,0],[248,33,126,31,"watchId"],[248,40,126,0],[248,42,126,40],[249,0,127,4],[249,8,127,8],[249,9,127,9,"watchCallbacks"],[249,23,127,23],[249,24,127,24,"watchId"],[249,31,127,23],[249,32,127,4],[249,34,127,34],[250,0,128,8],[251,0,129,5],[253,0,130,4],[253,11,130,11,"watchCallbacks"],[253,25,130,25],[253,26,130,26,"watchId"],[253,33,130,25],[253,34,130,4],[255,0,131,4,"ExpoLocation"],[255,26,131,17,"removeWatchAsync"],[255,42,131,4],[255,43,131,34,"watchId"],[255,50,131,4],[257,0,132,4],[257,8,132,8,"headingEventSub"],[257,23,132,4],[257,25,132,25],[258,0,133,8,"LocationEventEmitter"],[258,6,133,8,"LocationEventEmitter"],[258,26,133,28],[258,27,133,29,"removeSubscription"],[258,45,133,8],[258,46,133,48,"headingEventSub"],[258,61,133,8],[259,0,134,8,"headingEventSub"],[259,6,134,8,"headingEventSub"],[259,21,134,23],[259,24,134,26],[259,28,134,8],[260,0,135,5],[261,0,136,1],[263,0,138,0],[263,11,138,9,"_maybeInitializeEmitterSubscription"],[263,46,138,0],[263,49,138,47],[264,0,139,4],[264,8,139,8],[264,9,139,9,"deviceEventSubscription"],[264,32,139,4],[264,34,139,34],[265,0,140,8,"deviceEventSubscription"],[265,6,140,8,"deviceEventSubscription"],[265,29,140,31],[265,32,140,34,"LocationEventEmitter"],[265,52,140,54],[265,53,140,55,"addListener"],[265,64,140,34],[265,65,140,67],[265,91,140,34],[265,93,140,95],[265,110,140,122],[266,0,140,122],[266,12,140,98,"watchId"],[266,19,140,122],[266,28,140,98,"watchId"],[266,35,140,122],[267,0,140,122],[267,12,140,107,"location"],[267,20,140,122],[267,29,140,107,"location"],[267,37,140,122],[268,0,141,12],[268,12,141,18,"callback"],[268,20,141,26],[268,23,141,29,"watchCallbacks"],[268,37,141,43],[268,38,141,44,"watchId"],[268,45,141,43],[268,46,141,12],[270,0,142,12],[270,12,142,16,"callback"],[270,20,142,12],[270,22,142,26],[271,0,143,16,"callback"],[271,10,143,16,"callback"],[271,18,143,24],[271,19,143,25,"location"],[271,27,143,24],[271,28,143,16],[272,0,144,13],[272,9,142,12],[272,15,145,17],[273,0,146,16,"ExpoLocation"],[273,32,146,29,"removeWatchAsync"],[273,48,146,16],[273,49,146,46,"watchId"],[273,56,146,16],[274,0,147,13],[275,0,148,9],[275,7,140,34],[275,8,140,8],[276,0,149,5],[277,0,150,1],[279,0,151,7],[279,11,151,22,"geocodeAsync"],[279,23,151,7],[279,24,151,35,"address"],[279,31,151,7],[280,0,151,7],[281,0,151,7],[282,0,151,7],[283,0,151,7],[284,0,151,7],[284,46,152,11,"ExpoLocation"],[284,68,152,24,"geocodeAsync"],[284,80,152,11],[284,81,152,37,"address"],[284,88,152,11],[284,90,152,46,"catch"],[284,95,152,11],[284,96,152,52],[284,106,152,52,"error"],[284,111,152,57],[284,113,152,61],[285,0,153,8],[285,18,153,14,"platformUsesGoogleMaps"],[285,40,153,36],[285,43,153,39,"Platform"],[285,62,153,48,"OS"],[285,64,153,39],[285,69,153,55],[285,78,153,39],[285,82,153,68,"Platform"],[285,101,153,77,"OS"],[285,103,153,68],[285,108,153,84],[285,113,153,8],[287,0,154,8],[287,18,154,12,"platformUsesGoogleMaps"],[287,40,154,34],[287,44,154,38,"error"],[287,49,154,43],[287,50,154,44,"code"],[287,54,154,38],[287,59,154,53],[287,74,154,8],[287,76,154,70],[288,0,155,12],[288,20,155,16],[288,21,155,17,"googleApiKey"],[288,33,155,12],[288,35,155,31],[289,0,156,16],[289,24,156,22],[289,28,156,26,"Error"],[289,33,156,22],[289,34,156,32,"error"],[289,39,156,37],[289,40,156,38,"message"],[289,47,156,32],[289,50,156,48],[289,98,156,22],[289,99,156,16],[290,0,157,13],[292,0,158,12],[292,23,158,19,"_googleGeocodeAsync"],[292,42,158,38],[292,43,158,39,"address"],[292,50,158,38],[292,51,158,12],[293,0,159,9],[295,0,160,8],[295,20,160,14,"error"],[295,25,160,8],[296,0,161,5],[296,13,152,11],[296,14,151,7],[298,0,151,7],[299,0,151,7],[300,0,151,7],[301,0,151,7],[302,0,151,7],[303,0,151,7],[304,0,151,7],[306,0,163,7],[306,11,163,22,"reverseGeocodeAsync"],[306,30,163,7],[306,31,163,42,"location"],[306,39,163,7],[307,0,163,7],[308,0,163,7],[309,0,163,7],[310,0,163,7],[311,0,163,7],[311,18,164,8],[311,25,164,15,"location"],[311,33,164,23],[311,34,164,24,"latitude"],[311,42,164,8],[311,47,164,37],[311,55,164,8],[311,59,164,49],[311,66,164,56,"location"],[311,74,164,64],[311,75,164,65,"longitude"],[311,84,164,49],[311,89,164,79],[311,97,163,7],[312,0,163,7],[313,0,163,7],[314,0,163,7],[316,0,163,7],[316,18,165,14],[316,22,165,18,"TypeError"],[316,31,165,14],[316,32,165,28],[316,113,165,14],[316,114,163,7],[318,0,163,7],[319,0,163,7],[319,46,167,11,"ExpoLocation"],[319,68,167,24,"reverseGeocodeAsync"],[319,87,167,11],[319,88,167,44,"location"],[319,96,167,11],[319,98,167,54,"catch"],[319,103,167,11],[319,104,167,60],[319,114,167,60,"error"],[319,119,167,65],[319,121,167,69],[320,0,168,8],[320,18,168,14,"platformUsesGoogleMaps"],[320,40,168,36],[320,43,168,39,"Platform"],[320,62,168,48,"OS"],[320,64,168,39],[320,69,168,55],[320,78,168,39],[320,82,168,68,"Platform"],[320,101,168,77,"OS"],[320,103,168,68],[320,108,168,84],[320,113,168,8],[322,0,169,8],[322,18,169,12,"platformUsesGoogleMaps"],[322,40,169,34],[322,44,169,38,"error"],[322,49,169,43],[322,50,169,44,"code"],[322,54,169,38],[322,59,169,53],[322,74,169,8],[322,76,169,70],[323,0,170,12],[323,20,170,16],[323,21,170,17,"googleApiKey"],[323,33,170,12],[323,35,170,31],[324,0,171,16],[324,24,171,22],[324,28,171,26,"Error"],[324,33,171,22],[324,34,171,32,"error"],[324,39,171,37],[324,40,171,38,"message"],[324,47,171,32],[324,50,171,48],[324,98,171,22],[324,99,171,16],[325,0,172,13],[327,0,173,12],[327,23,173,19,"_googleReverseGeocodeAsync"],[327,49,173,45],[327,50,173,46,"location"],[327,58,173,45],[327,59,173,12],[328,0,174,9],[330,0,175,8],[330,20,175,14,"error"],[330,25,175,8],[331,0,176,5],[331,13,167,11],[331,14,163,7],[333,0,163,7],[334,0,163,7],[335,0,163,7],[336,0,163,7],[337,0,163,7],[338,0,163,7],[339,0,163,7],[341,0,178,7],[341,11,178,16,"setApiKey"],[341,20,178,7],[341,21,178,26,"apiKey"],[341,27,178,7],[341,29,178,34],[342,0,179,4,"googleApiKey"],[342,4,179,4,"googleApiKey"],[342,16,179,16],[342,19,179,19,"apiKey"],[342,25,179,4],[343,0,180,1],[345,0,181,0],[345,11,181,15,"_googleGeocodeAsync"],[345,30,181,0],[345,31,181,35,"address"],[345,38,181,0],[346,0,181,0],[347,0,181,0],[348,0,181,0],[349,0,181,0],[350,0,181,0],[351,0,181,0],[352,0,181,0],[352,46,182,25,"fetch"],[352,51,182,30],[352,52,182,34,"googleApiUrl"],[352,64,182,30],[352,77,182,54,"googleApiKey"],[352,89,182,30],[352,106,182,78,"encodeURI"],[352,115,182,87],[352,116,182,88,"address"],[352,123,182,87],[352,124,182,30],[352,125,181,0],[354,0,181,0],[355,0,182,10,"result"],[355,12,182,10,"result"],[355,18,181,0],[356,0,181,0],[357,0,181,0],[357,46,183,31,"result"],[357,52,183,37],[357,53,183,38,"json"],[357,57,183,31],[357,59,181,0],[359,0,181,0],[360,0,183,10,"resultObject"],[360,12,183,10,"resultObject"],[360,24,181,0],[362,0,181,0],[362,18,184,8,"resultObject"],[362,30,184,20],[362,31,184,21,"status"],[362,37,184,8],[362,42,184,32],[362,46,181,0],[363,0,181,0],[364,0,181,0],[365,0,181,0],[367,0,181,0],[367,18,185,14],[367,22,185,18,"Error"],[367,27,185,14],[367,28,185,24],[367,65,185,14],[367,66,181,0],[369,0,181,0],[370,0,181,0],[370,46,187,11,"resultObject"],[370,58,187,23],[370,59,187,24,"results"],[370,66,187,11],[370,67,187,32,"map"],[370,70,187,11],[370,71,187,36],[370,81,187,36,"result"],[370,87,187,42],[370,89,187,46],[371,0,188,8],[371,18,188,12,"location"],[371,26,188,20],[371,29,188,23,"result"],[371,35,188,29],[371,36,188,30,"geometry"],[371,44,188,23],[371,45,188,39,"location"],[371,53,188,8],[372,0,189,8],[372,21,189,15],[373,0,190,12,"latitude"],[373,16,190,12,"latitude"],[373,24,190,20],[373,26,190,22,"location"],[373,34,190,30],[373,35,190,31,"lat"],[373,38,189,15],[374,0,191,12,"longitude"],[374,16,191,12,"longitude"],[374,25,191,21],[374,27,191,23,"location"],[374,35,191,31],[374,36,191,32,"lng"],[375,0,189,15],[375,15,189,8],[376,0,193,5],[376,13,187,11],[376,14,181,0],[378,0,181,0],[379,0,181,0],[380,0,181,0],[381,0,181,0],[382,0,181,0],[383,0,181,0],[384,0,181,0],[386,0,195,0],[386,11,195,15,"_googleReverseGeocodeAsync"],[386,37,195,0],[386,38,195,42,"options"],[386,45,195,0],[387,0,195,0],[388,0,195,0],[389,0,195,0],[390,0,195,0],[391,0,195,0],[392,0,195,0],[393,0,195,0],[393,46,196,25,"fetch"],[393,51,196,30],[393,52,196,34,"googleApiUrl"],[393,64,196,30],[393,77,196,54,"googleApiKey"],[393,89,196,30],[393,105,196,77,"options"],[393,112,196,84],[393,113,196,85,"latitude"],[393,121,196,30],[393,130,196,97,"options"],[393,137,196,104],[393,138,196,105,"longitude"],[393,147,196,30],[393,148,195,0],[395,0,195,0],[396,0,196,10,"result"],[396,12,196,10,"result"],[396,18,195,0],[397,0,195,0],[398,0,195,0],[398,46,197,31,"result"],[398,52,197,37],[398,53,197,38,"json"],[398,57,197,31],[398,59,195,0],[400,0,195,0],[401,0,197,10,"resultObject"],[401,12,197,10,"resultObject"],[401,24,195,0],[403,0,195,0],[403,18,198,8,"resultObject"],[403,30,198,20],[403,31,198,21,"status"],[403,37,198,8],[403,42,198,32],[403,46,195,0],[404,0,195,0],[405,0,195,0],[406,0,195,0],[408,0,195,0],[408,18,199,14],[408,22,199,18,"Error"],[408,27,199,14],[408,28,199,24],[408,65,199,14],[408,66,195,0],[410,0,195,0],[411,0,195,0],[411,46,201,11,"resultObject"],[411,58,201,23],[411,59,201,24,"results"],[411,66,201,11],[411,67,201,32,"map"],[411,70,201,11],[411,71,201,36],[411,81,201,36,"result"],[411,87,201,42],[411,89,201,46],[412,0,202,8],[412,18,202,14,"address"],[412,25,202,21],[412,28,202,24],[412,30,202,8],[413,0,203,8,"result"],[413,14,203,8,"result"],[413,20,203,14],[413,21,203,15,"address_components"],[413,39,203,8],[413,40,203,34,"forEach"],[413,47,203,8],[413,48,203,42],[413,58,203,42,"component"],[413,67,203,51],[413,69,203,55],[414,0,204,12],[414,20,204,16,"component"],[414,29,204,25],[414,30,204,26,"types"],[414,35,204,16],[414,36,204,32,"includes"],[414,44,204,16],[414,45,204,41],[414,55,204,16],[414,56,204,12],[414,58,204,54],[415,0,205,16,"address"],[415,18,205,16,"address"],[415,25,205,23],[415,26,205,24,"city"],[415,30,205,16],[415,33,205,31,"component"],[415,42,205,40],[415,43,205,41,"long_name"],[415,52,205,16],[416,0,206,13],[416,17,204,12],[416,23,207,17],[416,27,207,21,"component"],[416,36,207,30],[416,37,207,31,"types"],[416,42,207,21],[416,43,207,37,"includes"],[416,51,207,21],[416,52,207,46],[416,68,207,21],[416,69,207,17],[416,71,207,65],[417,0,208,16,"address"],[417,18,208,16,"address"],[417,25,208,23],[417,26,208,24,"street"],[417,32,208,16],[417,35,208,33,"component"],[417,44,208,42],[417,45,208,43,"long_name"],[417,54,208,16],[418,0,209,13],[418,17,207,17],[418,23,210,17],[418,27,210,21,"component"],[418,36,210,30],[418,37,210,31,"types"],[418,42,210,21],[418,43,210,37,"includes"],[418,51,210,21],[418,52,210,46],[418,81,210,21],[418,82,210,17],[418,84,210,78],[419,0,211,16,"address"],[419,18,211,16,"address"],[419,25,211,23],[419,26,211,24,"region"],[419,32,211,16],[419,35,211,33,"component"],[419,44,211,42],[419,45,211,43,"long_name"],[419,54,211,16],[420,0,212,13],[420,17,210,17],[420,23,213,17],[420,27,213,21,"component"],[420,36,213,30],[420,37,213,31,"types"],[420,42,213,21],[420,43,213,37,"includes"],[420,51,213,21],[420,52,213,46],[420,61,213,21],[420,62,213,17],[420,64,213,58],[421,0,214,16,"address"],[421,18,214,16,"address"],[421,25,214,23],[421,26,214,24,"country"],[421,33,214,16],[421,36,214,34,"component"],[421,45,214,43],[421,46,214,44,"long_name"],[421,55,214,16],[422,0,215,13],[422,17,213,17],[422,23,216,17],[422,27,216,21,"component"],[422,36,216,30],[422,37,216,31,"types"],[422,42,216,21],[422,43,216,37,"includes"],[422,51,216,21],[422,52,216,46],[422,65,216,21],[422,66,216,17],[422,68,216,62],[423,0,217,16,"address"],[423,18,217,16,"address"],[423,25,217,23],[423,26,217,24,"postalCode"],[423,36,217,16],[423,39,217,37,"component"],[423,48,217,46],[423,49,217,47,"long_name"],[423,58,217,16],[424,0,218,13],[424,17,216,17],[424,23,219,17],[424,27,219,21,"component"],[424,36,219,30],[424,37,219,31,"types"],[424,42,219,21],[424,43,219,37,"includes"],[424,51,219,21],[424,52,219,46],[424,71,219,21],[424,72,219,17],[424,74,219,68],[425,0,220,16,"address"],[425,18,220,16,"address"],[425,25,220,23],[425,26,220,24,"name"],[425,30,220,16],[425,33,220,31,"component"],[425,42,220,40],[425,43,220,41,"long_name"],[425,52,220,16],[426,0,221,13],[427,0,222,9],[427,15,203,8],[428,0,223,8],[428,21,223,15,"address"],[428,28,223,8],[429,0,224,5],[429,13,201,11],[429,14,195,0],[431,0,195,0],[432,0,195,0],[433,0,195,0],[434,0,195,0],[435,0,195,0],[436,0,195,0],[437,0,195,0],[439,0,227,0],[439,11,227,9,"watchPosition"],[439,24,227,0],[439,25,227,23,"success"],[439,32,227,0],[439,34,227,32,"error"],[439,39,227,0],[439,41,227,39,"options"],[439,48,227,0],[439,50,227,48],[440,0,228,4,"_maybeInitializeEmitterSubscription"],[440,4,228,4,"_maybeInitializeEmitterSubscription"],[440,39,228,39],[442,0,229,4],[442,8,229,10,"watchId"],[442,15,229,17],[442,18,229,20,"_getNextWatchId"],[442,33,229,35],[442,35,229,4],[444,0,230,4,"watchCallbacks"],[444,4,230,4,"watchCallbacks"],[444,18,230,18],[444,19,230,19,"watchId"],[444,26,230,18],[444,27,230,4],[444,30,230,30,"success"],[444,37,230,4],[446,0,231,4,"ExpoLocation"],[446,26,231,17,"watchPositionImplAsync"],[446,48,231,4],[446,49,231,40,"watchId"],[446,56,231,4],[446,58,231,49,"options"],[446,65,231,4],[446,67,231,58,"catch"],[446,72,231,4],[446,73,231,64],[446,83,231,64,"err"],[446,86,231,67],[446,88,231,71],[447,0,232,8,"_removeWatcher"],[447,6,232,8,"_removeWatcher"],[447,20,232,22],[447,21,232,23,"watchId"],[447,28,232,22],[447,29,232,8],[449,0,233,8,"error"],[449,6,233,8,"error"],[449,11,233,13],[449,12,233,14],[450,0,233,16,"watchId"],[450,8,233,16,"watchId"],[450,15,233,23],[450,17,233,16,"watchId"],[450,24,233,14],[451,0,233,25,"message"],[451,8,233,25,"message"],[451,15,233,32],[451,17,233,34,"err"],[451,20,233,37],[451,21,233,38,"message"],[451,28,233,14],[452,0,233,47,"code"],[452,8,233,47,"code"],[452,12,233,51],[452,14,233,53,"err"],[452,17,233,56],[452,18,233,57,"code"],[453,0,233,14],[453,7,233,13],[453,8,233,8],[454,0,234,5],[454,5,231,4],[456,0,235,4],[456,11,235,11,"watchId"],[456,18,235,4],[457,0,236,1],[459,0,237,7],[459,11,237,22,"watchPositionAsync"],[459,29,237,7],[459,30,237,41,"options"],[459,37,237,7],[459,39,237,50,"callback"],[459,47,237,7],[460,0,237,7],[461,0,237,7],[462,0,237,7],[463,0,237,7],[464,0,237,7],[465,0,238,4,"_maybeInitializeEmitterSubscription"],[465,12,238,4,"_maybeInitializeEmitterSubscription"],[465,47,238,39],[467,0,239,10,"watchId"],[467,12,239,10,"watchId"],[467,19,237,7],[467,22,239,20,"_getNextWatchId"],[467,37,239,35],[467,39,237,7],[468,0,240,4,"watchCallbacks"],[468,12,240,4,"watchCallbacks"],[468,26,240,18],[468,27,240,19,"watchId"],[468,34,240,18],[468,35,240,4],[468,38,240,30,"callback"],[468,46,240,4],[469,0,237,7],[470,0,237,7],[470,46,241,10,"ExpoLocation"],[470,68,241,23,"watchPositionImplAsync"],[470,90,241,10],[470,91,241,46,"watchId"],[470,98,241,10],[470,100,241,55,"options"],[470,107,241,10],[470,108,237,7],[472,0,237,7],[473,0,237,7],[473,47,242,11],[474,0,243,8,"remove"],[474,14,243,8,"remove"],[474,20,242,11],[474,40,243,17],[475,0,244,12,"_removeWatcher"],[475,16,244,12,"_removeWatcher"],[475,30,244,26],[475,31,244,27,"watchId"],[475,38,244,26],[475,39,244,12],[476,0,245,9],[477,0,242,11],[477,13,237,7],[479,0,237,7],[480,0,237,7],[481,0,237,7],[482,0,237,7],[483,0,237,7],[484,0,237,7],[485,0,237,7],[487,0,249,0],[487,11,249,9,"clearWatch"],[487,21,249,0],[487,22,249,20,"watchId"],[487,29,249,0],[487,31,249,29],[488,0,250,4,"_removeWatcher"],[488,4,250,4,"_removeWatcher"],[488,18,250,18],[488,19,250,19,"watchId"],[488,26,250,18],[488,27,250,4],[489,0,251,1],[491,0,252,0],[491,11,252,9,"_removeWatcher"],[491,25,252,0],[491,26,252,24,"watchId"],[491,33,252,0],[491,35,252,33],[492,0,254,4],[492,8,254,8],[492,9,254,9,"watchCallbacks"],[492,23,254,23],[492,24,254,24,"watchId"],[492,31,254,23],[492,32,254,4],[492,34,254,34],[493,0,255,8],[494,0,256,5],[496,0,257,4,"ExpoLocation"],[496,26,257,17,"removeWatchAsync"],[496,42,257,4],[496,43,257,34,"watchId"],[496,50,257,4],[498,0,258,4],[498,11,258,11,"watchCallbacks"],[498,25,258,25],[498,26,258,26,"watchId"],[498,33,258,25],[498,34,258,4],[500,0,259,4],[500,8,259,8,"Object"],[500,14,259,14],[500,15,259,15,"keys"],[500,19,259,8],[500,20,259,20,"watchCallbacks"],[500,34,259,8],[500,36,259,36,"length"],[500,42,259,8],[500,47,259,47],[500,48,259,8],[500,52,259,52,"deviceEventSubscription"],[500,75,259,4],[500,77,259,77],[501,0,260,8,"LocationEventEmitter"],[501,6,260,8,"LocationEventEmitter"],[501,26,260,28],[501,27,260,29,"removeSubscription"],[501,45,260,8],[501,46,260,48,"deviceEventSubscription"],[501,69,260,8],[502,0,261,8,"deviceEventSubscription"],[502,6,261,8,"deviceEventSubscription"],[502,29,261,31],[502,32,261,34],[502,36,261,8],[503,0,262,5],[504,0,263,1],[506,0,264,0],[506,11,264,9,"getCurrentPosition"],[506,29,264,0],[506,30,264,28,"success"],[506,37,264,0],[506,39,264,70],[507,0,264,70],[507,8,264,37,"error"],[507,13,264,70],[507,84,264,45],[507,96,264,51],[507,97,264,54],[507,98,264,70],[508,0,264,70],[508,8,264,56,"options"],[508,15,264,70],[508,86,264,66],[508,88,264,70],[509,0,265,4],[509,28,265,14],[509,35,265,21,"success"],[509,42,265,14],[509,47,265,33],[509,57,265,4],[509,59,265,45],[509,99,265,4],[510,0,266,4],[510,28,266,14],[510,35,266,21,"options"],[510,42,266,14],[510,47,266,33],[510,55,266,4],[510,57,266,43],[510,85,266,4],[512,0,267,4,"_getCurrentPositionAsyncWrapper"],[512,4,267,4,"_getCurrentPositionAsyncWrapper"],[512,35,267,35],[512,36,267,36,"success"],[512,43,267,35],[512,45,267,45,"error"],[512,50,267,35],[512,52,267,52,"options"],[512,59,267,35],[512,60,267,4],[513,0,268,1],[515,0,271,0],[515,11,271,15,"_getCurrentPositionAsyncWrapper"],[515,42,271,0],[515,43,271,47,"success"],[515,50,271,0],[515,52,271,56,"error"],[515,57,271,0],[515,59,271,63,"options"],[515,66,271,0],[516,0,271,0],[517,0,271,0],[518,0,271,0],[519,0,271,0],[520,0,271,0],[521,0,271,0],[522,0,271,0],[523,0,271,0],[523,46,273,14,"ExpoLocation"],[523,68,273,27,"requestPermissionsAsync"],[523,91,273,14],[523,93,271,0],[525,0,271,0],[526,0,271,0],[527,0,271,0],[527,46,274,29,"getCurrentPositionAsync"],[527,69,274,52],[527,70,274,53,"options"],[527,77,274,52],[527,78,271,0],[529,0,271,0],[530,0,274,14,"result"],[530,12,274,14,"result"],[530,18,271,0],[531,0,275,8,"success"],[531,12,275,8,"success"],[531,19,275,15],[531,20,275,16,"result"],[531,26,275,15],[531,27,275,8],[532,0,271,0],[533,0,271,0],[535,0,271,0],[536,0,271,0],[537,0,271,0],[538,0,278,8,"error"],[538,12,278,8,"error"],[538,17,278,13],[538,32,278,8],[540,0,271,0],[541,0,271,0],[542,0,271,0],[543,0,271,0],[544,0,271,0],[545,0,271,0],[546,0,271,0],[548,0,281,7],[548,11,281,22,"requestPermissionsAsync"],[548,34,281,7],[549,0,281,7],[550,0,281,7],[551,0,281,7],[552,0,281,7],[553,0,281,7],[554,0,281,7],[554,46,282,10,"ExpoLocation"],[554,68,282,23,"requestPermissionsAsync"],[554,91,282,10],[554,93,281,7],[556,0,281,7],[557,0,281,7],[558,0,281,7],[559,0,281,7],[560,0,281,7],[561,0,281,7],[562,0,281,7],[564,0,285,7],[564,11,285,22,"hasServicesEnabledAsync"],[564,34,285,7],[565,0,285,7],[566,0,285,7],[567,0,285,7],[568,0,285,7],[569,0,285,7],[570,0,285,7],[570,46,286,17,"ExpoLocation"],[570,68,286,30,"hasServicesEnabledAsync"],[570,91,286,17],[570,93,285,7],[572,0,285,7],[573,0,285,7],[575,0,285,7],[576,0,285,7],[577,0,285,7],[578,0,285,7],[579,0,285,7],[580,0,285,7],[581,0,285,7],[583,0,289,0],[583,11,289,9,"_validateTaskName"],[583,28,289,0],[583,29,289,27,"taskName"],[583,37,289,0],[583,39,289,37],[584,0,290,4],[584,28,290,14,"taskName"],[584,36,290,22],[584,40,290,26],[584,47,290,33,"taskName"],[584,55,290,26],[584,60,290,46],[584,68,290,4],[584,70,290,56],[584,110,290,4],[585,0,291,1],[587,0,292,7],[587,11,292,22,"startLocationUpdatesAsync"],[587,36,292,7],[587,37,292,48,"taskName"],[587,45,292,7],[588,0,292,7],[589,0,292,7],[590,0,292,7],[591,0,292,7],[592,0,292,7],[593,0,292,7],[594,0,292,58,"options"],[594,12,292,58,"options"],[594,19,292,7],[594,84,292,68],[595,0,292,70,"accuracy"],[595,14,292,70,"accuracy"],[595,22,292,78],[595,24,292,80,"LocationAccuracy"],[595,40,292,96],[595,41,292,97,"Balanced"],[596,0,292,68],[596,13,292,7],[598,0,293,4,"_validateTaskName"],[598,12,293,4,"_validateTaskName"],[598,29,293,21],[598,30,293,22,"taskName"],[598,38,293,21],[598,39,293,4],[600,0,292,7],[601,0,292,7],[601,46,294,10,"ExpoLocation"],[601,68,294,23,"startLocationUpdatesAsync"],[601,93,294,10],[601,94,294,49,"taskName"],[601,102,294,10],[601,104,294,59,"options"],[601,111,294,10],[601,112,292,7],[603,0,292,7],[604,0,292,7],[605,0,292,7],[606,0,292,7],[607,0,292,7],[608,0,292,7],[609,0,292,7],[611,0,296,7],[611,11,296,22,"stopLocationUpdatesAsync"],[611,35,296,7],[611,36,296,47,"taskName"],[611,44,296,7],[612,0,296,7],[613,0,296,7],[614,0,296,7],[615,0,296,7],[616,0,297,4,"_validateTaskName"],[616,12,297,4,"_validateTaskName"],[616,29,297,21],[616,30,297,22,"taskName"],[616,38,297,21],[616,39,297,4],[618,0,296,7],[619,0,296,7],[619,46,298,10,"ExpoLocation"],[619,68,298,23,"stopLocationUpdatesAsync"],[619,92,298,10],[619,93,298,48,"taskName"],[619,101,298,10],[619,102,296,7],[621,0,296,7],[622,0,296,7],[623,0,296,7],[624,0,296,7],[625,0,296,7],[626,0,296,7],[627,0,296,7],[629,0,300,7],[629,11,300,22,"hasStartedLocationUpdatesAsync"],[629,41,300,7],[629,42,300,53,"taskName"],[629,50,300,7],[630,0,300,7],[631,0,300,7],[632,0,300,7],[633,0,300,7],[634,0,301,4,"_validateTaskName"],[634,12,301,4,"_validateTaskName"],[634,29,301,21],[634,30,301,22,"taskName"],[634,38,301,21],[634,39,301,4],[636,0,300,7],[636,47,302,11,"ExpoLocation"],[636,69,302,24,"hasStartedLocationUpdatesAsync"],[636,99,302,11],[636,100,302,55,"taskName"],[636,108,302,11],[636,109,300,7],[638,0,300,7],[639,0,300,7],[640,0,300,7],[641,0,300,7],[642,0,300,7],[643,0,300,7],[644,0,300,7],[646,0,305,0],[646,11,305,9,"_validateRegions"],[646,27,305,0],[646,28,305,26,"regions"],[646,35,305,0],[646,37,305,35],[647,0,306,4],[647,8,306,8],[647,9,306,9,"regions"],[647,16,306,8],[647,20,306,20,"regions"],[647,27,306,27],[647,28,306,28,"length"],[647,34,306,20],[647,39,306,39],[647,40,306,4],[647,42,306,42],[648,0,307,8],[648,12,307,14],[648,16,307,18,"Error"],[648,21,307,14],[648,22,307,24],[648,123,307,14],[648,124,307,8],[649,0,308,5],[651,0,309,4],[651,25,309,25,"regions"],[651,32,309,4],[651,192,309,34],[652,0,309,34],[654,0,309,34],[655,0,309,34],[656,0,309,34],[657,0,309,34],[658,0,309,34],[659,0,309,34],[660,0,309,34],[661,0,309,34],[663,0,309,34],[663,10,309,15,"region"],[663,17,309,34],[665,0,310,8],[665,10,310,12],[665,17,310,19,"region"],[665,24,310,25],[665,25,310,26,"latitude"],[665,33,310,12],[665,38,310,39],[665,46,310,8],[665,48,310,49],[666,0,311,12],[666,14,311,18],[666,18,311,22,"TypeError"],[666,27,311,18],[666,74,311,76,"region"],[666,81,311,82],[666,82,311,83,"latitude"],[666,90,311,18],[666,106,311,12],[667,0,312,9],[669,0,313,8],[669,10,313,12],[669,17,313,19,"region"],[669,24,313,25],[669,25,313,26,"longitude"],[669,34,313,12],[669,39,313,40],[669,47,313,8],[669,49,313,50],[670,0,314,12],[670,14,314,18],[670,18,314,22,"TypeError"],[670,27,314,18],[670,75,314,77,"region"],[670,82,314,83],[670,83,314,84,"longitude"],[670,92,314,18],[670,108,314,12],[671,0,315,9],[673,0,316,8],[673,10,316,12],[673,17,316,19,"region"],[673,24,316,25],[673,25,316,26,"radius"],[673,31,316,12],[673,36,316,37],[673,44,316,8],[673,46,316,47],[674,0,317,12],[674,14,317,18],[674,18,317,22,"TypeError"],[674,27,317,18],[674,72,317,74,"region"],[674,79,317,80],[674,80,317,81,"radius"],[674,86,317,18],[674,102,317,12],[675,0,318,9],[676,0,319,5],[677,0,320,1],[679,0,321,7],[679,11,321,22,"startGeofencingAsync"],[679,31,321,7],[679,32,321,43,"taskName"],[679,40,321,7],[680,0,321,7],[681,0,321,7],[682,0,321,7],[683,0,321,7],[684,0,321,7],[685,0,321,7],[686,0,321,53,"regions"],[686,12,321,53,"regions"],[686,19,321,7],[686,84,321,63],[686,86,321,7],[688,0,322,4,"_validateTaskName"],[688,12,322,4,"_validateTaskName"],[688,29,322,21],[688,30,322,22,"taskName"],[688,38,322,21],[688,39,322,4],[690,0,323,4,"_validateRegions"],[690,12,323,4,"_validateRegions"],[690,28,323,20],[690,29,323,21,"regions"],[690,36,323,20],[690,37,323,4],[692,0,321,7],[693,0,321,7],[693,46,324,10,"ExpoLocation"],[693,68,324,23,"startGeofencingAsync"],[693,88,324,10],[693,89,324,44,"taskName"],[693,97,324,10],[693,99,324,54],[694,0,324,56,"regions"],[694,14,324,56,"regions"],[694,21,324,63],[694,23,324,56,"regions"],[695,0,324,54],[695,13,324,10],[695,14,321,7],[697,0,321,7],[698,0,321,7],[699,0,321,7],[700,0,321,7],[701,0,321,7],[702,0,321,7],[703,0,321,7],[705,0,326,7],[705,11,326,22,"stopGeofencingAsync"],[705,30,326,7],[705,31,326,42,"taskName"],[705,39,326,7],[706,0,326,7],[707,0,326,7],[708,0,326,7],[709,0,326,7],[710,0,327,4,"_validateTaskName"],[710,12,327,4,"_validateTaskName"],[710,29,327,21],[710,30,327,22,"taskName"],[710,38,327,21],[710,39,327,4],[712,0,326,7],[713,0,326,7],[713,46,328,10,"ExpoLocation"],[713,68,328,23,"stopGeofencingAsync"],[713,87,328,10],[713,88,328,43,"taskName"],[713,96,328,10],[713,97,326,7],[715,0,326,7],[716,0,326,7],[717,0,326,7],[718,0,326,7],[719,0,326,7],[720,0,326,7],[721,0,326,7],[723,0,330,7],[723,11,330,22,"hasStartedGeofencingAsync"],[723,36,330,7],[723,37,330,48,"taskName"],[723,45,330,7],[724,0,330,7],[725,0,330,7],[726,0,330,7],[727,0,330,7],[728,0,331,4,"_validateTaskName"],[728,12,331,4,"_validateTaskName"],[728,29,331,21],[728,30,331,22,"taskName"],[728,38,331,21],[728,39,331,4],[730,0,330,7],[730,47,332,11,"ExpoLocation"],[730,69,332,24,"hasStartedGeofencingAsync"],[730,94,332,11],[730,95,332,50,"taskName"],[730,103,332,11],[730,104,330,7],[732,0,330,7],[733,0,330,7],[734,0,330,7],[735,0,330,7],[736,0,330,7],[737,0,330,7],[738,0,330,7],[740,0,334,7],[740,11,334,16,"installWebGeolocationPolyfill"],[740,40,334,7],[740,43,334,48],[741,0,335,4],[741,8,335,8,"Platform"],[741,27,335,17,"OS"],[741,29,335,8],[741,34,335,24],[741,39,335,4],[741,41,335,31],[742,0,339,8,"window"],[742,6,339,8,"window"],[742,12,339,14],[742,13,339,15,"navigator"],[742,22,339,8],[742,23,339,25,"geolocation"],[742,34,339,8],[742,37,339,39],[743,0,340,12,"getCurrentPosition"],[743,8,340,12,"getCurrentPosition"],[743,26,340,30],[743,28,340,12,"getCurrentPosition"],[743,46,339,39],[744,0,341,12,"watchPosition"],[744,8,341,12,"watchPosition"],[744,21,341,25],[744,23,341,12,"watchPosition"],[744,36,339,39],[745,0,342,12,"clearWatch"],[745,8,342,12,"clearWatch"],[745,18,342,22],[745,20,342,12,"clearWatch"],[745,30,339,39],[746,0,345,12,"stopObserving"],[746,8,345,12,"stopObserving"],[746,21,345,25],[746,23,345,27],[746,48,345,33],[746,49,345,36],[747,0,339,39],[747,7,339,8],[748,0,347,5],[749,0,348,1]]},"type":"js/module"}]}