{"version":3,"sources":["StyleSheetValidation.js"],"names":["ImageStylePropTypes","require","TextStylePropTypes","ViewStylePropTypes","invariant","ReactPropTypesSecret","StyleSheetValidation","prop","style","caller","__DEV__","allStylePropTypes","undefined","message1","message2","JSON","stringify","Object","keys","sort","styleError","error","message","name","styles","validateStyleProp","stylePropTypes","key","addValidStylePropTypes","module","exports"],"mappings":"AAUA;;;;;;;;AAEA,IAAMA,mBAAmB,GAAGC,OAAO,gCAAnC;;AACA,IAAMC,kBAAkB,GAAGD,OAAO,8BAAlC;;AACA,IAAME,kBAAkB,GAAGF,OAAO,yCAAlC;;AAEA,IAAMG,SAAS,GAAGH,OAAO,CAAC,oBAAD,CAAzB;;AAMA,IAAMI,oBAAoB,GAAG,8CAA7B;;IAEMC,oB;;;;;;;sCACqBC,I,EAAcC,K,EAAeC,M,EAAgB;AACpE,UAAI,CAACC,OAAL,EAAc;AACZ;AACD;;AACD,UAAIC,iBAAiB,CAACJ,IAAD,CAAjB,KAA4BK,SAAhC,EAA2C;AACzC,YAAMC,QAAQ,GAAG,MAAMN,IAAN,GAAa,kCAA9B;AACA,YAAMO,QAAQ,GACZ,0BACAC,IAAI,CAACC,SAAL,CAAeC,MAAM,CAACC,IAAP,CAAYP,iBAAZ,EAA+BQ,IAA/B,EAAf,EAAsD,IAAtD,EAA4D,IAA5D,CAFF;AAGAC,QAAAA,UAAU,CAACP,QAAD,EAAWL,KAAX,EAAkBC,MAAlB,EAA0BK,QAA1B,CAAV;AACD;;AACD,UAAMO,KAAK,GAAGV,iBAAiB,CAACJ,IAAD,CAAjB,CACZC,KADY,EAEZD,IAFY,EAGZE,MAHY,EAIZ,MAJY,EAKZ,IALY,EAMZJ,oBANY,CAAd;;AAQA,UAAIgB,KAAJ,EAAW;AACTD,QAAAA,UAAU,CAACC,KAAK,CAACC,OAAP,EAAgBd,KAAhB,EAAuBC,MAAvB,CAAV;AACD;AACF;;;kCAEoBc,I,EAAcC,M,EAAgB;AACjD,UAAI,CAACd,OAAL,EAAc;AACZ;AACD;;AACD,WAAK,IAAMH,IAAX,IAAmBiB,MAAM,CAACD,IAAD,CAAzB,EAAiC;AAC/BjB,QAAAA,oBAAoB,CAACmB,iBAArB,CACElB,IADF,EAEEiB,MAAM,CAACD,IAAD,CAFR,EAGE,gBAAgBA,IAHlB;AAKD;AACF;;;2CAE6BG,c,EAAgB;AAC5C,WAAK,IAAMC,GAAX,IAAkBD,cAAlB,EAAkC;AAChCf,QAAAA,iBAAiB,CAACgB,GAAD,CAAjB,GAAyBD,cAAc,CAACC,GAAD,CAAvC;AACD;AACF;;;;;AAGH,IAAMP,UAAU,GAAG,SAAbA,UAAa,CAASP,QAAT,EAAmBL,KAAnB,EAA0BC,MAA1B,EAAmCK,QAAnC,EAA8C;AAC/DV,EAAAA,SAAS,CACP,KADO,EAEPS,QAAQ,GACN,IADF,IAEGJ,MAAM,IAAI,aAFb,IAGE,IAHF,GAIEM,IAAI,CAACC,SAAL,CAAeR,KAAf,EAAsB,IAAtB,EAA4B,IAA5B,CAJF,IAKGM,QAAQ,IAAI,EALf,CAFO,CAAT;AASD,CAVD;;AAYA,IAAMH,iBAAiB,GAAG,EAA1B;AAEAL,oBAAoB,CAACsB,sBAArB,CAA4C5B,mBAA5C;AACAM,oBAAoB,CAACsB,sBAArB,CAA4C1B,kBAA5C;AACAI,oBAAoB,CAACsB,sBAArB,CAA4CzB,kBAA5C;AAEA0B,MAAM,CAACC,OAAP,GAAiBxB,oBAAjB","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\n'use strict';\n\nconst ImageStylePropTypes = require('../Image/ImageStylePropTypes');\nconst TextStylePropTypes = require('../Text/TextStylePropTypes');\nconst ViewStylePropTypes = require('../Components/View/ViewStylePropTypes');\n\nconst invariant = require('fbjs/lib/invariant');\n\n// Hardcoded because this is a legit case but we don't want to load it from\n// a private API. We might likely want to unify style sheet creation with how it\n// is done in the DOM so this might move into React. I know what I'm doing so\n// plz don't fire me.\nconst ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nclass StyleSheetValidation {\n  static validateStyleProp(prop: string, style: Object, caller: string) {\n    if (!__DEV__) {\n      return;\n    }\n    if (allStylePropTypes[prop] === undefined) {\n      const message1 = '\"' + prop + '\" is not a valid style property.';\n      const message2 =\n        '\\nValid style props: ' +\n        JSON.stringify(Object.keys(allStylePropTypes).sort(), null, '  ');\n      styleError(message1, style, caller, message2);\n    }\n    const error = allStylePropTypes[prop](\n      style,\n      prop,\n      caller,\n      'prop',\n      null,\n      ReactPropTypesSecret,\n    );\n    if (error) {\n      styleError(error.message, style, caller);\n    }\n  }\n\n  static validateStyle(name: string, styles: Object) {\n    if (!__DEV__) {\n      return;\n    }\n    for (const prop in styles[name]) {\n      StyleSheetValidation.validateStyleProp(\n        prop,\n        styles[name],\n        'StyleSheet ' + name,\n      );\n    }\n  }\n\n  static addValidStylePropTypes(stylePropTypes) {\n    for (const key in stylePropTypes) {\n      allStylePropTypes[key] = stylePropTypes[key];\n    }\n  }\n}\n\nconst styleError = function(message1, style, caller?, message2?) {\n  invariant(\n    false,\n    message1 +\n      '\\n' +\n      (caller || '<<unknown>>') +\n      ': ' +\n      JSON.stringify(style, null, '  ') +\n      (message2 || ''),\n  );\n};\n\nconst allStylePropTypes = {};\n\nStyleSheetValidation.addValidStylePropTypes(ImageStylePropTypes);\nStyleSheetValidation.addValidStylePropTypes(TextStylePropTypes);\nStyleSheetValidation.addValidStylePropTypes(ViewStylePropTypes);\n\nmodule.exports = StyleSheetValidation;\n"]}