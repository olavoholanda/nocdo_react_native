020cacaaacae66854307d65bfb3c2378
'use strict';

var Promise = require("./core.js");

module.exports = Promise;

Promise.enableSynchronous = function () {
  Promise.prototype.isPending = function () {
    return this.getState() == 0;
  };

  Promise.prototype.isFulfilled = function () {
    return this.getState() == 1;
  };

  Promise.prototype.isRejected = function () {
    return this.getState() == 2;
  };

  Promise.prototype.getValue = function () {
    if (this._65 === 3) {
      return this._55.getValue();
    }

    if (!this.isFulfilled()) {
      throw new Error('Cannot get a value of an unfulfilled promise.');
    }

    return this._55;
  };

  Promise.prototype.getReason = function () {
    if (this._65 === 3) {
      return this._55.getReason();
    }

    if (!this.isRejected()) {
      throw new Error('Cannot get a rejection reason of a non-rejected promise.');
    }

    return this._55;
  };

  Promise.prototype.getState = function () {
    if (this._65 === 3) {
      return this._55.getState();
    }

    if (this._65 === -1 || this._65 === -2) {
      return 0;
    }

    return this._65;
  };
};

Promise.disableSynchronous = function () {
  Promise.prototype.isPending = undefined;
  Promise.prototype.isFulfilled = undefined;
  Promise.prototype.isRejected = undefined;
  Promise.prototype.getValue = undefined;
  Promise.prototype.getReason = undefined;
  Promise.prototype.getState = undefined;
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN5bmNocm9ub3VzLmpzIl0sIm5hbWVzIjpbIlByb21pc2UiLCJyZXF1aXJlIiwibW9kdWxlIiwiZXhwb3J0cyIsImVuYWJsZVN5bmNocm9ub3VzIiwicHJvdG90eXBlIiwiaXNQZW5kaW5nIiwiZ2V0U3RhdGUiLCJpc0Z1bGZpbGxlZCIsImlzUmVqZWN0ZWQiLCJnZXRWYWx1ZSIsIl82NSIsIl81NSIsIkVycm9yIiwiZ2V0UmVhc29uIiwiZGlzYWJsZVN5bmNocm9ub3VzIiwidW5kZWZpbmVkIl0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQSxJQUFJQSxPQUFPLEdBQUdDLE9BQU8sYUFBckI7O0FBRUFDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQkgsT0FBakI7O0FBQ0FBLE9BQU8sQ0FBQ0ksaUJBQVIsR0FBNEIsWUFBWTtBQUN0Q0osRUFBQUEsT0FBTyxDQUFDSyxTQUFSLENBQWtCQyxTQUFsQixHQUE4QixZQUFXO0FBQ3ZDLFdBQU8sS0FBS0MsUUFBTCxNQUFtQixDQUExQjtBQUNELEdBRkQ7O0FBSUFQLEVBQUFBLE9BQU8sQ0FBQ0ssU0FBUixDQUFrQkcsV0FBbEIsR0FBZ0MsWUFBVztBQUN6QyxXQUFPLEtBQUtELFFBQUwsTUFBbUIsQ0FBMUI7QUFDRCxHQUZEOztBQUlBUCxFQUFBQSxPQUFPLENBQUNLLFNBQVIsQ0FBa0JJLFVBQWxCLEdBQStCLFlBQVc7QUFDeEMsV0FBTyxLQUFLRixRQUFMLE1BQW1CLENBQTFCO0FBQ0QsR0FGRDs7QUFJQVAsRUFBQUEsT0FBTyxDQUFDSyxTQUFSLENBQWtCSyxRQUFsQixHQUE2QixZQUFZO0FBQ3ZDLFFBQUksS0FBS0MsR0FBTCxLQUFhLENBQWpCLEVBQW9CO0FBQ2xCLGFBQU8sS0FBS0MsR0FBTCxDQUFTRixRQUFULEVBQVA7QUFDRDs7QUFFRCxRQUFJLENBQUMsS0FBS0YsV0FBTCxFQUFMLEVBQXlCO0FBQ3ZCLFlBQU0sSUFBSUssS0FBSixDQUFVLCtDQUFWLENBQU47QUFDRDs7QUFFRCxXQUFPLEtBQUtELEdBQVo7QUFDRCxHQVZEOztBQVlBWixFQUFBQSxPQUFPLENBQUNLLFNBQVIsQ0FBa0JTLFNBQWxCLEdBQThCLFlBQVk7QUFDeEMsUUFBSSxLQUFLSCxHQUFMLEtBQWEsQ0FBakIsRUFBb0I7QUFDbEIsYUFBTyxLQUFLQyxHQUFMLENBQVNFLFNBQVQsRUFBUDtBQUNEOztBQUVELFFBQUksQ0FBQyxLQUFLTCxVQUFMLEVBQUwsRUFBd0I7QUFDdEIsWUFBTSxJQUFJSSxLQUFKLENBQVUsMERBQVYsQ0FBTjtBQUNEOztBQUVELFdBQU8sS0FBS0QsR0FBWjtBQUNELEdBVkQ7O0FBWUFaLEVBQUFBLE9BQU8sQ0FBQ0ssU0FBUixDQUFrQkUsUUFBbEIsR0FBNkIsWUFBWTtBQUN2QyxRQUFJLEtBQUtJLEdBQUwsS0FBYSxDQUFqQixFQUFvQjtBQUNsQixhQUFPLEtBQUtDLEdBQUwsQ0FBU0wsUUFBVCxFQUFQO0FBQ0Q7O0FBQ0QsUUFBSSxLQUFLSSxHQUFMLEtBQWEsQ0FBQyxDQUFkLElBQW1CLEtBQUtBLEdBQUwsS0FBYSxDQUFDLENBQXJDLEVBQXdDO0FBQ3RDLGFBQU8sQ0FBUDtBQUNEOztBQUVELFdBQU8sS0FBS0EsR0FBWjtBQUNELEdBVEQ7QUFVRCxDQS9DRDs7QUFpREFYLE9BQU8sQ0FBQ2Usa0JBQVIsR0FBNkIsWUFBVztBQUN0Q2YsRUFBQUEsT0FBTyxDQUFDSyxTQUFSLENBQWtCQyxTQUFsQixHQUE4QlUsU0FBOUI7QUFDQWhCLEVBQUFBLE9BQU8sQ0FBQ0ssU0FBUixDQUFrQkcsV0FBbEIsR0FBZ0NRLFNBQWhDO0FBQ0FoQixFQUFBQSxPQUFPLENBQUNLLFNBQVIsQ0FBa0JJLFVBQWxCLEdBQStCTyxTQUEvQjtBQUNBaEIsRUFBQUEsT0FBTyxDQUFDSyxTQUFSLENBQWtCSyxRQUFsQixHQUE2Qk0sU0FBN0I7QUFDQWhCLEVBQUFBLE9BQU8sQ0FBQ0ssU0FBUixDQUFrQlMsU0FBbEIsR0FBOEJFLFNBQTlCO0FBQ0FoQixFQUFBQSxPQUFPLENBQUNLLFNBQVIsQ0FBa0JFLFFBQWxCLEdBQTZCUyxTQUE3QjtBQUNELENBUEQiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciBQcm9taXNlID0gcmVxdWlyZSgnLi9jb3JlLmpzJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gUHJvbWlzZTtcblByb21pc2UuZW5hYmxlU3luY2hyb25vdXMgPSBmdW5jdGlvbiAoKSB7XG4gIFByb21pc2UucHJvdG90eXBlLmlzUGVuZGluZyA9IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiB0aGlzLmdldFN0YXRlKCkgPT0gMDtcbiAgfTtcblxuICBQcm9taXNlLnByb3RvdHlwZS5pc0Z1bGZpbGxlZCA9IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiB0aGlzLmdldFN0YXRlKCkgPT0gMTtcbiAgfTtcblxuICBQcm9taXNlLnByb3RvdHlwZS5pc1JlamVjdGVkID0gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIHRoaXMuZ2V0U3RhdGUoKSA9PSAyO1xuICB9O1xuXG4gIFByb21pc2UucHJvdG90eXBlLmdldFZhbHVlID0gZnVuY3Rpb24gKCkge1xuICAgIGlmICh0aGlzLl82NSA9PT0gMykge1xuICAgICAgcmV0dXJuIHRoaXMuXzU1LmdldFZhbHVlKCk7XG4gICAgfVxuXG4gICAgaWYgKCF0aGlzLmlzRnVsZmlsbGVkKCkpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignQ2Fubm90IGdldCBhIHZhbHVlIG9mIGFuIHVuZnVsZmlsbGVkIHByb21pc2UuJyk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHRoaXMuXzU1O1xuICB9O1xuXG4gIFByb21pc2UucHJvdG90eXBlLmdldFJlYXNvbiA9IGZ1bmN0aW9uICgpIHtcbiAgICBpZiAodGhpcy5fNjUgPT09IDMpIHtcbiAgICAgIHJldHVybiB0aGlzLl81NS5nZXRSZWFzb24oKTtcbiAgICB9XG5cbiAgICBpZiAoIXRoaXMuaXNSZWplY3RlZCgpKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ0Nhbm5vdCBnZXQgYSByZWplY3Rpb24gcmVhc29uIG9mIGEgbm9uLXJlamVjdGVkIHByb21pc2UuJyk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHRoaXMuXzU1O1xuICB9O1xuXG4gIFByb21pc2UucHJvdG90eXBlLmdldFN0YXRlID0gZnVuY3Rpb24gKCkge1xuICAgIGlmICh0aGlzLl82NSA9PT0gMykge1xuICAgICAgcmV0dXJuIHRoaXMuXzU1LmdldFN0YXRlKCk7XG4gICAgfVxuICAgIGlmICh0aGlzLl82NSA9PT0gLTEgfHwgdGhpcy5fNjUgPT09IC0yKSB7XG4gICAgICByZXR1cm4gMDtcbiAgICB9XG5cbiAgICByZXR1cm4gdGhpcy5fNjU7XG4gIH07XG59O1xuXG5Qcm9taXNlLmRpc2FibGVTeW5jaHJvbm91cyA9IGZ1bmN0aW9uKCkge1xuICBQcm9taXNlLnByb3RvdHlwZS5pc1BlbmRpbmcgPSB1bmRlZmluZWQ7XG4gIFByb21pc2UucHJvdG90eXBlLmlzRnVsZmlsbGVkID0gdW5kZWZpbmVkO1xuICBQcm9taXNlLnByb3RvdHlwZS5pc1JlamVjdGVkID0gdW5kZWZpbmVkO1xuICBQcm9taXNlLnByb3RvdHlwZS5nZXRWYWx1ZSA9IHVuZGVmaW5lZDtcbiAgUHJvbWlzZS5wcm90b3R5cGUuZ2V0UmVhc29uID0gdW5kZWZpbmVkO1xuICBQcm9taXNlLnByb3RvdHlwZS5nZXRTdGF0ZSA9IHVuZGVmaW5lZDtcbn07XG4iXX0=