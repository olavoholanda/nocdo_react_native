3972b6b3b69fec37cb48eb0be3df00bc
'use strict';

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _get2 = _interopRequireDefault(require("@babel/runtime/helpers/get"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var EventEmitter = require("../vendor/emitter/EventEmitter");

var EventSubscriptionVendor = require("../vendor/emitter/EventSubscriptionVendor");

function checkNativeEventModule(eventType) {
  if (eventType) {
    if (eventType.lastIndexOf('statusBar', 0) === 0) {
      throw new Error('`' + eventType + '` event should be registered via the StatusBarIOS module');
    }

    if (eventType.lastIndexOf('keyboard', 0) === 0) {
      throw new Error('`' + eventType + '` event should be registered via the Keyboard module');
    }

    if (eventType === 'appStateDidChange' || eventType === 'memoryWarning') {
      throw new Error('`' + eventType + '` event should be registered via the AppState module');
    }
  }
}

var RCTDeviceEventEmitter = function (_EventEmitter) {
  (0, _inherits2.default)(RCTDeviceEventEmitter, _EventEmitter);

  function RCTDeviceEventEmitter() {
    var _this;

    (0, _classCallCheck2.default)(this, RCTDeviceEventEmitter);
    var sharedSubscriber = new EventSubscriptionVendor();
    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(RCTDeviceEventEmitter).call(this, sharedSubscriber));
    _this.sharedSubscriber = sharedSubscriber;
    return _this;
  }

  (0, _createClass2.default)(RCTDeviceEventEmitter, [{
    key: "addListener",
    value: function addListener(eventType, listener, context) {
      if (__DEV__) {
        checkNativeEventModule(eventType);
      }

      return (0, _get2.default)((0, _getPrototypeOf2.default)(RCTDeviceEventEmitter.prototype), "addListener", this).call(this, eventType, listener, context);
    }
  }, {
    key: "removeAllListeners",
    value: function removeAllListeners(eventType) {
      if (__DEV__) {
        checkNativeEventModule(eventType);
      }

      (0, _get2.default)((0, _getPrototypeOf2.default)(RCTDeviceEventEmitter.prototype), "removeAllListeners", this).call(this, eventType);
    }
  }, {
    key: "removeSubscription",
    value: function removeSubscription(subscription) {
      if (subscription.emitter !== this) {
        subscription.emitter.removeSubscription(subscription);
      } else {
        (0, _get2.default)((0, _getPrototypeOf2.default)(RCTDeviceEventEmitter.prototype), "removeSubscription", this).call(this, subscription);
      }
    }
  }]);
  return RCTDeviceEventEmitter;
}(EventEmitter);

module.exports = new RCTDeviceEventEmitter();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlJDVERldmljZUV2ZW50RW1pdHRlci5qcyJdLCJuYW1lcyI6WyJFdmVudEVtaXR0ZXIiLCJyZXF1aXJlIiwiRXZlbnRTdWJzY3JpcHRpb25WZW5kb3IiLCJjaGVja05hdGl2ZUV2ZW50TW9kdWxlIiwiZXZlbnRUeXBlIiwibGFzdEluZGV4T2YiLCJFcnJvciIsIlJDVERldmljZUV2ZW50RW1pdHRlciIsInNoYXJlZFN1YnNjcmliZXIiLCJsaXN0ZW5lciIsImNvbnRleHQiLCJfX0RFVl9fIiwic3Vic2NyaXB0aW9uIiwiZW1pdHRlciIsInJlbW92ZVN1YnNjcmlwdGlvbiIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQVVBOzs7Ozs7Ozs7Ozs7Ozs7O0FBRUEsSUFBTUEsWUFBWSxHQUFHQyxPQUFPLGtDQUE1Qjs7QUFDQSxJQUFNQyx1QkFBdUIsR0FBR0QsT0FBTyw2Q0FBdkM7O0FBSUEsU0FBU0Usc0JBQVQsQ0FBZ0NDLFNBQWhDLEVBQW9EO0FBQ2xELE1BQUlBLFNBQUosRUFBZTtBQUNiLFFBQUlBLFNBQVMsQ0FBQ0MsV0FBVixDQUFzQixXQUF0QixFQUFtQyxDQUFuQyxNQUEwQyxDQUE5QyxFQUFpRDtBQUMvQyxZQUFNLElBQUlDLEtBQUosQ0FDSixNQUNFRixTQURGLEdBRUUsMERBSEUsQ0FBTjtBQUtEOztBQUNELFFBQUlBLFNBQVMsQ0FBQ0MsV0FBVixDQUFzQixVQUF0QixFQUFrQyxDQUFsQyxNQUF5QyxDQUE3QyxFQUFnRDtBQUM5QyxZQUFNLElBQUlDLEtBQUosQ0FDSixNQUNFRixTQURGLEdBRUUsc0RBSEUsQ0FBTjtBQUtEOztBQUNELFFBQUlBLFNBQVMsS0FBSyxtQkFBZCxJQUFxQ0EsU0FBUyxLQUFLLGVBQXZELEVBQXdFO0FBQ3RFLFlBQU0sSUFBSUUsS0FBSixDQUNKLE1BQ0VGLFNBREYsR0FFRSxzREFIRSxDQUFOO0FBS0Q7QUFDRjtBQUNGOztJQU1LRyxxQjs7O0FBR0osbUNBQWM7QUFBQTs7QUFBQTtBQUNaLFFBQU1DLGdCQUFnQixHQUFHLElBQUlOLHVCQUFKLEVBQXpCO0FBQ0EsMkhBQU1NLGdCQUFOO0FBQ0EsVUFBS0EsZ0JBQUwsR0FBd0JBLGdCQUF4QjtBQUhZO0FBSWI7Ozs7Z0NBR0NKLFMsRUFDQUssUSxFQUNBQyxPLEVBQ3FCO0FBQ3JCLFVBQUlDLE9BQUosRUFBYTtBQUNYUixRQUFBQSxzQkFBc0IsQ0FBQ0MsU0FBRCxDQUF0QjtBQUNEOztBQUNELGdJQUF5QkEsU0FBekIsRUFBb0NLLFFBQXBDLEVBQThDQyxPQUE5QztBQUNEOzs7dUNBRWtCTixTLEVBQW9CO0FBQ3JDLFVBQUlPLE9BQUosRUFBYTtBQUNYUixRQUFBQSxzQkFBc0IsQ0FBQ0MsU0FBRCxDQUF0QjtBQUNEOztBQUNELGdJQUF5QkEsU0FBekI7QUFDRDs7O3VDQUVrQlEsWSxFQUFtQztBQUNwRCxVQUFJQSxZQUFZLENBQUNDLE9BQWIsS0FBeUIsSUFBN0IsRUFBbUM7QUFDakNELFFBQUFBLFlBQVksQ0FBQ0MsT0FBYixDQUFxQkMsa0JBQXJCLENBQXdDRixZQUF4QztBQUNELE9BRkQsTUFFTztBQUNMLGtJQUF5QkEsWUFBekI7QUFDRDtBQUNGOzs7RUFqQ2lDWixZOztBQW9DcENlLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQixJQUFJVCxxQkFBSixFQUFqQiIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDE1LXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICogQGZvcm1hdFxuICogQGZsb3dcbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbmNvbnN0IEV2ZW50RW1pdHRlciA9IHJlcXVpcmUoJy4uL3ZlbmRvci9lbWl0dGVyL0V2ZW50RW1pdHRlcicpO1xuY29uc3QgRXZlbnRTdWJzY3JpcHRpb25WZW5kb3IgPSByZXF1aXJlKCcuLi92ZW5kb3IvZW1pdHRlci9FdmVudFN1YnNjcmlwdGlvblZlbmRvcicpO1xuXG5pbXBvcnQgdHlwZSBFbWl0dGVyU3Vic2NyaXB0aW9uIGZyb20gJy4uL3ZlbmRvci9lbWl0dGVyL0VtaXR0ZXJTdWJzY3JpcHRpb24nO1xuXG5mdW5jdGlvbiBjaGVja05hdGl2ZUV2ZW50TW9kdWxlKGV2ZW50VHlwZTogP3N0cmluZykge1xuICBpZiAoZXZlbnRUeXBlKSB7XG4gICAgaWYgKGV2ZW50VHlwZS5sYXN0SW5kZXhPZignc3RhdHVzQmFyJywgMCkgPT09IDApIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICAgJ2AnICtcbiAgICAgICAgICBldmVudFR5cGUgK1xuICAgICAgICAgICdgIGV2ZW50IHNob3VsZCBiZSByZWdpc3RlcmVkIHZpYSB0aGUgU3RhdHVzQmFySU9TIG1vZHVsZScsXG4gICAgICApO1xuICAgIH1cbiAgICBpZiAoZXZlbnRUeXBlLmxhc3RJbmRleE9mKCdrZXlib2FyZCcsIDApID09PSAwKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICAgICdgJyArXG4gICAgICAgICAgZXZlbnRUeXBlICtcbiAgICAgICAgICAnYCBldmVudCBzaG91bGQgYmUgcmVnaXN0ZXJlZCB2aWEgdGhlIEtleWJvYXJkIG1vZHVsZScsXG4gICAgICApO1xuICAgIH1cbiAgICBpZiAoZXZlbnRUeXBlID09PSAnYXBwU3RhdGVEaWRDaGFuZ2UnIHx8IGV2ZW50VHlwZSA9PT0gJ21lbW9yeVdhcm5pbmcnKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICAgICdgJyArXG4gICAgICAgICAgZXZlbnRUeXBlICtcbiAgICAgICAgICAnYCBldmVudCBzaG91bGQgYmUgcmVnaXN0ZXJlZCB2aWEgdGhlIEFwcFN0YXRlIG1vZHVsZScsXG4gICAgICApO1xuICAgIH1cbiAgfVxufVxuXG4vKipcbiAqIERlcHJlY2F0ZWQgLSBzdWJjbGFzcyBOYXRpdmVFdmVudEVtaXR0ZXIgdG8gY3JlYXRlIGdyYW51bGFyIGV2ZW50IG1vZHVsZXMgaW5zdGVhZCBvZlxuICogYWRkaW5nIGFsbCBldmVudCBsaXN0ZW5lcnMgZGlyZWN0bHkgdG8gUkNURGV2aWNlRXZlbnRFbWl0dGVyLlxuICovXG5jbGFzcyBSQ1REZXZpY2VFdmVudEVtaXR0ZXIgZXh0ZW5kcyBFdmVudEVtaXR0ZXIge1xuICBzaGFyZWRTdWJzY3JpYmVyOiBFdmVudFN1YnNjcmlwdGlvblZlbmRvcjtcblxuICBjb25zdHJ1Y3RvcigpIHtcbiAgICBjb25zdCBzaGFyZWRTdWJzY3JpYmVyID0gbmV3IEV2ZW50U3Vic2NyaXB0aW9uVmVuZG9yKCk7XG4gICAgc3VwZXIoc2hhcmVkU3Vic2NyaWJlcik7XG4gICAgdGhpcy5zaGFyZWRTdWJzY3JpYmVyID0gc2hhcmVkU3Vic2NyaWJlcjtcbiAgfVxuXG4gIGFkZExpc3RlbmVyKFxuICAgIGV2ZW50VHlwZTogc3RyaW5nLFxuICAgIGxpc3RlbmVyOiBGdW5jdGlvbixcbiAgICBjb250ZXh0OiA/T2JqZWN0LFxuICApOiBFbWl0dGVyU3Vic2NyaXB0aW9uIHtcbiAgICBpZiAoX19ERVZfXykge1xuICAgICAgY2hlY2tOYXRpdmVFdmVudE1vZHVsZShldmVudFR5cGUpO1xuICAgIH1cbiAgICByZXR1cm4gc3VwZXIuYWRkTGlzdGVuZXIoZXZlbnRUeXBlLCBsaXN0ZW5lciwgY29udGV4dCk7XG4gIH1cblxuICByZW1vdmVBbGxMaXN0ZW5lcnMoZXZlbnRUeXBlOiA/c3RyaW5nKSB7XG4gICAgaWYgKF9fREVWX18pIHtcbiAgICAgIGNoZWNrTmF0aXZlRXZlbnRNb2R1bGUoZXZlbnRUeXBlKTtcbiAgICB9XG4gICAgc3VwZXIucmVtb3ZlQWxsTGlzdGVuZXJzKGV2ZW50VHlwZSk7XG4gIH1cblxuICByZW1vdmVTdWJzY3JpcHRpb24oc3Vic2NyaXB0aW9uOiBFbWl0dGVyU3Vic2NyaXB0aW9uKSB7XG4gICAgaWYgKHN1YnNjcmlwdGlvbi5lbWl0dGVyICE9PSB0aGlzKSB7XG4gICAgICBzdWJzY3JpcHRpb24uZW1pdHRlci5yZW1vdmVTdWJzY3JpcHRpb24oc3Vic2NyaXB0aW9uKTtcbiAgICB9IGVsc2Uge1xuICAgICAgc3VwZXIucmVtb3ZlU3Vic2NyaXB0aW9uKHN1YnNjcmlwdGlvbik7XG4gICAgfVxuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gbmV3IFJDVERldmljZUV2ZW50RW1pdHRlcigpO1xuIl19