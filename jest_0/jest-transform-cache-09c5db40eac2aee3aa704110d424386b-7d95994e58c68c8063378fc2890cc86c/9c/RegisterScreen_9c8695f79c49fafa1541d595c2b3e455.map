{"version":3,"sources":["RegisterScreen.js"],"names":["RegisterScreen","state","name","email","password","passwordConfirmation","phone","signUp","console","log","err","styles","container","registerContainer","mainColor","setState","React","Component","StyleSheet","create","flex","backgroundColor","padding"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {\n  View,\n  StyleSheet,\n  Text\n} from 'react-native'\n\nimport {Button} from 'react-native-material-ui';\nimport {TextField} from 'react-native-material-textfield';\nimport {mainColor} from '../constants/Colors';\n\nexport default class RegisterScreen extends React.Component {\n  state = {\n    name: '', email: '', password: '', passwordConfirmation: '', phone: ''\n  }\n\n  signUp = async () => {\n    const { name, email, password, passwordConfirmation, phone } = this.state\n    try {\n      console.log('user successfully signed up!: ', name)\n    } catch (err) {\n      console.log('error signing up: ', err)\n    }\n  }\n \n  render() {\n    let {name, email, password, passwordConfirmation, phone} = this.state\n\n    return (\n      <View style={styles.container}>\n        <View style={styles.registerContainer}>\n            <TextField \n              tintColor={mainColor} \n              label={'Nome'} \n              value={name}\n              onChangeText={ name => this.setState({ name })}/>        \n            <TextField \n              tintColor={mainColor} \n              label={'Telefone'} \n              value={phone} \n              onChangeText={ phone => this.setState({ phone })}/>              \n            <TextField \n              tintColor={mainColor} \n              label={'Email'} \n              value={email}\n              autoCapitalize=\"none\"\n              onChangeText={ email => this.setState({ email })}/>\n            <TextField \n              tintColor={mainColor}\n              label={'Senha'} \n              value={password}\n              secureTextEntry={true}\n              autoCapitalize=\"none\" \n              onChangeText={ password => this.setState({ password })}/>\n            <TextField \n              tintColor={mainColor}\n              label={'Confirmar senha'} \n              value={passwordConfirmation}\n              secureTextEntry={true}\n              autoCapitalize=\"none\" \n              onChangeText={ passwordConfirmation => this.setState({ passwordConfirmation })}/>              \n\n            <Button raised primary text='Registrar' onPress={this.signUp}>\n              <Text>Registrar</Text>\n            </Button>\n        </View>\n      </View>\n    )\n  }\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: '#fff',\n    },\n    registerContainer: {\n        padding: 50,\n    }  \n  \n})"]}