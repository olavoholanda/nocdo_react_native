ea4f2a96d111848c64a5240263012b5f
'use strict';

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread"));

var ColorPropType = require("../../StyleSheet/ColorPropType");

var LayoutPropTypes = require("../../StyleSheet/LayoutPropTypes");

var ReactPropTypes = require('prop-types');

var ShadowPropTypesIOS = require("./ShadowPropTypesIOS");

var TransformPropTypes = require("../../StyleSheet/TransformPropTypes");

var ViewStylePropTypes = (0, _objectSpread2.default)({}, LayoutPropTypes, ShadowPropTypesIOS, TransformPropTypes, {
  backfaceVisibility: ReactPropTypes.oneOf(['visible', 'hidden']),
  backgroundColor: ColorPropType,
  borderColor: ColorPropType,
  borderTopColor: ColorPropType,
  borderRightColor: ColorPropType,
  borderBottomColor: ColorPropType,
  borderLeftColor: ColorPropType,
  borderStartColor: ColorPropType,
  borderEndColor: ColorPropType,
  borderRadius: ReactPropTypes.number,
  borderTopLeftRadius: ReactPropTypes.number,
  borderTopRightRadius: ReactPropTypes.number,
  borderTopStartRadius: ReactPropTypes.number,
  borderTopEndRadius: ReactPropTypes.number,
  borderBottomLeftRadius: ReactPropTypes.number,
  borderBottomRightRadius: ReactPropTypes.number,
  borderBottomStartRadius: ReactPropTypes.number,
  borderBottomEndRadius: ReactPropTypes.number,
  borderStyle: ReactPropTypes.oneOf(['solid', 'dotted', 'dashed']),
  borderWidth: ReactPropTypes.number,
  borderTopWidth: ReactPropTypes.number,
  borderRightWidth: ReactPropTypes.number,
  borderBottomWidth: ReactPropTypes.number,
  borderLeftWidth: ReactPropTypes.number,
  opacity: ReactPropTypes.number,
  elevation: ReactPropTypes.number
});
module.exports = ViewStylePropTypes;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlZpZXdTdHlsZVByb3BUeXBlcy5qcyJdLCJuYW1lcyI6WyJDb2xvclByb3BUeXBlIiwicmVxdWlyZSIsIkxheW91dFByb3BUeXBlcyIsIlJlYWN0UHJvcFR5cGVzIiwiU2hhZG93UHJvcFR5cGVzSU9TIiwiVHJhbnNmb3JtUHJvcFR5cGVzIiwiVmlld1N0eWxlUHJvcFR5cGVzIiwiYmFja2ZhY2VWaXNpYmlsaXR5Iiwib25lT2YiLCJiYWNrZ3JvdW5kQ29sb3IiLCJib3JkZXJDb2xvciIsImJvcmRlclRvcENvbG9yIiwiYm9yZGVyUmlnaHRDb2xvciIsImJvcmRlckJvdHRvbUNvbG9yIiwiYm9yZGVyTGVmdENvbG9yIiwiYm9yZGVyU3RhcnRDb2xvciIsImJvcmRlckVuZENvbG9yIiwiYm9yZGVyUmFkaXVzIiwibnVtYmVyIiwiYm9yZGVyVG9wTGVmdFJhZGl1cyIsImJvcmRlclRvcFJpZ2h0UmFkaXVzIiwiYm9yZGVyVG9wU3RhcnRSYWRpdXMiLCJib3JkZXJUb3BFbmRSYWRpdXMiLCJib3JkZXJCb3R0b21MZWZ0UmFkaXVzIiwiYm9yZGVyQm90dG9tUmlnaHRSYWRpdXMiLCJib3JkZXJCb3R0b21TdGFydFJhZGl1cyIsImJvcmRlckJvdHRvbUVuZFJhZGl1cyIsImJvcmRlclN0eWxlIiwiYm9yZGVyV2lkdGgiLCJib3JkZXJUb3BXaWR0aCIsImJvcmRlclJpZ2h0V2lkdGgiLCJib3JkZXJCb3R0b21XaWR0aCIsImJvcmRlckxlZnRXaWR0aCIsIm9wYWNpdHkiLCJlbGV2YXRpb24iLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFVQTs7Ozs7O0FBRUEsSUFBTUEsYUFBYSxHQUFHQyxPQUFPLGtDQUE3Qjs7QUFDQSxJQUFNQyxlQUFlLEdBQUdELE9BQU8sb0NBQS9COztBQUNBLElBQU1FLGNBQWMsR0FBR0YsT0FBTyxDQUFDLFlBQUQsQ0FBOUI7O0FBQ0EsSUFBTUcsa0JBQWtCLEdBQUdILE9BQU8sd0JBQWxDOztBQUNBLElBQU1JLGtCQUFrQixHQUFHSixPQUFPLHVDQUFsQzs7QUFLQSxJQUFNSyxrQkFBa0IsbUNBQ25CSixlQURtQixFQUVuQkUsa0JBRm1CLEVBR25CQyxrQkFIbUI7QUFJdEJFLEVBQUFBLGtCQUFrQixFQUFFSixjQUFjLENBQUNLLEtBQWYsQ0FBcUIsQ0FBQyxTQUFELEVBQVksUUFBWixDQUFyQixDQUpFO0FBS3RCQyxFQUFBQSxlQUFlLEVBQUVULGFBTEs7QUFNdEJVLEVBQUFBLFdBQVcsRUFBRVYsYUFOUztBQU90QlcsRUFBQUEsY0FBYyxFQUFFWCxhQVBNO0FBUXRCWSxFQUFBQSxnQkFBZ0IsRUFBRVosYUFSSTtBQVN0QmEsRUFBQUEsaUJBQWlCLEVBQUViLGFBVEc7QUFVdEJjLEVBQUFBLGVBQWUsRUFBRWQsYUFWSztBQVd0QmUsRUFBQUEsZ0JBQWdCLEVBQUVmLGFBWEk7QUFZdEJnQixFQUFBQSxjQUFjLEVBQUVoQixhQVpNO0FBYXRCaUIsRUFBQUEsWUFBWSxFQUFFZCxjQUFjLENBQUNlLE1BYlA7QUFjdEJDLEVBQUFBLG1CQUFtQixFQUFFaEIsY0FBYyxDQUFDZSxNQWRkO0FBZXRCRSxFQUFBQSxvQkFBb0IsRUFBRWpCLGNBQWMsQ0FBQ2UsTUFmZjtBQWdCdEJHLEVBQUFBLG9CQUFvQixFQUFFbEIsY0FBYyxDQUFDZSxNQWhCZjtBQWlCdEJJLEVBQUFBLGtCQUFrQixFQUFFbkIsY0FBYyxDQUFDZSxNQWpCYjtBQWtCdEJLLEVBQUFBLHNCQUFzQixFQUFFcEIsY0FBYyxDQUFDZSxNQWxCakI7QUFtQnRCTSxFQUFBQSx1QkFBdUIsRUFBRXJCLGNBQWMsQ0FBQ2UsTUFuQmxCO0FBb0J0Qk8sRUFBQUEsdUJBQXVCLEVBQUV0QixjQUFjLENBQUNlLE1BcEJsQjtBQXFCdEJRLEVBQUFBLHFCQUFxQixFQUFFdkIsY0FBYyxDQUFDZSxNQXJCaEI7QUFzQnRCUyxFQUFBQSxXQUFXLEVBQUV4QixjQUFjLENBQUNLLEtBQWYsQ0FBcUIsQ0FBQyxPQUFELEVBQVUsUUFBVixFQUFvQixRQUFwQixDQUFyQixDQXRCUztBQXVCdEJvQixFQUFBQSxXQUFXLEVBQUV6QixjQUFjLENBQUNlLE1BdkJOO0FBd0J0QlcsRUFBQUEsY0FBYyxFQUFFMUIsY0FBYyxDQUFDZSxNQXhCVDtBQXlCdEJZLEVBQUFBLGdCQUFnQixFQUFFM0IsY0FBYyxDQUFDZSxNQXpCWDtBQTBCdEJhLEVBQUFBLGlCQUFpQixFQUFFNUIsY0FBYyxDQUFDZSxNQTFCWjtBQTJCdEJjLEVBQUFBLGVBQWUsRUFBRTdCLGNBQWMsQ0FBQ2UsTUEzQlY7QUE0QnRCZSxFQUFBQSxPQUFPLEVBQUU5QixjQUFjLENBQUNlLE1BNUJGO0FBb0N0QmdCLEVBQUFBLFNBQVMsRUFBRS9CLGNBQWMsQ0FBQ2U7QUFwQ0osRUFBeEI7QUF1Q0FpQixNQUFNLENBQUNDLE9BQVAsR0FBaUI5QixrQkFBakIiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxNS1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICpcbiAqIEBmb3JtYXRcbiAqIEBmbG93XG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG5jb25zdCBDb2xvclByb3BUeXBlID0gcmVxdWlyZSgnLi4vLi4vU3R5bGVTaGVldC9Db2xvclByb3BUeXBlJyk7XG5jb25zdCBMYXlvdXRQcm9wVHlwZXMgPSByZXF1aXJlKCcuLi8uLi9TdHlsZVNoZWV0L0xheW91dFByb3BUeXBlcycpO1xuY29uc3QgUmVhY3RQcm9wVHlwZXMgPSByZXF1aXJlKCdwcm9wLXR5cGVzJyk7XG5jb25zdCBTaGFkb3dQcm9wVHlwZXNJT1MgPSByZXF1aXJlKCcuL1NoYWRvd1Byb3BUeXBlc0lPUycpO1xuY29uc3QgVHJhbnNmb3JtUHJvcFR5cGVzID0gcmVxdWlyZSgnLi4vLi4vU3R5bGVTaGVldC9UcmFuc2Zvcm1Qcm9wVHlwZXMnKTtcblxuLyoqXG4gKiBXYXJuaW5nOiBTb21lIG9mIHRoZXNlIHByb3BlcnRpZXMgbWF5IG5vdCBiZSBzdXBwb3J0ZWQgaW4gYWxsIHJlbGVhc2VzLlxuICovXG5jb25zdCBWaWV3U3R5bGVQcm9wVHlwZXMgPSB7XG4gIC4uLkxheW91dFByb3BUeXBlcyxcbiAgLi4uU2hhZG93UHJvcFR5cGVzSU9TLFxuICAuLi5UcmFuc2Zvcm1Qcm9wVHlwZXMsXG4gIGJhY2tmYWNlVmlzaWJpbGl0eTogUmVhY3RQcm9wVHlwZXMub25lT2YoWyd2aXNpYmxlJywgJ2hpZGRlbiddKSxcbiAgYmFja2dyb3VuZENvbG9yOiBDb2xvclByb3BUeXBlLFxuICBib3JkZXJDb2xvcjogQ29sb3JQcm9wVHlwZSxcbiAgYm9yZGVyVG9wQ29sb3I6IENvbG9yUHJvcFR5cGUsXG4gIGJvcmRlclJpZ2h0Q29sb3I6IENvbG9yUHJvcFR5cGUsXG4gIGJvcmRlckJvdHRvbUNvbG9yOiBDb2xvclByb3BUeXBlLFxuICBib3JkZXJMZWZ0Q29sb3I6IENvbG9yUHJvcFR5cGUsXG4gIGJvcmRlclN0YXJ0Q29sb3I6IENvbG9yUHJvcFR5cGUsXG4gIGJvcmRlckVuZENvbG9yOiBDb2xvclByb3BUeXBlLFxuICBib3JkZXJSYWRpdXM6IFJlYWN0UHJvcFR5cGVzLm51bWJlcixcbiAgYm9yZGVyVG9wTGVmdFJhZGl1czogUmVhY3RQcm9wVHlwZXMubnVtYmVyLFxuICBib3JkZXJUb3BSaWdodFJhZGl1czogUmVhY3RQcm9wVHlwZXMubnVtYmVyLFxuICBib3JkZXJUb3BTdGFydFJhZGl1czogUmVhY3RQcm9wVHlwZXMubnVtYmVyLFxuICBib3JkZXJUb3BFbmRSYWRpdXM6IFJlYWN0UHJvcFR5cGVzLm51bWJlcixcbiAgYm9yZGVyQm90dG9tTGVmdFJhZGl1czogUmVhY3RQcm9wVHlwZXMubnVtYmVyLFxuICBib3JkZXJCb3R0b21SaWdodFJhZGl1czogUmVhY3RQcm9wVHlwZXMubnVtYmVyLFxuICBib3JkZXJCb3R0b21TdGFydFJhZGl1czogUmVhY3RQcm9wVHlwZXMubnVtYmVyLFxuICBib3JkZXJCb3R0b21FbmRSYWRpdXM6IFJlYWN0UHJvcFR5cGVzLm51bWJlcixcbiAgYm9yZGVyU3R5bGU6IFJlYWN0UHJvcFR5cGVzLm9uZU9mKFsnc29saWQnLCAnZG90dGVkJywgJ2Rhc2hlZCddKSxcbiAgYm9yZGVyV2lkdGg6IFJlYWN0UHJvcFR5cGVzLm51bWJlcixcbiAgYm9yZGVyVG9wV2lkdGg6IFJlYWN0UHJvcFR5cGVzLm51bWJlcixcbiAgYm9yZGVyUmlnaHRXaWR0aDogUmVhY3RQcm9wVHlwZXMubnVtYmVyLFxuICBib3JkZXJCb3R0b21XaWR0aDogUmVhY3RQcm9wVHlwZXMubnVtYmVyLFxuICBib3JkZXJMZWZ0V2lkdGg6IFJlYWN0UHJvcFR5cGVzLm51bWJlcixcbiAgb3BhY2l0eTogUmVhY3RQcm9wVHlwZXMubnVtYmVyLFxuICAvKipcbiAgICogKEFuZHJvaWQtb25seSkgU2V0cyB0aGUgZWxldmF0aW9uIG9mIGEgdmlldywgdXNpbmcgQW5kcm9pZCdzIHVuZGVybHlpbmdcbiAgICogW2VsZXZhdGlvbiBBUEldKGh0dHBzOi8vZGV2ZWxvcGVyLmFuZHJvaWQuY29tL3RyYWluaW5nL21hdGVyaWFsL3NoYWRvd3MtY2xpcHBpbmcuaHRtbCNFbGV2YXRpb24pLlxuICAgKiBUaGlzIGFkZHMgYSBkcm9wIHNoYWRvdyB0byB0aGUgaXRlbSBhbmQgYWZmZWN0cyB6LW9yZGVyIGZvciBvdmVybGFwcGluZyB2aWV3cy5cbiAgICogT25seSBzdXBwb3J0ZWQgb24gQW5kcm9pZCA1LjArLCBoYXMgbm8gZWZmZWN0IG9uIGVhcmxpZXIgdmVyc2lvbnMuXG4gICAqIEBwbGF0Zm9ybSBhbmRyb2lkXG4gICAqL1xuICBlbGV2YXRpb246IFJlYWN0UHJvcFR5cGVzLm51bWJlcixcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gVmlld1N0eWxlUHJvcFR5cGVzO1xuIl19