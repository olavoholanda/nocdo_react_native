{"version":3,"sources":["RippleFeedbackIOS.react.js"],"names":["propTypes","testID","PropTypes","string","color","maxOpacity","number","disabled","bool","children","element","onPress","func","onLongPress","onPressIn","onPressOut","style","shape","container","ViewPropTypes","defaultProps","black","alpha","toString","styles","StyleSheet","create","absoluteFillObject","overflow","MAX_DIAMETER","isRippleVisible","RippleFeedbackIOS","props","context","onLayoutChanged","event","nativeEvent","layout","width","height","diameter","Math","ceil","sqrt","setState","min","e","state","opacityBackgroundValue","longPress","Animated","timing","toValue","duration","useNativeDriver","start","opacityRippleValue","scaleValue","parallel","easing","Easing","in","quad","out","setDefaultAnimatedValues","pressX","locationX","pressY","locationY","setValue","renderRippleView","rippleColor","position","top","left","borderRadius","transform","scale","opacity","backgroundColor","zIndex","ELEVATION_ZINDEX","renderOpacityBackground","isDark","Value","parent","React","Children","only","ripple","cloneElement","PureComponent"],"mappings":"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","sourcesContent":["/* eslint-disable import/no-unresolved, import/extensions */\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Animated,\n  Easing,\n  View,\n  TouchableWithoutFeedback,\n  StyleSheet,\n} from 'react-native';\n/* eslint-enable import/no-unresolved, import/extensions */\nimport Color from 'color';\nimport { ViewPropTypes } from '../utils';\nimport { black } from '../styles/colors';\nimport { ELEVATION_ZINDEX } from '../styles/constants';\n\nconst propTypes = {\n  testID: PropTypes.string,\n  color: PropTypes.string,\n  /**\n   * Max opacity of ripple effect\n   */\n  maxOpacity: PropTypes.number,\n  /**\n   * If true, the interaction will be forbidden\n   */\n  disabled: PropTypes.bool,\n  /**\n   * It'll be used instead of icon (see props name) if exists\n   */\n  children: PropTypes.element,\n  /**\n   * Call when icon was pressed\n   */\n  onPress: PropTypes.func,\n  onLongPress: PropTypes.func,\n  onPressIn: PropTypes.func,\n  onPressOut: PropTypes.func,\n  style: PropTypes.shape({\n    container: ViewPropTypes.style,\n  }),\n};\nconst defaultProps = {\n  testID: null,\n  children: null,\n  onPress: null,\n  onLongPress: null,\n  onPressIn: null,\n  onPressOut: null,\n  color: Color(black)\n    .alpha(0.87)\n    .toString(),\n  disabled: false,\n  maxOpacity: 0.16,\n  style: {},\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    ...StyleSheet.absoluteFillObject,\n    overflow: 'hidden',\n  },\n});\n\n/**\n * Usualy we use width and height to compute this. In case, the width of container is too big\n * we use this constant as a width of ripple effect.\n */\nconst MAX_DIAMETER = 200;\n\nconst isRippleVisible = ({ onPress, onLongPress, onPressIn, onPressOut }) =>\n  onPress || onLongPress || onPressIn || onPressOut;\n\nclass RippleFeedbackIOS extends PureComponent {\n  constructor(props, context) {\n    super(props, context);\n\n    // https://material.google.com/components/buttons.html#buttons-toggle-buttons\n    const maxOpacity = Color(props.color).isDark() ? 0.12 : 0.3;\n\n    this.state = {\n      scaleValue: new Animated.Value(0),\n      opacityRippleValue: new Animated.Value(maxOpacity),\n      opacityBackgroundValue: new Animated.Value(0),\n      diameter: MAX_DIAMETER,\n      maxOpacity,\n      rippleColor: Color(props.color),\n    };\n  }\n\n  onLayoutChanged = event => {\n    try {\n      // get width and height of wrapper\n      const {\n        nativeEvent: {\n          layout: { width, height },\n        },\n      } = event;\n      const diameter = Math.ceil(Math.sqrt(width * width + height * height));\n\n      this.setState({\n        diameter: Math.min(diameter, MAX_DIAMETER),\n      });\n    } catch (e) {\n      this.setState({\n        diameter: MAX_DIAMETER,\n      });\n    }\n  };\n\n  onLongPress = () => {\n    const { onLongPress } = this.props;\n\n    const { maxOpacity, opacityBackgroundValue } = this.state;\n    // Long press has to be indicated like this because we need to animate containers back to\n    // default values in onPressOut function\n    this.longPress = true;\n\n    // Animation of long press is slightly different than onPress animation\n    Animated.timing(opacityBackgroundValue, {\n      toValue: maxOpacity / 2,\n      duration: 700,\n      useNativeDriver: true,\n    }).start();\n\n    if (onLongPress) {\n      onLongPress();\n    }\n  };\n\n  onPress = () => {\n    const { onPress } = this.props;\n    const {\n      maxOpacity,\n      diameter,\n      opacityBackgroundValue,\n      opacityRippleValue,\n      scaleValue,\n    } = this.state;\n\n    Animated.parallel([\n      // Display background layer thru whole over the view\n      Animated.timing(opacityBackgroundValue, {\n        toValue: maxOpacity / 2,\n        duration: 125 + diameter,\n        easing: Easing.in(Easing.quad),\n        useNativeDriver: true,\n      }),\n      // Opacity of ripple effect starts on maxOpacity and goes to 0\n      Animated.timing(opacityRippleValue, {\n        toValue: 0,\n        duration: 125 + diameter,\n        useNativeDriver: true,\n      }),\n      // Scale of ripple effect starts at 0 and goes to 1\n      Animated.timing(scaleValue, {\n        toValue: 1,\n        duration: 125 + diameter,\n        easing: Easing.out(Easing.quad),\n        useNativeDriver: true,\n      }),\n    ]).start(() => {\n      // After the effect is fully displayed we need background to be animated back to default\n      Animated.timing(opacityBackgroundValue, {\n        toValue: 0,\n        duration: 225,\n        easing: Easing.out(Easing.quad),\n        useNativeDriver: true,\n      }).start();\n\n      this.setDefaultAnimatedValues();\n    });\n\n    if (onPress) {\n      onPress();\n    }\n  };\n\n  onPressIn = event => {\n    const { onPressIn } = this.props;\n\n    // because we need ripple effect to be displayed exactly from press point\n    this.setState({\n      pressX: event.nativeEvent.locationX,\n      pressY: event.nativeEvent.locationY,\n    });\n\n    if (onPressIn) {\n      onPressIn();\n    }\n  };\n\n  onPressOut = () => {\n    const { diameter } = this.state;\n    const { onPressOut } = this.props;\n\n    const {\n      opacityBackgroundValue,\n      opacityRippleValue,\n      scaleValue,\n    } = this.state;\n\n    // When user use onPress all animation happens in onPress method. But when user use long\n    // press. We displaye background layer in onLongPress and then we need to animate ripple\n    // effect that is done here.\n    if (this.longPress) {\n      this.longPress = false;\n      Animated.parallel([\n        // Hide opacity background layer, slowly. It has to be done later than ripple\n        // effect\n        Animated.timing(opacityBackgroundValue, {\n          toValue: 0,\n          duration: 500 + diameter,\n          useNativeDriver: true,\n        }),\n        // Opacity of ripple effect starts on maxOpacity and goes to 0\n        Animated.timing(opacityRippleValue, {\n          toValue: 0,\n          duration: 125 + diameter,\n          useNativeDriver: true,\n        }),\n        // Scale of ripple effect starts at 0 and goes to 1\n        Animated.timing(scaleValue, {\n          toValue: 1,\n          duration: 125 + diameter,\n          easing: Easing.out(Easing.quad),\n          useNativeDriver: true,\n        }),\n      ]).start(this.setDefaultAnimatedValues);\n    }\n\n    if (onPressOut) {\n      onPressOut();\n    }\n  };\n\n  setDefaultAnimatedValues = () => {\n    const { maxOpacity, scaleValue, opacityRippleValue } = this.state;\n    // We can set up scale to 0 and opacity back to maxOpacity\n    scaleValue.setValue(0);\n    opacityRippleValue.setValue(maxOpacity);\n  };\n\n  renderRippleView = () => {\n    const {\n      scaleValue,\n      opacityRippleValue,\n      diameter,\n      pressX,\n      pressY,\n      rippleColor,\n    } = this.state;\n\n    return (\n      // we need set zindex for iOS, because the components with elevation have the\n      // zindex set as well, thus, there could be displayed backgroundColor of\n      // component with bigger zindex - and that's not good\n      <Animated.View\n        key=\"ripple-view\"\n        pointerEvents=\"none\"\n        style={[\n          {\n            position: 'absolute',\n            top: (pressY || 0) - diameter / 2,\n            left: (pressX || 0) - diameter / 2,\n            width: diameter,\n            height: diameter,\n            borderRadius: diameter / 2,\n            transform: [{ scale: scaleValue }],\n            opacity: opacityRippleValue,\n            backgroundColor: rippleColor.toString(),\n            zIndex: ELEVATION_ZINDEX,\n          },\n        ]}\n      />\n    );\n  };\n\n  renderOpacityBackground = () => {\n    const { opacityBackgroundValue, rippleColor } = this.state;\n\n    return (\n      // we need set zindex for iOS, because the components with elevation have the\n      // zindex set as well, thus, there could be displayed backgroundColor of\n      // component with bigger zindex - and that's not good\n      <Animated.View\n        key=\"ripple-opacity\"\n        pointerEvents=\"none\"\n        style={[\n          {\n            ...StyleSheet.absoluteFillObject,\n            opacity: opacityBackgroundValue,\n            backgroundColor: rippleColor.toString(),\n            zIndex: ELEVATION_ZINDEX,\n          },\n        ]}\n      />\n    );\n  };\n\n  render() {\n    const { children, disabled, style, testID } = this.props;\n\n    if (!isRippleVisible(this.props)) {\n      return children;\n    }\n\n    const parent = React.Children.only(children);\n\n    const ripple = (\n      <View\n        key=\"ripple-feedback-layer\"\n        style={[styles.container, style.container]}\n        pointerEvents=\"none\"\n      >\n        {this.renderOpacityBackground()}\n        {this.renderRippleView()}\n      </View>\n    );\n\n    return (\n      <TouchableWithoutFeedback\n        testID={testID}\n        disabled={disabled}\n        onLayout={this.onLayoutChanged}\n        onPressIn={this.onPressIn}\n        onLongPress={this.onLongPress}\n        onPressOut={this.onPressOut}\n        onPress={this.onPress}\n      >\n        {React.cloneElement(parent, [], parent.props.children, ripple)}\n      </TouchableWithoutFeedback>\n    );\n  }\n}\n\nRippleFeedbackIOS.propTypes = propTypes;\nRippleFeedbackIOS.defaultProps = defaultProps;\n\nexport default RippleFeedbackIOS;\n"]}